### YamlMime:PythonClass
uid: azure.ai.projects.models.RedTeam
name: RedTeam
fullName: azure.ai.projects.models.RedTeam
module: azure.ai.projects.models
summary: Red team details.
constructor:
  syntax: 'RedTeam(*args: Any, **kwargs: Any)'
variables:
- description: Identifier of the red team run. Required.
  name: name
  types:
  - <xref:str>
- description: Name of the red-team run.
  name: display_name
  types:
  - <xref:str>
- description: Number of simulation rounds.
  name: num_turns
  types:
  - <xref:int>
- description: List of attack strategies or nested lists of attack strategies.
  name: attack_strategies
  types:
  - <xref:list>[<xref:str>
  - <xref:azure.ai.projects.models.AttackStrategy>]
- description: 'Simulation-only or Simulation + Evaluation. Default false, if true
    the

    scan outputs conversation not evaluation result.'
  name: simulation_only
  types:
  - <xref:bool>
- description: List of risk categories to generate attack objectives for.
  name: risk_categories
  types:
  - <xref:list>[<xref:str>
  - <xref:azure.ai.projects.models.RiskCategory>]
- description: 'Application scenario for the red team operation, to generate

    scenario specific attacks.'
  name: application_scenario
  types:
  - <xref:str>
- description: Red team's tags. Unlike properties, tags are fully mutable.
  name: tags
  types:
  - <xref:dict>[<xref:str>, <xref:str>]
- description: 'Red team''s properties. Unlike tags, properties are add-only. Once
    added, a

    property cannot be removed.'
  name: properties
  types:
  - <xref:dict>[<xref:str>, <xref:str>]
- description: Status of the red-team. It is set by service and is read-only.
  name: status
  types:
  - <xref:str>
- description: Target configuration for the red-team run. Required.
  name: target
  types:
  - <xref:azure.ai.projects.models.TargetConfig>
methods:
- uid: azure.ai.projects.models.RedTeam.as_dict
  name: as_dict
  summary: Return a dict that can be turned into json using json.dump.
  signature: 'as_dict(*, exclude_readonly: bool = False) -> Dict[str, Any]'
  keywordOnlyParameters:
  - name: exclude_readonly
    description: Whether to remove the readonly properties.
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.ai.projects.models.RedTeam.clear
  name: clear
  summary: Remove all items from D.
  signature: clear() -> None
- uid: azure.ai.projects.models.RedTeam.copy
  name: copy
  signature: copy() -> Model
- uid: azure.ai.projects.models.RedTeam.get
  name: get
  summary: 'Get the value for key if key is in the dictionary, else default.

    :param str key: The key to look up.

    :param any default: The value to return if key is not in the dictionary. Defaults
    to None

    :returns: D[k] if k in D, else d.

    :rtype: any'
  signature: 'get(key: str, default: Any = None) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
    defaultValue: None
- uid: azure.ai.projects.models.RedTeam.items
  name: items
  signature: items() -> ItemsView[str, Any]
  return:
    description: set-like object providing a view on D's items
    types:
    - <xref:typing.ItemsView>
- uid: azure.ai.projects.models.RedTeam.keys
  name: keys
  signature: keys() -> KeysView[str]
  return:
    description: a set-like object providing a view on D's keys
    types:
    - <xref:typing.KeysView>
- uid: azure.ai.projects.models.RedTeam.pop
  name: pop
  summary: 'Removes specified key and return the corresponding value.

    :param str key: The key to pop.

    :param any default: The value to return if key is not in the dictionary

    :returns: The value corresponding to the key.

    :rtype: any

    :raises KeyError: If key is not found and default is not given.'
  signature: 'pop(key: str, default: ~typing.Any = <object object>) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
- uid: azure.ai.projects.models.RedTeam.popitem
  name: popitem
  summary: 'Removes and returns some (key, value) pair

    :returns: The (key, value) pair.

    :rtype: tuple

    :raises KeyError: if D is empty.'
  signature: popitem() -> Tuple[str, Any]
- uid: azure.ai.projects.models.RedTeam.setdefault
  name: setdefault
  summary: 'Same as calling D.get(k, d), and setting D[k]=d if k not found

    :param str key: The key to look up.

    :param any default: The value to set if key is not in the dictionary

    :returns: D[k] if k in D, else d.

    :rtype: any'
  signature: 'setdefault(key: str, default: ~typing.Any = <object object>) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
- uid: azure.ai.projects.models.RedTeam.update
  name: update
  summary: 'Updates D from mapping/iterable E and F.

    :param any args: Either a mapping object or an iterable of key-value pairs.'
  signature: 'update(*args: Any, **kwargs: Any) -> None'
- uid: azure.ai.projects.models.RedTeam.values
  name: values
  signature: values() -> ValuesView[Any]
  return:
    description: an object providing a view on D's values
    types:
    - <xref:typing.ValuesView>
attributes:
- uid: azure.ai.projects.models.RedTeam.application_scenario
  name: application_scenario
  summary: Application scenario for the red team operation, to generate scenario specific
    attacks.
  signature: 'application_scenario: str | None'
- uid: azure.ai.projects.models.RedTeam.attack_strategies
  name: attack_strategies
  summary: List of attack strategies or nested lists of attack strategies.
  signature: 'attack_strategies: List[str | _models.AttackStrategy] | None'
- uid: azure.ai.projects.models.RedTeam.display_name
  name: display_name
  summary: Name of the red-team run.
  signature: 'display_name: str | None'
- uid: azure.ai.projects.models.RedTeam.name
  name: name
  summary: Identifier of the red team run. Required.
  signature: 'name: str'
- uid: azure.ai.projects.models.RedTeam.num_turns
  name: num_turns
  summary: Number of simulation rounds.
  signature: 'num_turns: int | None'
- uid: azure.ai.projects.models.RedTeam.properties
  name: properties
  summary: 'Red team''s properties. Unlike tags, properties are add-only. Once added,
    a property cannot be

    removed.'
  signature: 'properties: Dict[str, str] | None'
- uid: azure.ai.projects.models.RedTeam.risk_categories
  name: risk_categories
  summary: List of risk categories to generate attack objectives for.
  signature: 'risk_categories: List[str | _models.RiskCategory] | None'
- uid: azure.ai.projects.models.RedTeam.simulation_only
  name: simulation_only
  summary: 'Simulation-only or Simulation + Evaluation. Default false, if true the
    scan outputs

    conversation not evaluation result.'
  signature: 'simulation_only: bool | None'
- uid: azure.ai.projects.models.RedTeam.status
  name: status
  summary: Status of the red-team. It is set by service and is read-only.
  signature: 'status: str | None'
- uid: azure.ai.projects.models.RedTeam.tags
  name: tags
  summary: Red team's tags. Unlike properties, tags are fully mutable.
  signature: 'tags: Dict[str, str] | None'
- uid: azure.ai.projects.models.RedTeam.target
  name: target
  summary: Target configuration for the red-team run. Required.
  signature: 'target: _models.TargetConfig'
