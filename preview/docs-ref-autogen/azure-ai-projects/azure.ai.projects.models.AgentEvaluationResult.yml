### YamlMime:PythonClass
uid: azure.ai.projects.models.AgentEvaluationResult
name: AgentEvaluationResult
fullName: azure.ai.projects.models.AgentEvaluationResult
module: azure.ai.projects.models
summary: Result for the agent evaluation evaluator run.
constructor:
  syntax: 'AgentEvaluationResult(*args: Any, **kwargs: Any)'
variables:
- description: 'Evaluator''s name. This is the name of the evaluator that was used
    to evaluate

    the agent''s completion. Required.'
  name: evaluator
  types:
  - <xref:str>
- description: Identifier of the evaluator. Required.
  name: evaluator_id
  types:
  - <xref:str>
- description: Score of the given evaluator. No restriction on range. Required.
  name: score
  types:
  - <xref:float>
- description: 'Status of the evaluator result. Options: Running, Completed, Failed,

    NotApplicable. Required.'
  name: status
  types:
  - <xref:str>
- description: Reasoning for the evaluation result.
  name: reason
  types:
  - <xref:str>
- description: Version of the evaluator that was used to evaluate the agent's completion.
  name: version
  types:
  - <xref:str>
- description: The unique identifier of the thread.
  name: thread_id
  types:
  - <xref:str>
- description: The unique identifier of the run. Required.
  name: run_id
  types:
  - <xref:str>
- description: A string explaining why there was an error, if applicable.
  name: error
  types:
  - <xref:str>
- description: 'Additional properties relevant to the evaluator. These will differ

    between evaluators.'
  name: additional_details
  types:
  - <xref:dict>[<xref:str>, <xref:str>]
methods:
- uid: azure.ai.projects.models.AgentEvaluationResult.as_dict
  name: as_dict
  summary: Return a dict that can be turned into json using json.dump.
  signature: 'as_dict(*, exclude_readonly: bool = False) -> Dict[str, Any]'
  keywordOnlyParameters:
  - name: exclude_readonly
    description: Whether to remove the readonly properties.
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.ai.projects.models.AgentEvaluationResult.clear
  name: clear
  summary: Remove all items from D.
  signature: clear() -> None
- uid: azure.ai.projects.models.AgentEvaluationResult.copy
  name: copy
  signature: copy() -> Model
- uid: azure.ai.projects.models.AgentEvaluationResult.get
  name: get
  summary: 'Get the value for key if key is in the dictionary, else default.

    :param str key: The key to look up.

    :param any default: The value to return if key is not in the dictionary. Defaults
    to None

    :returns: D[k] if k in D, else d.

    :rtype: any'
  signature: 'get(key: str, default: Any = None) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
    defaultValue: None
- uid: azure.ai.projects.models.AgentEvaluationResult.items
  name: items
  signature: items() -> ItemsView[str, Any]
  return:
    description: set-like object providing a view on D's items
    types:
    - <xref:typing.ItemsView>
- uid: azure.ai.projects.models.AgentEvaluationResult.keys
  name: keys
  signature: keys() -> KeysView[str]
  return:
    description: a set-like object providing a view on D's keys
    types:
    - <xref:typing.KeysView>
- uid: azure.ai.projects.models.AgentEvaluationResult.pop
  name: pop
  summary: 'Removes specified key and return the corresponding value.

    :param str key: The key to pop.

    :param any default: The value to return if key is not in the dictionary

    :returns: The value corresponding to the key.

    :rtype: any

    :raises KeyError: If key is not found and default is not given.'
  signature: 'pop(key: str, default: ~typing.Any = <object object>) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
- uid: azure.ai.projects.models.AgentEvaluationResult.popitem
  name: popitem
  summary: 'Removes and returns some (key, value) pair

    :returns: The (key, value) pair.

    :rtype: tuple

    :raises KeyError: if D is empty.'
  signature: popitem() -> Tuple[str, Any]
- uid: azure.ai.projects.models.AgentEvaluationResult.setdefault
  name: setdefault
  summary: 'Same as calling D.get(k, d), and setting D[k]=d if k not found

    :param str key: The key to look up.

    :param any default: The value to set if key is not in the dictionary

    :returns: D[k] if k in D, else d.

    :rtype: any'
  signature: 'setdefault(key: str, default: ~typing.Any = <object object>) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
- uid: azure.ai.projects.models.AgentEvaluationResult.update
  name: update
  summary: 'Updates D from mapping/iterable E and F.

    :param any args: Either a mapping object or an iterable of key-value pairs.'
  signature: 'update(*args: Any, **kwargs: Any) -> None'
- uid: azure.ai.projects.models.AgentEvaluationResult.values
  name: values
  signature: values() -> ValuesView[Any]
  return:
    description: an object providing a view on D's values
    types:
    - <xref:typing.ValuesView>
attributes:
- uid: azure.ai.projects.models.AgentEvaluationResult.additional_details
  name: additional_details
  summary: Additional properties relevant to the evaluator. These will differ between
    evaluators.
  signature: 'additional_details: Dict[str, str] | None'
- uid: azure.ai.projects.models.AgentEvaluationResult.error
  name: error
  summary: A string explaining why there was an error, if applicable.
  signature: 'error: str | None'
- uid: azure.ai.projects.models.AgentEvaluationResult.evaluator
  name: evaluator
  summary: 'Evaluator''s name. This is the name of the evaluator that was used to
    evaluate the agent''s

    completion. Required.'
  signature: 'evaluator: str'
- uid: azure.ai.projects.models.AgentEvaluationResult.evaluator_id
  name: evaluator_id
  summary: Identifier of the evaluator. Required.
  signature: 'evaluator_id: str'
- uid: azure.ai.projects.models.AgentEvaluationResult.reason
  name: reason
  summary: Reasoning for the evaluation result.
  signature: 'reason: str | None'
- uid: azure.ai.projects.models.AgentEvaluationResult.run_id
  name: run_id
  summary: The unique identifier of the run. Required.
  signature: 'run_id: str'
- uid: azure.ai.projects.models.AgentEvaluationResult.score
  name: score
  summary: Score of the given evaluator. No restriction on range. Required.
  signature: 'score: float'
- uid: azure.ai.projects.models.AgentEvaluationResult.status
  name: status
  summary: Running, Completed, Failed, NotApplicable. Required.
  signature: 'status: str'
- uid: azure.ai.projects.models.AgentEvaluationResult.thread_id
  name: thread_id
  summary: The unique identifier of the thread.
  signature: 'thread_id: str | None'
- uid: azure.ai.projects.models.AgentEvaluationResult.version
  name: version
  summary: Version of the evaluator that was used to evaluate the agent's completion.
  signature: 'version: str | None'
