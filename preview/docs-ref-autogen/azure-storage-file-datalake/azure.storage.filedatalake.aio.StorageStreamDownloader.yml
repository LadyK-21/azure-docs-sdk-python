### YamlMime:PythonClass
uid: azure.storage.filedatalake.aio.StorageStreamDownloader
name: StorageStreamDownloader
fullName: azure.storage.filedatalake.aio.StorageStreamDownloader
module: azure.storage.filedatalake.aio
summary: A streaming object to download from Azure Storage.
constructor:
  syntax: 'StorageStreamDownloader(downloader: Any)'
  parameters:
  - name: downloader
    isRequired: true
methods:
- uid: azure.storage.filedatalake.aio.StorageStreamDownloader.chunks
  name: chunks
  summary: 'Iterate over chunks in the download stream.Note, the iterator returned
    will

    iterate over the entire download content, regardless of any data that was

    previously read.


    NOTE: If the stream has been partially read, some data may be re-downloaded by
    the iterator.'
  signature: chunks() -> AsyncIterator[bytes]
  return:
    description: An async iterator over the chunks in the download stream.
    types:
    - <xref:typing.AsyncIterator>[<xref:bytes>]
- uid: azure.storage.filedatalake.aio.StorageStreamDownloader.read
  name: read
  summary: 'Read up to size bytes from the stream and return them. If size

    is unspecified or is -1, all bytes will be read.'
  signature: 'async read(size: int = -1) -> bytes'
  parameters:
  - name: size
    description: 'The number of bytes to download from the stream. Leave unspecified

      or set to -1 to download all bytes.'
    defaultValue: '-1'
    types:
    - <xref:int>
  return:
    description: The requested data as bytes. If the return value is empty, there
      is no more data to read.
    types:
    - <xref:bytes>
- uid: azure.storage.filedatalake.aio.StorageStreamDownloader.readall
  name: readall
  summary: 'Download the contents of this file.


    This operation is blocking until all data is downloaded.'
  signature: async readall() -> bytes
  return:
    description: The contents of the file.
    types:
    - <xref:bytes>
- uid: azure.storage.filedatalake.aio.StorageStreamDownloader.readinto
  name: readinto
  summary: Download the contents of this file to a stream.
  signature: 'async readinto(stream: IO[bytes]) -> int'
  parameters:
  - name: stream
    description: 'The stream to download to. This can be an open file-handle,

      or any writable stream. The stream must be seekable if the download

      uses more than one parallel connection.'
    isRequired: true
    types:
    - <xref:typing.IO>[<xref:bytes>]
  return:
    description: The number of bytes read.
    types:
    - <xref:int>
attributes:
- uid: azure.storage.filedatalake.aio.StorageStreamDownloader.name
  name: name
  summary: The name of the file being downloaded.
  signature: 'name: str'
- uid: azure.storage.filedatalake.aio.StorageStreamDownloader.properties
  name: properties
  summary: 'The properties of the file being downloaded. If only a range of the data
    is being

    downloaded, this will be reflected in the properties.'
  signature: 'properties: FileProperties'
- uid: azure.storage.filedatalake.aio.StorageStreamDownloader.size
  name: size
  summary: 'The size of the total data in the stream. This will be the byte range
    if specified,

    otherwise the total size of the file.'
  signature: 'size: int'
