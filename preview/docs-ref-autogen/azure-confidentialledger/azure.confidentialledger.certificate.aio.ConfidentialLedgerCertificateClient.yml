### YamlMime:PythonClass
uid: azure.confidentialledger.certificate.aio.ConfidentialLedgerCertificateClient
name: ConfidentialLedgerCertificateClient
fullName: azure.confidentialledger.certificate.aio.ConfidentialLedgerCertificateClient
module: azure.confidentialledger.certificate.aio
constructor:
  syntax: 'ConfidentialLedgerCertificateClient(certificate_endpoint: str | None =
    None, **kwargs: Any)'
  parameters:
  - name: certificate_endpoint
    description: 'The Identity Service URL, for example

      [https://identity.confidential-ledger.core.azure.com](https://identity.confidential-ledger.core.azure.com),
      defaults to None. If not provided,

      "[https://identity.confidential-ledger.core.azure.com](https://identity.confidential-ledger.core.azure.com)"
      will be used.'
    defaultValue: None
    types:
    - <xref:typing.Optional>[<xref:str>], <xref:optional>
  keywordOnlyParameters:
  - name: api_version
    description: 'Api Version. Default value is "2022-05-13". Note that overriding
      this

      default value may result in unsupported behavior.'
    types:
    - <xref:str>
methods:
- uid: azure.confidentialledger.certificate.aio.ConfidentialLedgerCertificateClient.close
  name: close
  signature: async close() -> None
- uid: azure.confidentialledger.certificate.aio.ConfidentialLedgerCertificateClient.get_ledger_identity
  name: get_ledger_identity
  summary: 'Gets identity information for a Confidential Ledger instance.


    Gets identity information for a Confidential Ledger instance.'
  signature: 'async get_ledger_identity(ledger_id: str, **kwargs: Any) -> MutableMapping[str,
    Any]'
  parameters:
  - name: ledger_id
    description: Id of the Confidential Ledger instance to get information for. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: JSON object
    types:
    - <xref:JSON>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
  examples:
  - "<!-- literal_block {\"ids\": [], \"classes\": [], \"names\": [], \"dupnames\"\
    : [], \"backrefs\": [], \"xml:space\": \"preserve\", \"force\": false, \"language\"\
    : \"python\", \"highlight_args\": {}, \"linenos\": false} -->\n\n````python\n\n\
    \   # response body for status code(s): 200\n   response == {\n       \"ledgerTlsCertificate\"\
    : \"str\",\n       \"ledgerId\": \"str\"\n   }\n   ````\n"
- uid: azure.confidentialledger.certificate.aio.ConfidentialLedgerCertificateClient.send_request
  name: send_request
  summary: 'Runs the network request through the client''s chained policies.


    ```


    >>> from azure.core.rest import HttpRequest

    >>> request = HttpRequest("GET", "https://www.example.org/")

    <HttpRequest [GET], url: ''https://www.example.org/''>

    >>> response = await client.send_request(request)

    <AsyncHttpResponse: 200 OK>

    ```


    For more information on this code flow, see [https://aka.ms/azsdk/dpcodegen/python/send_request](https://aka.ms/azsdk/dpcodegen/python/send_request)'
  signature: 'send_request(request: HttpRequest, *, stream: bool = False, **kwargs:
    Any) -> Awaitable[AsyncHttpResponse]'
  parameters:
  - name: request
    description: The network request you want to make. Required.
    isRequired: true
    types:
    - <xref:azure.core.rest.HttpRequest>
  keywordOnlyParameters:
  - name: stream
    description: Whether the response payload will be streamed. Defaults to False.
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: The response of your network call. Does not do error handling on
      your response.
    types:
    - <xref:azure.core.rest.AsyncHttpResponse>
