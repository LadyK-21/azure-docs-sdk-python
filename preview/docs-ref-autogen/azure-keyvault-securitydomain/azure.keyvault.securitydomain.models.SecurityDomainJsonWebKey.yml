### YamlMime:PythonClass
uid: azure.keyvault.securitydomain.models.SecurityDomainJsonWebKey
name: SecurityDomainJsonWebKey
fullName: azure.keyvault.securitydomain.models.SecurityDomainJsonWebKey
module: azure.keyvault.securitydomain.models
summary: A JSON Web Key (JWK) for use in a security domain operation.
constructor:
  syntax: 'SecurityDomainJsonWebKey(*args: Any, **kwargs: Any)'
variables:
- description: Key identifier. Required.
  name: kid
  types:
  - <xref:str>
- description: 'JsonWebKey Key Type (kty), as defined in

    [https://tools.ietf.org/html/draft-ietf-jose-json-web-algorithms-40](https://tools.ietf.org/html/draft-ietf-jose-json-web-algorithms-40).
    For Security Domain

    this value must be RSA. Required.'
  name: kty
  types:
  - <xref:str>
- description: Supported key operations. Required.
  name: key_ops
  types:
  - <xref:list>[<xref:str>]
- description: RSA modulus. Required.
  name: n
  types:
  - <xref:str>
- description: RSA public exponent. Required.
  name: e
  types:
  - <xref:str>
- description: X509 certificate chain parameter. Required.
  name: x5_c
  types:
  - <xref:list>[<xref:str>]
- description: Public Key Use Parameter. This is optional and if present must be enc.
  name: use
  types:
  - <xref:str>
- description: X509 certificate SHA1 thumbprint. This is optional.
  name: x5_t
  types:
  - <xref:str>
- description: X509 certificate SHA256 thumbprint. Required.
  name: x5_t_s256
  types:
  - <xref:str>
- description: Algorithm intended for use with the key. Required.
  name: alg
  types:
  - <xref:str>
methods:
- uid: azure.keyvault.securitydomain.models.SecurityDomainJsonWebKey.as_dict
  name: as_dict
  summary: Return a dict that can be turned into json using json.dump.
  signature: 'as_dict(*, exclude_readonly: bool = False) -> Dict[str, Any]'
  keywordOnlyParameters:
  - name: exclude_readonly
    description: Whether to remove the readonly properties.
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.keyvault.securitydomain.models.SecurityDomainJsonWebKey.clear
  name: clear
  summary: Remove all items from D.
  signature: clear() -> None
- uid: azure.keyvault.securitydomain.models.SecurityDomainJsonWebKey.copy
  name: copy
  signature: copy() -> Model
- uid: azure.keyvault.securitydomain.models.SecurityDomainJsonWebKey.get
  name: get
  summary: 'Get the value for key if key is in the dictionary, else default.

    :param str key: The key to look up.

    :param any default: The value to return if key is not in the dictionary. Defaults
    to None

    :returns: D[k] if k in D, else d.

    :rtype: any'
  signature: 'get(key: str, default: Any = None) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
    defaultValue: None
- uid: azure.keyvault.securitydomain.models.SecurityDomainJsonWebKey.items
  name: items
  signature: items() -> ItemsView[str, Any]
  return:
    description: set-like object providing a view on D's items
    types:
    - <xref:typing.ItemsView>
- uid: azure.keyvault.securitydomain.models.SecurityDomainJsonWebKey.keys
  name: keys
  signature: keys() -> KeysView[str]
  return:
    description: a set-like object providing a view on D's keys
    types:
    - <xref:typing.KeysView>
- uid: azure.keyvault.securitydomain.models.SecurityDomainJsonWebKey.pop
  name: pop
  summary: 'Removes specified key and return the corresponding value.

    :param str key: The key to pop.

    :param any default: The value to return if key is not in the dictionary

    :returns: The value corresponding to the key.

    :rtype: any

    :raises KeyError: If key is not found and default is not given.'
  signature: 'pop(key: str, default: ~typing.Any = <object object>) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
- uid: azure.keyvault.securitydomain.models.SecurityDomainJsonWebKey.popitem
  name: popitem
  summary: 'Removes and returns some (key, value) pair

    :returns: The (key, value) pair.

    :rtype: tuple

    :raises KeyError: if D is empty.'
  signature: popitem() -> Tuple[str, Any]
- uid: azure.keyvault.securitydomain.models.SecurityDomainJsonWebKey.setdefault
  name: setdefault
  summary: 'Same as calling D.get(k, d), and setting D[k]=d if k not found

    :param str key: The key to look up.

    :param any default: The value to set if key is not in the dictionary

    :returns: D[k] if k in D, else d.

    :rtype: any'
  signature: 'setdefault(key: str, default: ~typing.Any = <object object>) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
- uid: azure.keyvault.securitydomain.models.SecurityDomainJsonWebKey.update
  name: update
  summary: 'Updates D from mapping/iterable E and F.

    :param any args: Either a mapping object or an iterable of key-value pairs.'
  signature: 'update(*args: Any, **kwargs: Any) -> None'
- uid: azure.keyvault.securitydomain.models.SecurityDomainJsonWebKey.values
  name: values
  signature: values() -> ValuesView[Any]
  return:
    description: an object providing a view on D's values
    types:
    - <xref:typing.ValuesView>
attributes:
- uid: azure.keyvault.securitydomain.models.SecurityDomainJsonWebKey.alg
  name: alg
  summary: Algorithm intended for use with the key. Required.
  signature: 'alg: str'
- uid: azure.keyvault.securitydomain.models.SecurityDomainJsonWebKey.e
  name: e
  summary: RSA public exponent. Required.
  signature: 'e: str'
- uid: azure.keyvault.securitydomain.models.SecurityDomainJsonWebKey.key_ops
  name: key_ops
  summary: Supported key operations. Required.
  signature: 'key_ops: List[str]'
- uid: azure.keyvault.securitydomain.models.SecurityDomainJsonWebKey.kid
  name: kid
  summary: Key identifier. Required.
  signature: 'kid: str'
- uid: azure.keyvault.securitydomain.models.SecurityDomainJsonWebKey.kty
  name: kty
  summary: 'JsonWebKey Key Type (kty), as defined in

    [https://tools.ietf.org/html/draft-ietf-jose-json-web-algorithms-40](https://tools.ietf.org/html/draft-ietf-jose-json-web-algorithms-40).
    For Security Domain

    this value must be RSA. Required.'
  signature: 'kty: str'
- uid: azure.keyvault.securitydomain.models.SecurityDomainJsonWebKey.n
  name: n
  summary: RSA modulus. Required.
  signature: 'n: str'
- uid: azure.keyvault.securitydomain.models.SecurityDomainJsonWebKey.use
  name: use
  summary: Public Key Use Parameter. This is optional and if present must be enc.
  signature: 'use: str | None'
- uid: azure.keyvault.securitydomain.models.SecurityDomainJsonWebKey.x5_c
  name: x5_c
  summary: X509 certificate chain parameter. Required.
  signature: 'x5_c: List[str]'
- uid: azure.keyvault.securitydomain.models.SecurityDomainJsonWebKey.x5_t
  name: x5_t
  summary: X509 certificate SHA1 thumbprint. This is optional.
  signature: 'x5_t: str | None'
- uid: azure.keyvault.securitydomain.models.SecurityDomainJsonWebKey.x5_t_s256
  name: x5_t_s256
  summary: X509 certificate SHA256 thumbprint. Required.
  signature: 'x5_t_s256: str'
