### YamlMime:PythonClass
uid: azure.keyvault.securitydomain.aio.SecurityDomainClient
name: SecurityDomainClient
fullName: azure.keyvault.securitydomain.aio.SecurityDomainClient
module: azure.keyvault.securitydomain.aio
summary: Manages the security domain of a Managed HSM.
constructor:
  syntax: 'SecurityDomainClient(vault_url: str, credential: AsyncTokenCredential,
    **kwargs: Any)'
  parameters:
  - name: vault_url
    description: 'URL of the vault on which the client will operate. This is also
      called the vault''s "DNS Name".

      You should validate that this URL references a valid Key Vault or Managed HSM
      resource.

      See [https://aka.ms/azsdk/blog/vault-uri](https://aka.ms/azsdk/blog/vault-uri)
      for details.'
    isRequired: true
    types:
    - <xref:str>
  - name: credential
    description: 'An object which can provide an access token for the vault, such
      as a credential from

      <xref:azure.identity>'
    isRequired: true
    types:
    - <xref:azure.core.credentials_async.AsyncTokenCredential>
  keywordOnlyParameters:
  - name: api_version
    description: 'The API version to use for this operation. Default value is "7.5".
      Note that overriding

      this default value may result in unsupported behavior.'
    types:
    - <xref:str>
  - name: verify_challenge_resource
    description: 'Whether to verify the authentication challenge resource matches
      the Key

      Vault or Managed HSM domain. Defaults to True.'
    types:
    - <xref:bool>
  - name: polling_interval
    description: 'Default waiting time between two polls for LRO operations if no

      Retry-After header is present.'
    types:
    - <xref:int>
methods:
- uid: azure.keyvault.securitydomain.aio.SecurityDomainClient.begin_download
  name: begin_download
  summary: 'Retrieves the Security Domain from the managed HSM. Calling this endpoint
    can

    be used to activate a provisioned managed HSM resource.'
  signature: 'async begin_download(certificate_info: CertificateInfo, *, content_type:
    str = ''application/json'', skip_activation_polling: bool = False, **kwargs: Any)
    -> AsyncLROPoller[SecurityDomain]'
  parameters:
  - name: certificate_info
    description: 'The Security Domain download operation requires the customer to
      provide N

      certificates (minimum 3 and maximum 10) containing a public key in JWK format.
      Required in one of the

      following types: CertificateInfo, JSON, or IO[bytes].'
    isRequired: true
    types:
    - <xref:azure.keyvault.securitydomain.models.CertificateInfo>
    - <xref:JSON>
    - <xref:typing.IO>[<xref:bytes>]
  keywordOnlyParameters:
  - name: content_type
    description: 'Body Parameter content-type. Content type parameter for JSON body.

      Default value is "application/json".'
    defaultValue: application/json
    types:
    - <xref:str>
  - name: skip_activation_polling
    description: 'If set to True, the operation will not poll for HSM activation to

      complete and calling *.result()* on the poller will return the security domain
      object immediately. Default

      value is False.'
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: 'An instance of AsyncLROPoller that returns SecurityDomain. The

      SecurityDomain is compatible with MutableMapping'
    types:
    - <xref:azure.core.polling.AsyncLROPoller>[<xref:azure.keyvault.securitydomain.models.SecurityDomain>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.keyvault.securitydomain.aio.SecurityDomainClient.begin_upload
  name: begin_upload
  summary: Restore the provided Security Domain.
  signature: 'async begin_upload(security_domain: SecurityDomain, *, content_type:
    str = ''application/json'', skip_activation_polling: bool = False, **kwargs: Any)
    -> AsyncLROPoller[None]'
  parameters:
  - name: security_domain
    description: 'The Security Domain to be restored. Required in one of the following
      types:

      SecurityDomain, JSON, or IO[bytes].'
    isRequired: true
    types:
    - <xref:azure.keyvault.securitydomain.models.SecurityDomain>
    - <xref:JSON>
    - <xref:typing.IO>[<xref:bytes>]
  keywordOnlyParameters:
  - name: content_type
    description: 'Body Parameter content-type. Content type parameter for JSON body.

      Default value is "application/json".'
    defaultValue: application/json
    types:
    - <xref:str>
  - name: skip_activation_polling
    description: 'If set to True, the operation will not poll for HSM activation to

      complete and calling *.result()* on the poller will return None immediately,
      or raise an exception in case of

      an error. Default value is False.'
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: An instance of AsyncLROPoller that returns None.
    types:
    - <xref:azure.core.polling.AsyncLROPoller>[<xref:None>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.keyvault.securitydomain.aio.SecurityDomainClient.close
  name: close
  signature: async close() -> None
- uid: azure.keyvault.securitydomain.aio.SecurityDomainClient.get_download_status
  name: get_download_status
  summary: Retrieves the Security Domain download operation status.
  signature: 'async get_download_status(**kwargs: Any) -> SecurityDomainOperationStatus'
  return:
    description: 'SecurityDomainOperationStatus. The SecurityDomainOperationStatus
      is compatible with

      MutableMapping'
    types:
    - <xref:azure.keyvault.securitydomain.models.SecurityDomainOperationStatus>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.keyvault.securitydomain.aio.SecurityDomainClient.get_transfer_key
  name: get_transfer_key
  summary: Retrieve Security Domain transfer key.
  signature: 'async get_transfer_key(**kwargs: Any) -> TransferKey'
  return:
    description: TransferKey. The TransferKey is compatible with MutableMapping
    types:
    - <xref:azure.keyvault.securitydomain.models.TransferKey>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.keyvault.securitydomain.aio.SecurityDomainClient.get_upload_status
  name: get_upload_status
  summary: Get Security Domain upload operation status.
  signature: 'async get_upload_status(**kwargs: Any) -> SecurityDomainOperationStatus'
  return:
    description: 'SecurityDomainOperationStatus. The SecurityDomainOperationStatus
      is compatible with

      MutableMapping'
    types:
    - <xref:azure.keyvault.securitydomain.models.SecurityDomainOperationStatus>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.keyvault.securitydomain.aio.SecurityDomainClient.send_request
  name: send_request
  summary: 'Runs a network request using the client''s existing pipeline.


    The request URL can be relative to the vault URL. The service API version used
    for the request is the same as

    the client''s unless otherwise specified. This method does not raise if the response
    is an error; to raise an

    exception, call *raise_for_status()* on the returned response object. For more
    information about how to send

    custom requests with this method, see [https://aka.ms/azsdk/dpcodegen/python/send_request](https://aka.ms/azsdk/dpcodegen/python/send_request).'
  signature: 'async send_request(request: HttpRequest, *, stream: bool = False, **kwargs:
    Any) -> Awaitable[AsyncHttpResponse]'
  parameters:
  - name: request
    description: The network request you want to make.
    isRequired: true
    types:
    - <xref:azure.core.rest.HttpRequest>
  keywordOnlyParameters:
  - name: stream
    description: Whether the response payload will be streamed. Defaults to False.
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: The response of your network call. Does not do error handling on
      your response.
    types:
    - <xref:azure.core.rest.AsyncHttpResponse>
