### YamlMime:PythonClass
uid: azure.mgmt.nginx.operations.CertificatesOperations
name: CertificatesOperations
fullName: azure.mgmt.nginx.operations.CertificatesOperations
module: azure.mgmt.nginx.operations
inheritances:
- builtins.object
summary: 'CertificatesOperations operations.


  You should not instantiate this class directly. Instead, you should create a Client
  instance that

  instantiates it for you and attaches it as an attribute.'
constructor:
  syntax: CertificatesOperations(client, config, serializer, deserializer)
  parameters:
  - name: client
    description: Client for service requests.
    isRequired: true
  - name: config
    description: Configuration of service client.
    isRequired: true
  - name: serializer
    description: An object model serializer.
    isRequired: true
  - name: deserializer
    description: An object model deserializer.
    isRequired: true
variables:
- description: Alias to model classes used in this operation group.
  name: models
methods:
- uid: azure.mgmt.nginx.operations.CertificatesOperations.begin_create
  name: begin_create
  summary: 'Create or update the Nginx certificates for given Nginx deployment.


    Create or update the Nginx certificates for given Nginx deployment.'
  signature: 'begin_create(resource_group_name: str, deployment_name: str, certificate_name:
    str, body: Optional[azure.mgmt.nginx.models._models_py3.NginxCertificate] = None,
    **kwargs: Any) -> azure.core.polling._poller.LROPoller[azure.mgmt.nginx.models._models_py3.NginxCertificate]'
  parameters:
  - name: resource_group_name
    description: The name of the resource group. The name is case insensitive.
    isRequired: true
    types:
    - <xref:str>
  - name: deployment_name
    description: The name of targeted Nginx deployment.
    isRequired: true
    types:
    - <xref:str>
  - name: certificate_name
    description: The name of certificate.
    isRequired: true
    types:
    - <xref:str>
  - name: body
    description: The certificate. Default value is None.
    isRequired: true
    types:
    - <xref:azure.mgmt.nginx.models.NginxCertificate>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  - name: continuation_token
    description: A continuation token to restart a poller from a saved state.
    types:
    - <xref:str>
  - name: polling
    description: 'By default, your polling method will be ARMPolling. Pass in False
      for this

      operation to not poll, or pass in your own initialized polling object for a
      personal polling

      strategy.'
    types:
    - <xref:bool>
    - <xref:azure.core.polling.PollingMethod>
  - name: polling_interval
    description: 'Default waiting time between two polls for LRO operations if no

      Retry-After header is present.'
    types:
    - <xref:int>
  return:
    description: 'An instance of LROPoller that returns either NginxCertificate or
      the result of

      cls(response)'
    types:
    - <xref:azure.core.polling.LROPoller>[<xref:azure.mgmt.nginx.models.NginxCertificate>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.nginx.operations.CertificatesOperations.begin_delete
  name: begin_delete
  summary: 'Deletes a certificate from the nginx deployment.


    Deletes a certificate from the nginx deployment.'
  signature: 'begin_delete(resource_group_name: str, deployment_name: str, certificate_name:
    str, **kwargs: Any) -> azure.core.polling._poller.LROPoller[None]'
  parameters:
  - name: resource_group_name
    description: The name of the resource group. The name is case insensitive.
    isRequired: true
    types:
    - <xref:str>
  - name: deployment_name
    description: The name of targeted Nginx deployment.
    isRequired: true
    types:
    - <xref:str>
  - name: certificate_name
    description: The name of certificate.
    isRequired: true
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  - name: continuation_token
    description: A continuation token to restart a poller from a saved state.
    types:
    - <xref:str>
  - name: polling
    description: 'By default, your polling method will be ARMPolling. Pass in False
      for this

      operation to not poll, or pass in your own initialized polling object for a
      personal polling

      strategy.'
    types:
    - <xref:bool>
    - <xref:azure.core.polling.PollingMethod>
  - name: polling_interval
    description: 'Default waiting time between two polls for LRO operations if no

      Retry-After header is present.'
    types:
    - <xref:int>
  return:
    description: An instance of LROPoller that returns either None or the result of
      cls(response)
    types:
    - <xref:azure.core.polling.LROPoller>[<xref:None>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.nginx.operations.CertificatesOperations.get
  name: get
  summary: 'Get a certificate of given Nginx deployment.


    Get a certificate of given Nginx deployment.'
  signature: 'get(resource_group_name: str, deployment_name: str, certificate_name:
    str, **kwargs: Any) -> azure.mgmt.nginx.models._models_py3.NginxCertificate'
  parameters:
  - name: resource_group_name
    description: The name of the resource group. The name is case insensitive.
    isRequired: true
    types:
    - <xref:str>
  - name: deployment_name
    description: The name of targeted Nginx deployment.
    isRequired: true
    types:
    - <xref:str>
  - name: certificate_name
    description: The name of certificate.
    isRequired: true
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: NginxCertificate, or the result of cls(response)
    types:
    - <xref:azure.mgmt.nginx.models.NginxCertificate>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.mgmt.nginx.operations.CertificatesOperations.list
  name: list
  summary: 'List all certificates of given Nginx deployment.


    List all certificates of given Nginx deployment.'
  signature: 'list(resource_group_name: str, deployment_name: str, **kwargs: Any)
    -> Iterable[azure.mgmt.nginx.models._models_py3.NginxCertificateListResponse]'
  parameters:
  - name: resource_group_name
    description: The name of the resource group. The name is case insensitive.
    isRequired: true
    types:
    - <xref:str>
  - name: deployment_name
    description: The name of targeted Nginx deployment.
    isRequired: true
    types:
    - <xref:str>
  - name: cls
    description: A custom type or function that will be passed the direct response
    types:
    - <xref:callable>
  return:
    description: 'An iterator like instance of either NginxCertificateListResponse
      or the result of

      cls(response)'
    types:
    - <xref:azure.core.paging.ItemPaged>[<xref:azure.mgmt.nginx.models.NginxCertificateListResponse>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
attributes:
- uid: azure.mgmt.nginx.operations.CertificatesOperations.models
  name: models
  signature: models = <module 'azure.mgmt.nginx.models' from 'C:\\hostedtoolcache\\windows\\Python\\3.9.13\\x64\\lib\\site-packages\\azure\\mgmt\\nginx\\models\\__init__.py'>
