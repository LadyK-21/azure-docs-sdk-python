### YamlMime:PythonClass
uid: azure.batch.models.DiffDiskSettings
name: DiffDiskSettings
fullName: azure.batch.models.DiffDiskSettings
module: azure.batch.models
summary: 'Specifies the ephemeral Disk Settings for the operating system disk used
  by the

  compute node (VM).'
constructor:
  syntax: 'DiffDiskSettings(*args: Any, **kwargs: Any)'
variables:
- description: 'Specifies the ephemeral disk placement for operating system disk for
    all VMs

    in the pool. This property can be used by user in the request to choose the location
    e.g.,

    cache disk space for Ephemeral OS disk provisioning. For more information on Ephemeral
    OS disk

    size requirements, please refer to Ephemeral OS disk size requirements for Windows
    VMs at

    [https://learn.microsoft.com/azure/virtual-machines/windows/ephemeral-os-disks#size-requirements](https://learn.microsoft.com/azure/virtual-machines/windows/ephemeral-os-disks#size-requirements)

    and Linux VMs at

    [https://learn.microsoft.com/azure/virtual-machines/linux/ephemeral-os-disks#size-requirements](https://learn.microsoft.com/azure/virtual-machines/linux/ephemeral-os-disks#size-requirements).

    "cachedisk"'
  name: placement
  types:
  - <xref:str>
  - <xref:azure.batch.models.DiffDiskPlacement>
methods:
- uid: azure.batch.models.DiffDiskSettings.as_dict
  name: as_dict
  summary: Return a dict that can be turned into json using json.dump.
  signature: 'as_dict(*, exclude_readonly: bool = False) -> Dict[str, Any]'
  keywordOnlyParameters:
  - name: exclude_readonly
    description: Whether to remove the readonly properties.
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.batch.models.DiffDiskSettings.clear
  name: clear
  summary: Remove all items from D.
  signature: clear() -> None
- uid: azure.batch.models.DiffDiskSettings.copy
  name: copy
  signature: copy() -> Model
- uid: azure.batch.models.DiffDiskSettings.get
  name: get
  summary: 'Get the value for key if key is in the dictionary, else default.

    :param str key: The key to look up.

    :param any default: The value to return if key is not in the dictionary. Defaults
    to None

    :returns: D[k] if k in D, else d.

    :rtype: any'
  signature: 'get(key: str, default: Any = None) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
    defaultValue: None
- uid: azure.batch.models.DiffDiskSettings.items
  name: items
  signature: items() -> ItemsView[str, Any]
  return:
    description: set-like object providing a view on D's items
    types:
    - <xref:typing.ItemsView>
- uid: azure.batch.models.DiffDiskSettings.keys
  name: keys
  signature: keys() -> KeysView[str]
  return:
    description: a set-like object providing a view on D's keys
    types:
    - <xref:typing.KeysView>
- uid: azure.batch.models.DiffDiskSettings.pop
  name: pop
  summary: 'Removes specified key and return the corresponding value.

    :param str key: The key to pop.

    :param any default: The value to return if key is not in the dictionary

    :returns: The value corresponding to the key.

    :rtype: any

    :raises KeyError: If key is not found and default is not given.'
  signature: 'pop(key: str, default: ~typing.Any = <object object>) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
- uid: azure.batch.models.DiffDiskSettings.popitem
  name: popitem
  summary: 'Removes and returns some (key, value) pair

    :returns: The (key, value) pair.

    :rtype: tuple

    :raises KeyError: if D is empty.'
  signature: popitem() -> Tuple[str, Any]
- uid: azure.batch.models.DiffDiskSettings.setdefault
  name: setdefault
  summary: 'Same as calling D.get(k, d), and setting D[k]=d if k not found

    :param str key: The key to look up.

    :param any default: The value to set if key is not in the dictionary

    :returns: D[k] if k in D, else d.

    :rtype: any'
  signature: 'setdefault(key: str, default: ~typing.Any = <object object>) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
- uid: azure.batch.models.DiffDiskSettings.update
  name: update
  summary: 'Updates D from mapping/iterable E and F.

    :param any args: Either a mapping object or an iterable of key-value pairs.'
  signature: 'update(*args: Any, **kwargs: Any) -> None'
- uid: azure.batch.models.DiffDiskSettings.values
  name: values
  signature: values() -> ValuesView[Any]
  return:
    description: an object providing a view on D's values
    types:
    - <xref:typing.ValuesView>
attributes:
- uid: azure.batch.models.DiffDiskSettings.placement
  name: placement
  summary: 'Specifies the ephemeral disk placement for operating system disk for all
    VMs in the pool. This

    property can be used by user in the request to choose the location e.g., cache
    disk space for

    Ephemeral OS disk provisioning. For more information on Ephemeral OS disk size
    requirements,

    please refer to Ephemeral OS disk size requirements for Windows VMs at

    [https://learn.microsoft.com/azure/virtual-machines/windows/ephemeral-os-disks#size-requirements](https://learn.microsoft.com/azure/virtual-machines/windows/ephemeral-os-disks#size-requirements)

    and Linux VMs at

    [https://learn.microsoft.com/azure/virtual-machines/linux/ephemeral-os-disks#size-requirements](https://learn.microsoft.com/azure/virtual-machines/linux/ephemeral-os-disks#size-requirements).

    "cachedisk"'
  signature: 'placement: str | _models.DiffDiskPlacement | None'
