### YamlMime:PythonClass
uid: azure.batch.models.BatchSupportedImage
name: BatchSupportedImage
fullName: azure.batch.models.BatchSupportedImage
module: azure.batch.models
summary: 'A reference to the Azure Virtual Machines Marketplace Image and additional

  information about the Image.'
constructor:
  syntax: 'BatchSupportedImage(*args: Any, **kwargs: Any)'
variables:
- description: 'The ID of the Compute Node agent SKU which the Image supports.

    Required.'
  name: node_agent_sku_id
  types:
  - <xref:str>
- description: 'The reference to the Azure Virtual Machine''s Marketplace Image.

    Required.'
  name: image_reference
  types:
  - <xref:azure.batch.models.ImageReference>
- description: 'The type of operating system (e.g. Windows or Linux) of the Image.
    Required.

    Known values are: "linux" and "windows".'
  name: os_type
  types:
  - <xref:str>
  - <xref:azure.batch.models.OSType>
- description: 'The capabilities or features which the Image supports. Not every capability

    of the Image is listed. Capabilities in this list are considered of special interest
    and are

    generally related to integration with other features in the Azure Batch service.'
  name: capabilities
  types:
  - <xref:list>[<xref:str>]
- description: 'The time when the Azure Batch service will stop accepting

    create Pool requests for the Image.'
  name: batch_support_end_of_life
  types:
  - <xref:datetime.datetime>
- description: 'Whether the Azure Batch service actively verifies that the Image is

    compatible with the associated Compute Node agent SKU. Required. Known values
    are: "verified"

    and "unverified".'
  name: verification_type
  types:
  - <xref:str>
  - <xref:azure.batch.models.ImageVerificationType>
methods:
- uid: azure.batch.models.BatchSupportedImage.as_dict
  name: as_dict
  summary: Return a dict that can be turned into json using json.dump.
  signature: 'as_dict(*, exclude_readonly: bool = False) -> Dict[str, Any]'
  keywordOnlyParameters:
  - name: exclude_readonly
    description: Whether to remove the readonly properties.
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.batch.models.BatchSupportedImage.clear
  name: clear
  summary: Remove all items from D.
  signature: clear() -> None
- uid: azure.batch.models.BatchSupportedImage.copy
  name: copy
  signature: copy() -> Model
- uid: azure.batch.models.BatchSupportedImage.get
  name: get
  summary: 'Get the value for key if key is in the dictionary, else default.

    :param str key: The key to look up.

    :param any default: The value to return if key is not in the dictionary. Defaults
    to None

    :returns: D[k] if k in D, else d.

    :rtype: any'
  signature: 'get(key: str, default: Any = None) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
    defaultValue: None
- uid: azure.batch.models.BatchSupportedImage.items
  name: items
  signature: items() -> ItemsView[str, Any]
  return:
    description: set-like object providing a view on D's items
    types:
    - <xref:typing.ItemsView>
- uid: azure.batch.models.BatchSupportedImage.keys
  name: keys
  signature: keys() -> KeysView[str]
  return:
    description: a set-like object providing a view on D's keys
    types:
    - <xref:typing.KeysView>
- uid: azure.batch.models.BatchSupportedImage.pop
  name: pop
  summary: 'Removes specified key and return the corresponding value.

    :param str key: The key to pop.

    :param any default: The value to return if key is not in the dictionary

    :returns: The value corresponding to the key.

    :rtype: any

    :raises KeyError: If key is not found and default is not given.'
  signature: 'pop(key: str, default: ~typing.Any = <object object>) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
- uid: azure.batch.models.BatchSupportedImage.popitem
  name: popitem
  summary: 'Removes and returns some (key, value) pair

    :returns: The (key, value) pair.

    :rtype: tuple

    :raises KeyError: if D is empty.'
  signature: popitem() -> Tuple[str, Any]
- uid: azure.batch.models.BatchSupportedImage.setdefault
  name: setdefault
  summary: 'Same as calling D.get(k, d), and setting D[k]=d if k not found

    :param str key: The key to look up.

    :param any default: The value to set if key is not in the dictionary

    :returns: D[k] if k in D, else d.

    :rtype: any'
  signature: 'setdefault(key: str, default: ~typing.Any = <object object>) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
- uid: azure.batch.models.BatchSupportedImage.update
  name: update
  summary: 'Updates D from mapping/iterable E and F.

    :param any args: Either a mapping object or an iterable of key-value pairs.'
  signature: 'update(*args: Any, **kwargs: Any) -> None'
- uid: azure.batch.models.BatchSupportedImage.values
  name: values
  signature: values() -> ValuesView[Any]
  return:
    description: an object providing a view on D's values
    types:
    - <xref:typing.ValuesView>
attributes:
- uid: azure.batch.models.BatchSupportedImage.batch_support_end_of_life
  name: batch_support_end_of_life
  summary: The time when the Azure Batch service will stop accepting create Pool requests
    for the Image.
  signature: 'batch_support_end_of_life: datetime | None'
- uid: azure.batch.models.BatchSupportedImage.capabilities
  name: capabilities
  summary: 'The capabilities or features which the Image supports. Not every capability
    of the Image is

    listed. Capabilities in this list are considered of special interest and are generally
    related

    to integration with other features in the Azure Batch service.'
  signature: 'capabilities: List[str] | None'
- uid: azure.batch.models.BatchSupportedImage.image_reference
  name: image_reference
  summary: The reference to the Azure Virtual Machine's Marketplace Image. Required.
  signature: 'image_reference: _models.ImageReference'
- uid: azure.batch.models.BatchSupportedImage.node_agent_sku_id
  name: node_agent_sku_id
  summary: The ID of the Compute Node agent SKU which the Image supports. Required.
  signature: 'node_agent_sku_id: str'
- uid: azure.batch.models.BatchSupportedImage.os_type
  name: os_type
  summary: 'The type of operating system (e.g. Windows or Linux) of the Image. Required.
    Known values are:

    "linux" and "windows".'
  signature: 'os_type: str | _models.OSType'
- uid: azure.batch.models.BatchSupportedImage.verification_type
  name: verification_type
  summary: 'Whether the Azure Batch service actively verifies that the Image is compatible
    with the

    associated Compute Node agent SKU. Required. Known values are: "verified" and
    "unverified".'
  signature: 'verification_type: str | _models.ImageVerificationType'
