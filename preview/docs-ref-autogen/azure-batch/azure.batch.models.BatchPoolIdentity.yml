### YamlMime:PythonClass
uid: azure.batch.models.BatchPoolIdentity
name: BatchPoolIdentity
fullName: azure.batch.models.BatchPoolIdentity
module: azure.batch.models
summary: The identity of the Batch pool, if configured.
constructor:
  syntax: 'BatchPoolIdentity(*args: Any, **kwargs: Any)'
variables:
- description: 'The identity of the Batch pool, if configured. The list of user identities

    associated with the Batch pool. The user identity dictionary key references will
    be ARM

    resource ids in the form:

    ''/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}''.

    Required. Known values are: "UserAssigned" and "None".'
  name: type
  types:
  - <xref:str>
  - <xref:azure.batch.models.BatchPoolIdentityType>
- description: 'The list of user identities associated with the Batch account.

    The user identity dictionary key references will be ARM resource ids in the form:

    ''/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}''.'
  name: user_assigned_identities
  types:
  - <xref:list>[<xref:azure.batch.models.UserAssignedIdentity>]
methods:
- uid: azure.batch.models.BatchPoolIdentity.as_dict
  name: as_dict
  summary: Return a dict that can be turned into json using json.dump.
  signature: 'as_dict(*, exclude_readonly: bool = False) -> Dict[str, Any]'
  keywordOnlyParameters:
  - name: exclude_readonly
    description: Whether to remove the readonly properties.
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.batch.models.BatchPoolIdentity.clear
  name: clear
  summary: Remove all items from D.
  signature: clear() -> None
- uid: azure.batch.models.BatchPoolIdentity.copy
  name: copy
  signature: copy() -> Model
- uid: azure.batch.models.BatchPoolIdentity.get
  name: get
  summary: 'Get the value for key if key is in the dictionary, else default.

    :param str key: The key to look up.

    :param any default: The value to return if key is not in the dictionary. Defaults
    to None

    :returns: D[k] if k in D, else d.

    :rtype: any'
  signature: 'get(key: str, default: Any = None) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
    defaultValue: None
- uid: azure.batch.models.BatchPoolIdentity.items
  name: items
  signature: items() -> ItemsView[str, Any]
  return:
    description: set-like object providing a view on D's items
    types:
    - <xref:typing.ItemsView>
- uid: azure.batch.models.BatchPoolIdentity.keys
  name: keys
  signature: keys() -> KeysView[str]
  return:
    description: a set-like object providing a view on D's keys
    types:
    - <xref:typing.KeysView>
- uid: azure.batch.models.BatchPoolIdentity.pop
  name: pop
  summary: 'Removes specified key and return the corresponding value.

    :param str key: The key to pop.

    :param any default: The value to return if key is not in the dictionary

    :returns: The value corresponding to the key.

    :rtype: any

    :raises KeyError: If key is not found and default is not given.'
  signature: 'pop(key: str, default: ~typing.Any = <object object>) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
- uid: azure.batch.models.BatchPoolIdentity.popitem
  name: popitem
  summary: 'Removes and returns some (key, value) pair

    :returns: The (key, value) pair.

    :rtype: tuple

    :raises KeyError: if D is empty.'
  signature: popitem() -> Tuple[str, Any]
- uid: azure.batch.models.BatchPoolIdentity.setdefault
  name: setdefault
  summary: 'Same as calling D.get(k, d), and setting D[k]=d if k not found

    :param str key: The key to look up.

    :param any default: The value to set if key is not in the dictionary

    :returns: D[k] if k in D, else d.

    :rtype: any'
  signature: 'setdefault(key: str, default: ~typing.Any = <object object>) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
- uid: azure.batch.models.BatchPoolIdentity.update
  name: update
  summary: 'Updates D from mapping/iterable E and F.

    :param any args: Either a mapping object or an iterable of key-value pairs.'
  signature: 'update(*args: Any, **kwargs: Any) -> None'
- uid: azure.batch.models.BatchPoolIdentity.values
  name: values
  signature: values() -> ValuesView[Any]
  return:
    description: an object providing a view on D's values
    types:
    - <xref:typing.ValuesView>
attributes:
- uid: azure.batch.models.BatchPoolIdentity.type
  name: type
  summary: 'The identity of the Batch pool, if configured. The list of user identities
    associated with the

    Batch pool. The user identity dictionary key references will be ARM resource ids
    in the form:

    ''/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}''.

    Required. Known values are: "UserAssigned" and "None".'
  signature: 'type: str | _models.BatchPoolIdentityType'
- uid: azure.batch.models.BatchPoolIdentity.user_assigned_identities
  name: user_assigned_identities
  summary: 'The list of user identities associated with the Batch account. The user
    identity dictionary key

    references will be ARM resource ids in the form:

    ''/subscriptions/{subscriptionId}/resourceGroups/{resourceGroupName}/providers/Microsoft.ManagedIdentity/userAssignedIdentities/{identityName}''.'
  signature: 'user_assigned_identities: List[_models.UserAssignedIdentity] | None'
