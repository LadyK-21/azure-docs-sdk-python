### YamlMime:PythonClass
uid: azure.batch.models.SecurityProfile
name: SecurityProfile
fullName: azure.batch.models.SecurityProfile
module: azure.batch.models
summary: Specifies the security profile settings for the virtual machine or virtual
  machine scale set.
constructor:
  syntax: 'SecurityProfile(*args: Any, **kwargs: Any)'
variables:
- description: 'This property can be used by user in the request to enable or disable

    the Host Encryption for the virtual machine or virtual machine scale set. This
    will enable the

    encryption for all the disks including Resource/Temp disk at host itself. For
    more information

    on encryption at host requirements, please refer to

    [https://learn.microsoft.com/azure/virtual-machines/disk-encryption#supported-vm-sizes](https://learn.microsoft.com/azure/virtual-machines/disk-encryption#supported-vm-sizes).

    Required.'
  name: encryption_at_host
  types:
  - <xref:bool>
- description: 'Specifies the SecurityType of the virtual machine. It has to be set
    to any

    specified value to enable UefiSettings. Required. Known values are: "trustedLaunch"
    and

    "confidentialVM".'
  name: security_type
  types:
  - <xref:str>
  - <xref:azure.batch.models.SecurityTypes>
- description: 'Specifies the security settings like secure boot and vTPM used while

    creating the virtual machine. Specifies the security settings like secure boot
    and vTPM used

    while creating the virtual machine. Required.'
  name: uefi_settings
  types:
  - <xref:azure.batch.models.UefiSettings>
methods:
- uid: azure.batch.models.SecurityProfile.as_dict
  name: as_dict
  summary: Return a dict that can be turned into json using json.dump.
  signature: 'as_dict(*, exclude_readonly: bool = False) -> Dict[str, Any]'
  keywordOnlyParameters:
  - name: exclude_readonly
    description: Whether to remove the readonly properties.
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.batch.models.SecurityProfile.clear
  name: clear
  summary: Remove all items from D.
  signature: clear() -> None
- uid: azure.batch.models.SecurityProfile.copy
  name: copy
  signature: copy() -> Model
- uid: azure.batch.models.SecurityProfile.get
  name: get
  summary: 'Get the value for key if key is in the dictionary, else default.

    :param str key: The key to look up.

    :param any default: The value to return if key is not in the dictionary. Defaults
    to None

    :returns: D[k] if k in D, else d.

    :rtype: any'
  signature: 'get(key: str, default: Any = None) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
    defaultValue: None
- uid: azure.batch.models.SecurityProfile.items
  name: items
  signature: items() -> ItemsView[str, Any]
  return:
    description: set-like object providing a view on D's items
    types:
    - <xref:typing.ItemsView>
- uid: azure.batch.models.SecurityProfile.keys
  name: keys
  signature: keys() -> KeysView[str]
  return:
    description: a set-like object providing a view on D's keys
    types:
    - <xref:typing.KeysView>
- uid: azure.batch.models.SecurityProfile.pop
  name: pop
  summary: 'Removes specified key and return the corresponding value.

    :param str key: The key to pop.

    :param any default: The value to return if key is not in the dictionary

    :returns: The value corresponding to the key.

    :rtype: any

    :raises KeyError: If key is not found and default is not given.'
  signature: 'pop(key: str, default: ~typing.Any = <object object>) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
- uid: azure.batch.models.SecurityProfile.popitem
  name: popitem
  summary: 'Removes and returns some (key, value) pair

    :returns: The (key, value) pair.

    :rtype: tuple

    :raises KeyError: if D is empty.'
  signature: popitem() -> Tuple[str, Any]
- uid: azure.batch.models.SecurityProfile.setdefault
  name: setdefault
  summary: 'Same as calling D.get(k, d), and setting D[k]=d if k not found

    :param str key: The key to look up.

    :param any default: The value to set if key is not in the dictionary

    :returns: D[k] if k in D, else d.

    :rtype: any'
  signature: 'setdefault(key: str, default: ~typing.Any = <object object>) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
- uid: azure.batch.models.SecurityProfile.update
  name: update
  summary: 'Updates D from mapping/iterable E and F.

    :param any args: Either a mapping object or an iterable of key-value pairs.'
  signature: 'update(*args: Any, **kwargs: Any) -> None'
- uid: azure.batch.models.SecurityProfile.values
  name: values
  signature: values() -> ValuesView[Any]
  return:
    description: an object providing a view on D's values
    types:
    - <xref:typing.ValuesView>
attributes:
- uid: azure.batch.models.SecurityProfile.encryption_at_host
  name: encryption_at_host
  summary: 'This property can be used by user in the request to enable or disable
    the Host Encryption for

    the virtual machine or virtual machine scale set. This will enable the encryption
    for all the

    disks including Resource/Temp disk at host itself. For more information on encryption
    at host

    requirements, please refer to

    [https://learn.microsoft.com/azure/virtual-machines/disk-encryption#supported-vm-sizes](https://learn.microsoft.com/azure/virtual-machines/disk-encryption#supported-vm-sizes).

    Required.'
  signature: 'encryption_at_host: bool'
- uid: azure.batch.models.SecurityProfile.security_type
  name: security_type
  summary: 'Specifies the SecurityType of the virtual machine. It has to be set to
    any specified value to

    enable UefiSettings. Required. Known values are: "trustedLaunch" and "confidentialVM".'
  signature: 'security_type: str | _models.SecurityTypes'
- uid: azure.batch.models.SecurityProfile.uefi_settings
  name: uefi_settings
  summary: 'Specifies the security settings like secure boot and vTPM used while creating
    the virtual

    machine. Specifies the security settings like secure boot and vTPM used while
    creating the

    virtual machine. Required.'
  signature: 'uefi_settings: _models.UefiSettings'
