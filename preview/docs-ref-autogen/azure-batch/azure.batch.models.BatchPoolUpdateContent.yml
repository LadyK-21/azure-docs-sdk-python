### YamlMime:PythonClass
uid: azure.batch.models.BatchPoolUpdateContent
name: BatchPoolUpdateContent
fullName: azure.batch.models.BatchPoolUpdateContent
module: azure.batch.models
summary: Parameters for updating an Azure Batch Pool.
constructor:
  syntax: 'BatchPoolUpdateContent(*args: Any, **kwargs: Any)'
variables:
- description: 'The display name for the Pool. The display name need not be unique
    and can

    contain any Unicode characters up to a maximum length of 1024. This field can
    be updated only

    when the pool is empty.'
  name: display_name
  types:
  - <xref:str>
- description: 'The size of virtual machines in the Pool. For information about available
    sizes

    of virtual machines in Pools, see Choose a VM size for Compute Nodes in an Azure
    Batch Pool

    ([https://learn.microsoft.com/azure/batch/batch-pool-vm-sizes](https://learn.microsoft.com/azure/batch/batch-pool-vm-sizes)).<br
    /><br />This field can be

    updated only when the pool is empty.'
  name: vm_size
  types:
  - <xref:str>
- description: 'Whether the Pool permits direct communication between

    Compute Nodes. Enabling inter-node communication limits the maximum size of the
    Pool due to

    deployment restrictions on the Compute Nodes of the Pool. This may result in the
    Pool not

    reaching its desired size. The default value is false.<br /><br />This field can
    be updated

    only when the pool is empty.'
  name: enable_inter_node_communication
  types:
  - <xref:bool>
- description: 'A Task to run on each Compute Node as it joins the Pool. The Task
    runs when

    the Compute Node is added to the Pool or when the Compute Node is restarted. If
    this element is

    present, it overwrites any existing StartTask. If omitted, any existing StartTask
    is left

    unchanged.'
  name: start_task
  types:
  - <xref:azure.batch.models.BatchStartTask>
- description: 'If this element is present, it replaces any existing Certificate

    references configured on the Pool.

    If omitted, any existing Certificate references are left unchanged.

    For Windows Nodes, the Batch service installs the Certificates to the specified
    Certificate

    store and location.

    For Linux Compute Nodes, the Certificates are stored in a directory inside the
    Task working

    directory and an environment variable AZ_BATCH_CERTIFICATES_DIR is supplied to
    the Task to

    query for this location.

    For Certificates with visibility of ''remoteUser'', a ''certs'' directory is created
    in the user''s

    home directory (e.g., /home/{user-name}/certs) and Certificates are placed in
    that directory.

    Warning: This property is deprecated and will be removed after February, 2024.
    Please use the

    [Azure KeyVault Extension](https://learn.microsoft.com/azure/batch/batch-certificate-migration-guide)
    instead.'
  name: certificate_references
  types:
  - <xref:list>[<xref:azure.batch.models.BatchCertificateReference>]
- description: 'A list of Packages to be installed on each Compute Node

    in the Pool. Changes to Package references affect all new Nodes joining the Pool,
    but do not

    affect Compute Nodes that are already in the Pool until they are rebooted or reimaged.
    If this

    element is present, it replaces any existing Package references. If you specify
    an empty

    collection, then all Package references are removed from the Pool. If omitted,
    any existing

    Package references are left unchanged.'
  name: application_package_references
  types:
  - <xref:list>[<xref:azure.batch.models.BatchApplicationPackageReference>]
- description: 'A list of name-value pairs associated with the Pool as metadata. If
    this

    element is present, it replaces any existing metadata configured on the Pool.
    If you specify an

    empty collection, any metadata is removed from the Pool. If omitted, any existing
    metadata is

    left unchanged.'
  name: metadata
  types:
  - <xref:list>[<xref:azure.batch.models.MetadataItem>]
- description: 'The virtual machine configuration for the Pool. This

    property must be specified.<br /><br />This field can be updated only when the
    pool is empty.'
  name: virtual_machine_configuration
  types:
  - <xref:azure.batch.models.VirtualMachineConfiguration>
- description: 'The desired node communication mode for the pool. If this

    element is present, it replaces the existing targetNodeCommunicationMode configured
    on the

    Pool. If omitted, any existing metadata is left unchanged. Known values are: "default",

    "classic", and "simplified".'
  name: target_node_communication_mode
  types:
  - <xref:str>
  - <xref:azure.batch.models.BatchNodeCommunicationMode>
- description: 'The number of task slots that can be used to run concurrent tasks
    on

    a single compute node in the pool. The default value is 1. The maximum value is
    the smaller of

    4 times the number of cores of the vmSize of the pool or 256.<br /><br />This
    field can be

    updated only when the pool is empty.'
  name: task_slots_per_node
  types:
  - <xref:int>
- description: 'How Tasks are distributed across Compute Nodes in a Pool. If not

    specified, the default is spread.<br /><br />This field can be updated only when
    the pool is

    empty.'
  name: task_scheduling_policy
  types:
  - <xref:azure.batch.models.BatchTaskSchedulingPolicy>
- description: 'The network configuration for the Pool. This field can be updated

    only when the pool is empty.'
  name: network_configuration
  types:
  - <xref:azure.batch.models.NetworkConfiguration>
- description: 'The user-specified tags associated with the pool. The user-defined
    tags to

    be associated with the Azure Batch Pool. When specified, these tags are propagated
    to the

    backing Azure resources associated with the pool. This property can only be specified
    when the

    Batch account was created with the poolAllocationMode property set to ''UserSubscription''.<br

    /><br />This field can be updated only when the pool is empty.'
  name: resource_tags
  types:
  - <xref:dict>[<xref:str>, <xref:str>]
- description: 'The list of user Accounts to be created on each Compute Node in the
    Pool.

    This field can be updated only when the pool is empty.'
  name: user_accounts
  types:
  - <xref:list>[<xref:azure.batch.models.UserAccount>]
- description: 'Mount storage using specified file system for the entire lifetime
    of

    the pool. Mount the storage using Azure fileshare, NFS, CIFS or Blobfuse based
    file system.<br

    /><br />This field can be updated only when the pool is empty.'
  name: mount_configuration
  types:
  - <xref:list>[<xref:azure.batch.models.MountConfiguration>]
- description: 'The upgrade policy for the Pool. Describes an upgrade policy - automatic,

    manual, or rolling.<br /><br />This field can be updated only when the pool is
    empty.'
  name: upgrade_policy
  types:
  - <xref:azure.batch.models.UpgradePolicy>
methods:
- uid: azure.batch.models.BatchPoolUpdateContent.as_dict
  name: as_dict
  summary: Return a dict that can be turned into json using json.dump.
  signature: 'as_dict(*, exclude_readonly: bool = False) -> Dict[str, Any]'
  keywordOnlyParameters:
  - name: exclude_readonly
    description: Whether to remove the readonly properties.
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.batch.models.BatchPoolUpdateContent.clear
  name: clear
  summary: Remove all items from D.
  signature: clear() -> None
- uid: azure.batch.models.BatchPoolUpdateContent.copy
  name: copy
  signature: copy() -> Model
- uid: azure.batch.models.BatchPoolUpdateContent.get
  name: get
  summary: 'Get the value for key if key is in the dictionary, else default.

    :param str key: The key to look up.

    :param any default: The value to return if key is not in the dictionary. Defaults
    to None

    :returns: D[k] if k in D, else d.

    :rtype: any'
  signature: 'get(key: str, default: Any = None) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
    defaultValue: None
- uid: azure.batch.models.BatchPoolUpdateContent.items
  name: items
  signature: items() -> ItemsView[str, Any]
  return:
    description: set-like object providing a view on D's items
    types:
    - <xref:typing.ItemsView>
- uid: azure.batch.models.BatchPoolUpdateContent.keys
  name: keys
  signature: keys() -> KeysView[str]
  return:
    description: a set-like object providing a view on D's keys
    types:
    - <xref:typing.KeysView>
- uid: azure.batch.models.BatchPoolUpdateContent.pop
  name: pop
  summary: 'Removes specified key and return the corresponding value.

    :param str key: The key to pop.

    :param any default: The value to return if key is not in the dictionary

    :returns: The value corresponding to the key.

    :rtype: any

    :raises KeyError: If key is not found and default is not given.'
  signature: 'pop(key: str, default: ~typing.Any = <object object>) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
- uid: azure.batch.models.BatchPoolUpdateContent.popitem
  name: popitem
  summary: 'Removes and returns some (key, value) pair

    :returns: The (key, value) pair.

    :rtype: tuple

    :raises KeyError: if D is empty.'
  signature: popitem() -> Tuple[str, Any]
- uid: azure.batch.models.BatchPoolUpdateContent.setdefault
  name: setdefault
  summary: 'Same as calling D.get(k, d), and setting D[k]=d if k not found

    :param str key: The key to look up.

    :param any default: The value to set if key is not in the dictionary

    :returns: D[k] if k in D, else d.

    :rtype: any'
  signature: 'setdefault(key: str, default: ~typing.Any = <object object>) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
- uid: azure.batch.models.BatchPoolUpdateContent.update
  name: update
  summary: 'Updates D from mapping/iterable E and F.

    :param any args: Either a mapping object or an iterable of key-value pairs.'
  signature: 'update(*args: Any, **kwargs: Any) -> None'
- uid: azure.batch.models.BatchPoolUpdateContent.values
  name: values
  signature: values() -> ValuesView[Any]
  return:
    description: an object providing a view on D's values
    types:
    - <xref:typing.ValuesView>
attributes:
- uid: azure.batch.models.BatchPoolUpdateContent.application_package_references
  name: application_package_references
  summary: 'A list of Packages to be installed on each Compute Node in the Pool. Changes
    to Package

    references affect all new Nodes joining the Pool, but do not affect Compute Nodes
    that are

    already in the Pool until they are rebooted or reimaged. If this element is present,
    it

    replaces any existing Package references. If you specify an empty collection,
    then all Package

    references are removed from the Pool. If omitted, any existing Package references
    are left

    unchanged.'
  signature: 'application_package_references: List[_models.BatchApplicationPackageReference]
    | None'
- uid: azure.batch.models.BatchPoolUpdateContent.certificate_references
  name: certificate_references
  summary: 'If this element is present, it replaces any existing Certificate references
    configured on the

    Pool.

    If omitted, any existing Certificate references are left unchanged.

    For Windows Nodes, the Batch service installs the Certificates to the specified
    Certificate

    store and location.

    For Linux Compute Nodes, the Certificates are stored in a directory inside the
    Task working

    directory and an environment variable AZ_BATCH_CERTIFICATES_DIR is supplied to
    the Task to

    query for this location.

    For Certificates with visibility of ''remoteUser'', a ''certs'' directory is created
    in the user''s

    home directory (e.g., /home/{user-name}/certs) and Certificates are placed in
    that directory.

    Warning: This property is deprecated and will be removed after February, 2024.
    Please use the

    [Azure KeyVault Extension](https://learn.microsoft.com/azure/batch/batch-certificate-migration-guide)
    instead.'
  signature: 'certificate_references: List[_models.BatchCertificateReference] | None'
- uid: azure.batch.models.BatchPoolUpdateContent.display_name
  name: display_name
  summary: 'The display name for the Pool. The display name need not be unique and
    can contain any Unicode

    characters up to a maximum length of 1024. This field can be updated only when
    the pool is

    empty.'
  signature: 'display_name: str | None'
- uid: azure.batch.models.BatchPoolUpdateContent.enable_inter_node_communication
  name: enable_inter_node_communication
  summary: 'Whether the Pool permits direct communication between Compute Nodes. Enabling
    inter-node

    communication limits the maximum size of the Pool due to deployment restrictions
    on the Compute

    Nodes of the Pool. This may result in the Pool not reaching its desired size.
    The default value

    is false.<br /><br />This field can be updated only when the pool is empty.'
  signature: 'enable_inter_node_communication: bool | None'
- uid: azure.batch.models.BatchPoolUpdateContent.metadata
  name: metadata
  summary: 'A list of name-value pairs associated with the Pool as metadata. If this
    element is present, it

    replaces any existing metadata configured on the Pool. If you specify an empty
    collection, any

    metadata is removed from the Pool. If omitted, any existing metadata is left unchanged.'
  signature: 'metadata: List[_models.MetadataItem] | None'
- uid: azure.batch.models.BatchPoolUpdateContent.mount_configuration
  name: mount_configuration
  summary: 'Mount storage using specified file system for the entire lifetime of the
    pool. Mount the

    storage using Azure fileshare, NFS, CIFS or Blobfuse based file system.<br /><br
    />This field

    can be updated only when the pool is empty.'
  signature: 'mount_configuration: List[_models.MountConfiguration] | None'
- uid: azure.batch.models.BatchPoolUpdateContent.network_configuration
  name: network_configuration
  summary: The network configuration for the Pool. This field can be updated only
    when the pool is empty.
  signature: 'network_configuration: _models.NetworkConfiguration | None'
- uid: azure.batch.models.BatchPoolUpdateContent.resource_tags
  name: resource_tags
  summary: 'The user-specified tags associated with the pool. The user-defined tags
    to be associated with

    the Azure Batch Pool. When specified, these tags are propagated to the backing
    Azure resources

    associated with the pool. This property can only be specified when the Batch account
    was

    created with the poolAllocationMode property set to ''UserSubscription''.<br /><br
    />This field

    can be updated only when the pool is empty.'
  signature: 'resource_tags: Dict[str, str] | None'
- uid: azure.batch.models.BatchPoolUpdateContent.start_task
  name: start_task
  summary: 'A Task to run on each Compute Node as it joins the Pool. The Task runs
    when the Compute Node is

    added to the Pool or when the Compute Node is restarted. If this element is present,
    it

    overwrites any existing StartTask. If omitted, any existing StartTask is left
    unchanged.'
  signature: 'start_task: _models.BatchStartTask | None'
- uid: azure.batch.models.BatchPoolUpdateContent.target_node_communication_mode
  name: target_node_communication_mode
  summary: 'The desired node communication mode for the pool. If this element is present,
    it replaces the

    existing targetNodeCommunicationMode configured on the Pool. If omitted, any existing
    metadata

    is left unchanged. Known values are: "default", "classic", and "simplified".'
  signature: 'target_node_communication_mode: str | _models.BatchNodeCommunicationMode
    | None'
- uid: azure.batch.models.BatchPoolUpdateContent.task_scheduling_policy
  name: task_scheduling_policy
  summary: 'How Tasks are distributed across Compute Nodes in a Pool. If not specified,
    the default is

    spread.<br /><br />This field can be updated only when the pool is empty.'
  signature: 'task_scheduling_policy: _models.BatchTaskSchedulingPolicy | None'
- uid: azure.batch.models.BatchPoolUpdateContent.task_slots_per_node
  name: task_slots_per_node
  summary: 'The number of task slots that can be used to run concurrent tasks on a
    single compute node in

    the pool. The default value is 1. The maximum value is the smaller of 4 times
    the number of

    cores of the vmSize of the pool or 256.<br /><br />This field can be updated only
    when the pool

    is empty.'
  signature: 'task_slots_per_node: int | None'
- uid: azure.batch.models.BatchPoolUpdateContent.upgrade_policy
  name: upgrade_policy
  summary: 'The upgrade policy for the Pool. Describes an upgrade policy - automatic,
    manual, or

    rolling.<br /><br />This field can be updated only when the pool is empty.'
  signature: 'upgrade_policy: _models.UpgradePolicy | None'
- uid: azure.batch.models.BatchPoolUpdateContent.user_accounts
  name: user_accounts
  summary: 'The list of user Accounts to be created on each Compute Node in the Pool.
    This field can be

    updated only when the pool is empty.'
  signature: 'user_accounts: List[_models.UserAccount] | None'
- uid: azure.batch.models.BatchPoolUpdateContent.virtual_machine_configuration
  name: virtual_machine_configuration
  summary: 'The virtual machine configuration for the Pool. This property must be
    specified.<br /><br

    />This field can be updated only when the pool is empty.'
  signature: 'virtual_machine_configuration: _models.VirtualMachineConfiguration |
    None'
- uid: azure.batch.models.BatchPoolUpdateContent.vm_size
  name: vm_size
  summary: 'The size of virtual machines in the Pool. For information about available
    sizes of virtual

    machines in Pools, see Choose a VM size for Compute Nodes in an Azure Batch Pool

    ([https://learn.microsoft.com/azure/batch/batch-pool-vm-sizes](https://learn.microsoft.com/azure/batch/batch-pool-vm-sizes)).<br
    /><br />This field can be

    updated only when the pool is empty.'
  signature: 'vm_size: str | None'
