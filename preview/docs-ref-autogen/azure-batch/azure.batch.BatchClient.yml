### YamlMime:PythonClass
uid: azure.batch.BatchClient
name: BatchClient
fullName: azure.batch.BatchClient
module: azure.batch
summary: BatchClient.
constructor:
  syntax: 'BatchClient(endpoint: str, credential: AzureNamedKeyCredential | TokenCredential,
    **kwargs)'
  parameters:
  - name: endpoint
    description: HTTP or HTTPS endpoint for the Web PubSub service instance.
    isRequired: true
    types:
    - <xref:str>
  - name: hub
    description: 'Target hub name, which should start with alphabetic characters and
      only contain

      alpha-numeric characters or underscore.'
    isRequired: true
    types:
    - <xref:str>
  - name: credentials
    description: Credential needed for the client to connect to Azure.
    isRequired: true
    types:
    - <xref:azure.identity.ClientSecretCredential>, <xref:azure.core.credentials.AzureNamedKeyCredential>
    - <xref:azure.identity.TokenCredentials>
  - name: credential
    isRequired: true
  keywordOnlyParameters:
  - name: api_version
    description: 'Api Version. The default value is "2021-10-01". Note that overriding
      this

      default value may result in unsupported behavior.'
    types:
    - <xref:str>
methods:
- uid: azure.batch.BatchClient.cancel_certificate_deletion
  name: cancel_certificate_deletion
  summary: 'Cancels a failed deletion of a Certificate from the specified Account.


    If you try to delete a Certificate that is being used by a Pool or Compute

    Node, the status of the Certificate changes to deleteFailed. If you decide that

    you want to continue using the Certificate, you can use this operation to set

    the status of the Certificate back to active. If you intend to delete the

    Certificate, you do not need to run this operation after the deletion failed.

    You must make sure that the Certificate is not being used by any resources, and

    then you can try again to delete the Certificate.'
  signature: 'cancel_certificate_deletion(thumbprint_algorithm: str, thumbprint: str,
    *, timeout: int | None = None, ocpdate: datetime | None = None, **kwargs: Any)
    -> None'
  parameters:
  - name: thumbprint_algorithm
    description: 'The algorithm used to derive the thumbprint parameter. This must

      be sha1. Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: thumbprint
    description: The thumbprint of the Certificate being deleted. Required.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: timeout
    description: 'The maximum time that the server can spend processing the request,
      in

      seconds. The default is 30 seconds. If the value is larger than 30, the default
      will be used

      instead.". Default value is None.'
    defaultValue: None
    types:
    - <xref:int>
  - name: ocpdate
    description: 'The time the request was issued. Client libraries typically set
      this to the

      current system clock time; set it explicitly if you are calling the REST API

      directly. Default value is None.'
    defaultValue: None
    types:
    - <xref:datetime.datetime>
  return:
    description: None
    types:
    - <xref:None>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.batch.BatchClient.close
  name: close
  signature: close() -> None
- uid: azure.batch.BatchClient.create_certificate
  name: create_certificate
  summary: 'Creates a Certificate to the specified Account.


    Creates a Certificate to the specified Account.'
  signature: 'create_certificate(certificate: BatchCertificate, *, timeout: int |
    None = None, ocpdate: datetime | None = None, **kwargs: Any) -> None'
  parameters:
  - name: certificate
    description: The Certificate to be created. Required.
    isRequired: true
    types:
    - <xref:azure.batch.models.BatchCertificate>
  keywordOnlyParameters:
  - name: timeout
    description: 'The maximum time that the server can spend processing the request,
      in

      seconds. The default is 30 seconds. If the value is larger than 30, the default
      will be used

      instead.". Default value is None.'
    defaultValue: None
    types:
    - <xref:int>
  - name: ocpdate
    description: 'The time the request was issued. Client libraries typically set
      this to the

      current system clock time; set it explicitly if you are calling the REST API

      directly. Default value is None.'
    defaultValue: None
    types:
    - <xref:datetime.datetime>
  return:
    description: None
    types:
    - <xref:None>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.batch.BatchClient.create_job
  name: create_job
  summary: 'Creates a Job to the specified Account.


    The Batch service supports two ways to control the work done as part of a Job.

    In the first approach, the user specifies a Job Manager Task. The Batch service

    launches this Task when it is ready to start the Job. The Job Manager Task

    controls all other Tasks that run under this Job, by using the Task APIs. In

    the second approach, the user directly controls the execution of Tasks under an

    active Job, by using the Task APIs. Also note: when naming Jobs, avoid

    including sensitive information such as user names or secret project names.

    This information may appear in telemetry logs accessible to Microsoft Support

    engineers.'
  signature: 'create_job(job: BatchJobCreateContent, *, timeout: int | None = None,
    ocpdate: datetime | None = None, **kwargs: Any) -> None'
  parameters:
  - name: job
    description: The Job to be created. Required.
    isRequired: true
    types:
    - <xref:azure.batch.models.BatchJobCreateContent>
  keywordOnlyParameters:
  - name: timeout
    description: 'The maximum time that the server can spend processing the request,
      in

      seconds. The default is 30 seconds. If the value is larger than 30, the default
      will be used

      instead.". Default value is None.'
    defaultValue: None
    types:
    - <xref:int>
  - name: ocpdate
    description: 'The time the request was issued. Client libraries typically set
      this to the

      current system clock time; set it explicitly if you are calling the REST API

      directly. Default value is None.'
    defaultValue: None
    types:
    - <xref:datetime.datetime>
  return:
    description: None
    types:
    - <xref:None>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.batch.BatchClient.create_job_schedule
  name: create_job_schedule
  summary: 'Creates a Job Schedule to the specified Account.


    Creates a Job Schedule to the specified Account.'
  signature: 'create_job_schedule(job_schedule: BatchJobScheduleCreateContent, *,
    timeout: int | None = None, ocpdate: datetime | None = None, **kwargs: Any) ->
    None'
  parameters:
  - name: job_schedule
    description: The Job Schedule to be created. Required.
    isRequired: true
    types:
    - <xref:azure.batch.models.BatchJobScheduleCreateContent>
  keywordOnlyParameters:
  - name: timeout
    description: 'The maximum time that the server can spend processing the request,
      in

      seconds. The default is 30 seconds. If the value is larger than 30, the default
      will be used

      instead.". Default value is None.'
    defaultValue: None
    types:
    - <xref:int>
  - name: ocpdate
    description: 'The time the request was issued. Client libraries typically set
      this to the

      current system clock time; set it explicitly if you are calling the REST API

      directly. Default value is None.'
    defaultValue: None
    types:
    - <xref:datetime.datetime>
  return:
    description: None
    types:
    - <xref:None>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.batch.BatchClient.create_node_user
  name: create_node_user
  summary: 'Adds a user Account to the specified Compute Node.


    You can add a user Account to a Compute Node only when it is in the idle or

    running state.'
  signature: 'create_node_user(pool_id: str, node_id: str, user: BatchNodeUserCreateContent,
    *, timeout: int | None = None, ocpdate: datetime | None = None, **kwargs: Any)
    -> None'
  parameters:
  - name: pool_id
    description: The ID of the Pool that contains the Compute Node. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: node_id
    description: The ID of the machine on which you want to create a user Account.
      Required.
    isRequired: true
    types:
    - <xref:str>
  - name: user
    description: The options to use for creating the user. Required.
    isRequired: true
    types:
    - <xref:azure.batch.models.BatchNodeUserCreateContent>
  keywordOnlyParameters:
  - name: timeout
    description: 'The maximum time that the server can spend processing the request,
      in

      seconds. The default is 30 seconds. If the value is larger than 30, the default
      will be used

      instead.". Default value is None.'
    defaultValue: None
    types:
    - <xref:int>
  - name: ocpdate
    description: 'The time the request was issued. Client libraries typically set
      this to the

      current system clock time; set it explicitly if you are calling the REST API

      directly. Default value is None.'
    defaultValue: None
    types:
    - <xref:datetime.datetime>
  return:
    description: None
    types:
    - <xref:None>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.batch.BatchClient.create_pool
  name: create_pool
  summary: 'Creates a Pool to the specified Account.


    When naming Pools, avoid including sensitive information such as user names or

    secret project names. This information may appear in telemetry logs accessible

    to Microsoft Support engineers.'
  signature: 'create_pool(pool: BatchPoolCreateContent, *, timeout: int | None = None,
    ocpdate: datetime | None = None, **kwargs: Any) -> None'
  parameters:
  - name: pool
    description: The Pool to be created. Required.
    isRequired: true
    types:
    - <xref:azure.batch.models.BatchPoolCreateContent>
  keywordOnlyParameters:
  - name: timeout
    description: 'The maximum time that the server can spend processing the request,
      in

      seconds. The default is 30 seconds. If the value is larger than 30, the default
      will be used

      instead.". Default value is None.'
    defaultValue: None
    types:
    - <xref:int>
  - name: ocpdate
    description: 'The time the request was issued. Client libraries typically set
      this to the

      current system clock time; set it explicitly if you are calling the REST API

      directly. Default value is None.'
    defaultValue: None
    types:
    - <xref:datetime.datetime>
  return:
    description: None
    types:
    - <xref:None>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.batch.BatchClient.create_task
  name: create_task
  summary: 'Creates a Task to the specified Job.


    The maximum lifetime of a Task from addition to completion is 180 days. If a

    Task has not completed within 180 days of being added it will be terminated by

    the Batch service and left in whatever state it was in at that time.'
  signature: 'create_task(job_id: str, task: BatchTaskCreateContent, *, timeout: int
    | None = None, ocpdate: datetime | None = None, **kwargs: Any) -> None'
  parameters:
  - name: job_id
    description: The ID of the Job to which the Task is to be created. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: task
    description: The Task to be created. Required.
    isRequired: true
    types:
    - <xref:azure.batch.models.BatchTaskCreateContent>
  keywordOnlyParameters:
  - name: timeout
    description: 'The maximum time that the server can spend processing the request,
      in

      seconds. The default is 30 seconds. If the value is larger than 30, the default
      will be used

      instead.". Default value is None.'
    defaultValue: None
    types:
    - <xref:int>
  - name: ocpdate
    description: 'The time the request was issued. Client libraries typically set
      this to the

      current system clock time; set it explicitly if you are calling the REST API

      directly. Default value is None.'
    defaultValue: None
    types:
    - <xref:datetime.datetime>
  return:
    description: None
    types:
    - <xref:None>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.batch.BatchClient.create_task_collection
  name: create_task_collection
  summary: 'Adds a collection of Tasks to the specified Job.


    Note that each Task must have a unique ID. The Batch service may not return the

    results for each Task in the same order the Tasks were submitted in this

    request. If the server times out or the connection is closed during the

    request, the request may have been partially or fully processed, or not at all.

    In such cases, the user should re-issue the request. Note that it is up to the

    user to correctly handle failures when re-issuing a request. For example, you

    should use the same Task IDs during a retry so that if the prior operation

    succeeded, the retry will not create extra Tasks unexpectedly. If the response

    contains any Tasks which failed to add, a client can retry the request. In a

    retry, it is most efficient to resubmit only Tasks that failed to add, and to

    omit Tasks that were successfully added on the first attempt. The maximum

    lifetime of a Task from addition to completion is 180 days. If a Task has not

    completed within 180 days of being added it will be terminated by the Batch

    service and left in whatever state it was in at that time.'
  signature: 'create_task_collection(job_id: str, task_collection: BatchTaskGroup,
    *, timeout: int | None = None, ocpdate: datetime | None = None, **kwargs: Any)
    -> BatchTaskAddCollectionResult'
  parameters:
  - name: job_id
    description: The ID of the Job to which the Task collection is to be added. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: task_collection
    description: The Tasks to be added. Required.
    isRequired: true
    types:
    - <xref:azure.batch.models.BatchTaskGroup>
  keywordOnlyParameters:
  - name: timeout
    description: 'The maximum time that the server can spend processing the request,
      in

      seconds. The default is 30 seconds. If the value is larger than 30, the default
      will be used

      instead.". Default value is None.'
    defaultValue: None
    types:
    - <xref:int>
  - name: ocpdate
    description: 'The time the request was issued. Client libraries typically set
      this to the

      current system clock time; set it explicitly if you are calling the REST API

      directly. Default value is None.'
    defaultValue: None
    types:
    - <xref:datetime.datetime>
  return:
    description: 'BatchTaskAddCollectionResult. The BatchTaskAddCollectionResult is
      compatible with

      MutableMapping'
    types:
    - <xref:azure.batch.models.BatchTaskAddCollectionResult>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.batch.BatchClient.create_tasks
  name: create_tasks
  summary: "Adds a collection of Tasks to the specified Job.\n\nNote that each Task\
    \ must have a unique ID. The Batch service may not return the\nresults for each\
    \ Task in the same order the Tasks were submitted in this\nrequest. If the server\
    \ times out or the connection is closed during the\nrequest, the request may have\
    \ been partially or fully processed, or not at all.\nIn such cases, the user should\
    \ re-issue the request. Note that it is up to the\nuser to correctly handle failures\
    \ when re-issuing a request. For example, you\nshould use the same Task IDs during\
    \ a retry so that if the prior operation\nsucceeded, the retry will not create\
    \ extra Tasks unexpectedly. If the response\ncontains any Tasks which failed to\
    \ add, a client can retry the request. In a\nretry, it is most efficient to resubmit\
    \ only Tasks that failed to add, and to\nomit Tasks that were successfully added\
    \ on the first attempt. The maximum\nlifetime of a Task from addition to completion\
    \ is 180 days. If a Task has not\ncompleted within 180 days of being added it\
    \ will be terminated by the Batch\nservice and left in whatever state it was in\
    \ at that time.\n\nand greater than 0, will start additional threads to submit\
    \ requests and wait for them to finish.\nOtherwise will submit create_task_collection\
    \ requests sequentially on main thread\n:type concurrencies: int\n:keyword timeout:\
    \ The maximum number of items to return in the response. A maximum of 1000\n\n\
    \   applications can be returned. Default value is None.\n\n:raises ~azure.batch.custom.CreateTasksError"
  signature: 'create_tasks(job_id: str, task_collection: List[BatchTaskCreateContent],
    concurrencies: int = 0, *, timeout: int | None = None, ocpdate: datetime | None
    = None, **kwargs: Any) -> BatchTaskAddCollectionResult'
  parameters:
  - name: job_id
    isRequired: true
  - name: task_collection
    isRequired: true
  - name: concurrencies
    defaultValue: '0'
  keywordOnlyParameters:
  - name: ocpdate
    description: 'The time the request was issued. Client libraries typically set
      this to the

      current system clock time; set it explicitly if you are calling the REST API

      directly. Default value is None.'
    defaultValue: None
    types:
    - <xref:datetime.datetime>
  - name: content_type
    description: 'Type of content. Default value is "application/json;

      odata=minimalmetadata".'
    types:
    - <xref:str>
  - name: stream
    description: 'Whether to stream the response of this operation. Defaults to False.
      You

      will have to context manage the returned stream.'
    types:
    - <xref:bool>
  - name: timeout
    defaultValue: None
  return:
    description: BatchTaskAddCollectionResult. The BatchTaskAddCollectionResult is
      compatible with MutableMapping
    types:
    - <xref:azure.batch.models.BatchTaskAddCollectionResult>
- uid: azure.batch.BatchClient.deallocate_node
  name: deallocate_node
  summary: 'Deallocates the specified Compute Node.


    You can deallocate a Compute Node only if it is in an idle or running state.'
  signature: 'deallocate_node(pool_id: str, node_id: str, parameters: BatchNodeDeallocateContent
    | None = None, *, timeout: int | None = None, ocpdate: datetime | None = None,
    **kwargs: Any) -> None'
  parameters:
  - name: pool_id
    description: The ID of the Pool that contains the Compute Node. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: node_id
    description: The ID of the Compute Node that you want to restart. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: parameters
    description: The options to use for deallocating the Compute Node. Default value
      is None.
    defaultValue: None
    types:
    - <xref:azure.batch.models.BatchNodeDeallocateContent>
  keywordOnlyParameters:
  - name: timeout
    description: 'The maximum time that the server can spend processing the request,
      in

      seconds. The default is 30 seconds. If the value is larger than 30, the default
      will be used

      instead.". Default value is None.'
    defaultValue: None
    types:
    - <xref:int>
  - name: ocpdate
    description: 'The time the request was issued. Client libraries typically set
      this to the

      current system clock time; set it explicitly if you are calling the REST API

      directly. Default value is None.'
    defaultValue: None
    types:
    - <xref:datetime.datetime>
  return:
    description: None
    types:
    - <xref:None>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.batch.BatchClient.delete_certificate
  name: delete_certificate
  summary: 'Deletes a Certificate from the specified Account.


    You cannot delete a Certificate if a resource (Pool or Compute Node) is using

    it. Before you can delete a Certificate, you must therefore make sure that the

    Certificate is not associated with any existing Pools, the Certificate is not

    installed on any Nodes (even if you remove a Certificate from a Pool, it is not

    removed from existing Compute Nodes in that Pool until they restart), and no

    running Tasks depend on the Certificate. If you try to delete a Certificate

    that is in use, the deletion fails. The Certificate status changes to

    deleteFailed. You can use Cancel Delete Certificate to set the status back to

    active if you decide that you want to continue using the Certificate.'
  signature: 'delete_certificate(thumbprint_algorithm: str, thumbprint: str, *, timeout:
    int | None = None, ocpdate: datetime | None = None, **kwargs: Any) -> None'
  parameters:
  - name: thumbprint_algorithm
    description: 'The algorithm used to derive the thumbprint parameter. This must

      be sha1. Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: thumbprint
    description: The thumbprint of the Certificate to be deleted. Required.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: timeout
    description: 'The maximum time that the server can spend processing the request,
      in

      seconds. The default is 30 seconds. If the value is larger than 30, the default
      will be used

      instead.". Default value is None.'
    defaultValue: None
    types:
    - <xref:int>
  - name: ocpdate
    description: 'The time the request was issued. Client libraries typically set
      this to the

      current system clock time; set it explicitly if you are calling the REST API

      directly. Default value is None.'
    defaultValue: None
    types:
    - <xref:datetime.datetime>
  return:
    description: None
    types:
    - <xref:None>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.batch.BatchClient.delete_job
  name: delete_job
  summary: 'Deletes a Job.


    Deleting a Job also deletes all Tasks that are part of that Job, and all Job

    statistics. This also overrides the retention period for Task data; that is, if

    the Job contains Tasks which are still retained on Compute Nodes, the Batch

    services deletes those Tasks'' working directories and all their contents.  When

    a Delete Job request is received, the Batch service sets the Job to the

    deleting state. All update operations on a Job that is in deleting state will

    fail with status code 409 (Conflict), with additional information indicating

    that the Job is being deleted.'
  signature: 'delete_job(job_id: str, *, timeout: int | None = None, ocpdate: datetime
    | None = None, if_modified_since: datetime | None = None, if_unmodified_since:
    datetime | None = None, force: bool | None = None, etag: str | None = None, match_condition:
    MatchConditions | None = None, **kwargs: Any) -> None'
  parameters:
  - name: job_id
    description: The ID of the Job to delete. Required.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: timeout
    description: 'The maximum time that the server can spend processing the request,
      in

      seconds. The default is 30 seconds. If the value is larger than 30, the default
      will be used

      instead.". Default value is None.'
    defaultValue: None
    types:
    - <xref:int>
  - name: ocpdate
    description: 'The time the request was issued. Client libraries typically set
      this to the

      current system clock time; set it explicitly if you are calling the REST API

      directly. Default value is None.'
    defaultValue: None
    types:
    - <xref:datetime.datetime>
  - name: if_modified_since
    description: 'A timestamp indicating the last modified time of the resource known

      to the

      client. The operation will be performed only if the resource on the service
      has

      been modified since the specified time. Default value is None.'
    defaultValue: None
    types:
    - <xref:datetime.datetime>
  - name: if_unmodified_since
    description: 'A timestamp indicating the last modified time of the resource

      known to the

      client. The operation will be performed only if the resource on the service
      has

      not been modified since the specified time. Default value is None.'
    defaultValue: None
    types:
    - <xref:datetime.datetime>
  - name: force
    description: 'If true, the server will delete the Job even if the corresponding
      nodes have

      not fully processed the deletion. The default value is false. Default value
      is None.'
    defaultValue: None
    types:
    - <xref:bool>
  - name: etag
    description: 'check if resource is changed. Set None to skip checking etag. Default
      value is

      None.'
    defaultValue: None
    types:
    - <xref:str>
  - name: match_condition
    description: The match condition to use upon the etag. Default value is None.
    defaultValue: None
    types:
    - <xref:azure.core.MatchConditions>
  return:
    description: None
    types:
    - <xref:None>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.batch.BatchClient.delete_job_schedule
  name: delete_job_schedule
  summary: 'Deletes a Job Schedule from the specified Account.


    When you delete a Job Schedule, this also deletes all Jobs and Tasks under that

    schedule. When Tasks are deleted, all the files in their working directories on

    the Compute Nodes are also deleted (the retention period is ignored). The Job

    Schedule statistics are no longer accessible once the Job Schedule is deleted,

    though they are still counted towards Account lifetime statistics.'
  signature: 'delete_job_schedule(job_schedule_id: str, *, timeout: int | None = None,
    ocpdate: datetime | None = None, if_modified_since: datetime | None = None, if_unmodified_since:
    datetime | None = None, force: bool | None = None, etag: str | None = None, match_condition:
    MatchConditions | None = None, **kwargs: Any) -> None'
  parameters:
  - name: job_schedule_id
    description: The ID of the Job Schedule to delete. Required.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: timeout
    description: 'The maximum time that the server can spend processing the request,
      in

      seconds. The default is 30 seconds. If the value is larger than 30, the default
      will be used

      instead.". Default value is None.'
    defaultValue: None
    types:
    - <xref:int>
  - name: ocpdate
    description: 'The time the request was issued. Client libraries typically set
      this to the

      current system clock time; set it explicitly if you are calling the REST API

      directly. Default value is None.'
    defaultValue: None
    types:
    - <xref:datetime.datetime>
  - name: if_modified_since
    description: 'A timestamp indicating the last modified time of the resource known

      to the

      client. The operation will be performed only if the resource on the service
      has

      been modified since the specified time. Default value is None.'
    defaultValue: None
    types:
    - <xref:datetime.datetime>
  - name: if_unmodified_since
    description: 'A timestamp indicating the last modified time of the resource

      known to the

      client. The operation will be performed only if the resource on the service
      has

      not been modified since the specified time. Default value is None.'
    defaultValue: None
    types:
    - <xref:datetime.datetime>
  - name: force
    description: 'If true, the server will delete the JobSchedule even if the corresponding
      nodes

      have not fully processed the deletion. The default value is false. Default value
      is None.'
    defaultValue: None
    types:
    - <xref:bool>
  - name: etag
    description: 'check if resource is changed. Set None to skip checking etag. Default
      value is

      None.'
    defaultValue: None
    types:
    - <xref:str>
  - name: match_condition
    description: The match condition to use upon the etag. Default value is None.
    defaultValue: None
    types:
    - <xref:azure.core.MatchConditions>
  return:
    description: None
    types:
    - <xref:None>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.batch.BatchClient.delete_node_file
  name: delete_node_file
  summary: 'Deletes the specified file from the Compute Node.


    Deletes the specified file from the Compute Node.'
  signature: 'delete_node_file(pool_id: str, node_id: str, file_path: str, *, timeout:
    int | None = None, ocpdate: datetime | None = None, recursive: bool | None = None,
    **kwargs: Any) -> None'
  parameters:
  - name: pool_id
    description: The ID of the Pool that contains the Compute Node. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: node_id
    description: The ID of the Compute Node. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: file_path
    description: The path to the file or directory. Required.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: timeout
    description: 'The maximum time that the server can spend processing the request,
      in

      seconds. The default is 30 seconds. If the value is larger than 30, the default
      will be used

      instead.". Default value is None.'
    defaultValue: None
    types:
    - <xref:int>
  - name: ocpdate
    description: 'The time the request was issued. Client libraries typically set
      this to the

      current system clock time; set it explicitly if you are calling the REST API

      directly. Default value is None.'
    defaultValue: None
    types:
    - <xref:datetime.datetime>
  - name: recursive
    description: 'Whether to delete children of a directory. If the filePath parameter

      represents

      a directory instead of a file, you can set recursive to true to delete the

      directory and all of the files and subdirectories in it. If recursive is false

      then the directory must be empty or deletion will fail. Default value is None.'
    defaultValue: None
    types:
    - <xref:bool>
  return:
    description: None
    types:
    - <xref:None>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.batch.BatchClient.delete_node_user
  name: delete_node_user
  summary: 'Deletes a user Account from the specified Compute Node.


    You can delete a user Account to a Compute Node only when it is in the idle or

    running state.'
  signature: 'delete_node_user(pool_id: str, node_id: str, user_name: str, *, timeout:
    int | None = None, ocpdate: datetime | None = None, **kwargs: Any) -> None'
  parameters:
  - name: pool_id
    description: The ID of the Pool that contains the Compute Node. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: node_id
    description: The ID of the machine on which you want to delete a user Account.
      Required.
    isRequired: true
    types:
    - <xref:str>
  - name: user_name
    description: The name of the user Account to delete. Required.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: timeout
    description: 'The maximum time that the server can spend processing the request,
      in

      seconds. The default is 30 seconds. If the value is larger than 30, the default
      will be used

      instead.". Default value is None.'
    defaultValue: None
    types:
    - <xref:int>
  - name: ocpdate
    description: 'The time the request was issued. Client libraries typically set
      this to the

      current system clock time; set it explicitly if you are calling the REST API

      directly. Default value is None.'
    defaultValue: None
    types:
    - <xref:datetime.datetime>
  return:
    description: None
    types:
    - <xref:None>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.batch.BatchClient.delete_pool
  name: delete_pool
  summary: 'Deletes a Pool from the specified Account.


    When you request that a Pool be deleted, the following actions occur: the Pool

    state is set to deleting; any ongoing resize operation on the Pool are stopped;

    the Batch service starts resizing the Pool to zero Compute Nodes; any Tasks

    running on existing Compute Nodes are terminated and requeued (as if a resize

    Pool operation had been requested with the default requeue option); finally,

    the Pool is removed from the system. Because running Tasks are requeued, the

    user can rerun these Tasks by updating their Job to target a different Pool.

    The Tasks can then run on the new Pool. If you want to override the requeue

    behavior, then you should call resize Pool explicitly to shrink the Pool to

    zero size before deleting the Pool. If you call an Update, Patch or Delete API

    on a Pool in the deleting state, it will fail with HTTP status code 409 with

    error code PoolBeingDeleted.'
  signature: 'delete_pool(pool_id: str, *, timeout: int | None = None, ocpdate: datetime
    | None = None, if_modified_since: datetime | None = None, if_unmodified_since:
    datetime | None = None, etag: str | None = None, match_condition: MatchConditions
    | None = None, **kwargs: Any) -> None'
  parameters:
  - name: pool_id
    description: The ID of the Pool to get. Required.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: timeout
    description: 'The maximum time that the server can spend processing the request,
      in

      seconds. The default is 30 seconds. If the value is larger than 30, the default
      will be used

      instead.". Default value is None.'
    defaultValue: None
    types:
    - <xref:int>
  - name: ocpdate
    description: 'The time the request was issued. Client libraries typically set
      this to the

      current system clock time; set it explicitly if you are calling the REST API

      directly. Default value is None.'
    defaultValue: None
    types:
    - <xref:datetime.datetime>
  - name: if_modified_since
    description: 'A timestamp indicating the last modified time of the resource known

      to the

      client. The operation will be performed only if the resource on the service
      has

      been modified since the specified time. Default value is None.'
    defaultValue: None
    types:
    - <xref:datetime.datetime>
  - name: if_unmodified_since
    description: 'A timestamp indicating the last modified time of the resource

      known to the

      client. The operation will be performed only if the resource on the service
      has

      not been modified since the specified time. Default value is None.'
    defaultValue: None
    types:
    - <xref:datetime.datetime>
  - name: etag
    description: 'check if resource is changed. Set None to skip checking etag. Default
      value is

      None.'
    defaultValue: None
    types:
    - <xref:str>
  - name: match_condition
    description: The match condition to use upon the etag. Default value is None.
    defaultValue: None
    types:
    - <xref:azure.core.MatchConditions>
  return:
    description: None
    types:
    - <xref:None>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.batch.BatchClient.delete_task
  name: delete_task
  summary: 'Deletes a Task from the specified Job.


    When a Task is deleted, all of the files in its directory on the Compute Node

    where it ran are also deleted (regardless of the retention time). For

    multi-instance Tasks, the delete Task operation applies synchronously to the

    primary task; subtasks and their files are then deleted asynchronously in the

    background.'
  signature: 'delete_task(job_id: str, task_id: str, *, timeout: int | None = None,
    ocpdate: datetime | None = None, if_modified_since: datetime | None = None, if_unmodified_since:
    datetime | None = None, etag: str | None = None, match_condition: MatchConditions
    | None = None, **kwargs: Any) -> None'
  parameters:
  - name: job_id
    description: The ID of the Job from which to delete the Task. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: task_id
    description: The ID of the Task to delete. Required.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: timeout
    description: 'The maximum time that the server can spend processing the request,
      in

      seconds. The default is 30 seconds. If the value is larger than 30, the default
      will be used

      instead.". Default value is None.'
    defaultValue: None
    types:
    - <xref:int>
  - name: ocpdate
    description: 'The time the request was issued. Client libraries typically set
      this to the

      current system clock time; set it explicitly if you are calling the REST API

      directly. Default value is None.'
    defaultValue: None
    types:
    - <xref:datetime.datetime>
  - name: if_modified_since
    description: 'A timestamp indicating the last modified time of the resource known

      to the

      client. The operation will be performed only if the resource on the service
      has

      been modified since the specified time. Default value is None.'
    defaultValue: None
    types:
    - <xref:datetime.datetime>
  - name: if_unmodified_since
    description: 'A timestamp indicating the last modified time of the resource

      known to the

      client. The operation will be performed only if the resource on the service
      has

      not been modified since the specified time. Default value is None.'
    defaultValue: None
    types:
    - <xref:datetime.datetime>
  - name: etag
    description: 'check if resource is changed. Set None to skip checking etag. Default
      value is

      None.'
    defaultValue: None
    types:
    - <xref:str>
  - name: match_condition
    description: The match condition to use upon the etag. Default value is None.
    defaultValue: None
    types:
    - <xref:azure.core.MatchConditions>
  return:
    description: None
    types:
    - <xref:None>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.batch.BatchClient.delete_task_file
  name: delete_task_file
  summary: 'Deletes the specified Task file from the Compute Node where the Task ran.


    Deletes the specified Task file from the Compute Node where the Task ran.'
  signature: 'delete_task_file(job_id: str, task_id: str, file_path: str, *, timeout:
    int | None = None, ocpdate: datetime | None = None, recursive: bool | None = None,
    **kwargs: Any) -> None'
  parameters:
  - name: job_id
    description: The ID of the Job that contains the Task. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: task_id
    description: The ID of the Task whose file you want to retrieve. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: file_path
    description: The path to the Task file that you want to get the content of. Required.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: timeout
    description: 'The maximum time that the server can spend processing the request,
      in

      seconds. The default is 30 seconds. If the value is larger than 30, the default
      will be used

      instead.". Default value is None.'
    defaultValue: None
    types:
    - <xref:int>
  - name: ocpdate
    description: 'The time the request was issued. Client libraries typically set
      this to the

      current system clock time; set it explicitly if you are calling the REST API

      directly. Default value is None.'
    defaultValue: None
    types:
    - <xref:datetime.datetime>
  - name: recursive
    description: 'Whether to delete children of a directory. If the filePath parameter

      represents

      a directory instead of a file, you can set recursive to true to delete the

      directory and all of the files and subdirectories in it. If recursive is false

      then the directory must be empty or deletion will fail. Default value is None.'
    defaultValue: None
    types:
    - <xref:bool>
  return:
    description: None
    types:
    - <xref:None>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.batch.BatchClient.disable_job
  name: disable_job
  summary: 'Disables the specified Job, preventing new Tasks from running.


    The Batch Service immediately moves the Job to the disabling state. Batch then

    uses the disableTasks parameter to determine what to do with the currently

    running Tasks of the Job. The Job remains in the disabling state until the

    disable operation is completed and all Tasks have been dealt with according to

    the disableTasks option; the Job then moves to the disabled state. No new Tasks

    are started under the Job until it moves back to active state. If you try to

    disable a Job that is in any state other than active, disabling, or disabled,

    the request fails with status code 409.'
  signature: 'disable_job(job_id: str, content: BatchJobDisableContent, *, timeout:
    int | None = None, ocpdate: datetime | None = None, if_modified_since: datetime
    | None = None, if_unmodified_since: datetime | None = None, etag: str | None =
    None, match_condition: MatchConditions | None = None, **kwargs: Any) -> None'
  parameters:
  - name: job_id
    description: The ID of the Job to disable. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: content
    description: The options to use for disabling the Job. Required.
    isRequired: true
    types:
    - <xref:azure.batch.models.BatchJobDisableContent>
  keywordOnlyParameters:
  - name: timeout
    description: 'The maximum time that the server can spend processing the request,
      in

      seconds. The default is 30 seconds. If the value is larger than 30, the default
      will be used

      instead.". Default value is None.'
    defaultValue: None
    types:
    - <xref:int>
  - name: ocpdate
    description: 'The time the request was issued. Client libraries typically set
      this to the

      current system clock time; set it explicitly if you are calling the REST API

      directly. Default value is None.'
    defaultValue: None
    types:
    - <xref:datetime.datetime>
  - name: if_modified_since
    description: 'A timestamp indicating the last modified time of the resource known

      to the

      client. The operation will be performed only if the resource on the service
      has

      been modified since the specified time. Default value is None.'
    defaultValue: None
    types:
    - <xref:datetime.datetime>
  - name: if_unmodified_since
    description: 'A timestamp indicating the last modified time of the resource

      known to the

      client. The operation will be performed only if the resource on the service
      has

      not been modified since the specified time. Default value is None.'
    defaultValue: None
    types:
    - <xref:datetime.datetime>
  - name: etag
    description: 'check if resource is changed. Set None to skip checking etag. Default
      value is

      None.'
    defaultValue: None
    types:
    - <xref:str>
  - name: match_condition
    description: The match condition to use upon the etag. Default value is None.
    defaultValue: None
    types:
    - <xref:azure.core.MatchConditions>
  return:
    description: None
    types:
    - <xref:None>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.batch.BatchClient.disable_job_schedule
  name: disable_job_schedule
  summary: 'Disables a Job Schedule.


    No new Jobs will be created until the Job Schedule is enabled again.'
  signature: 'disable_job_schedule(job_schedule_id: str, *, timeout: int | None =
    None, ocpdate: datetime | None = None, if_modified_since: datetime | None = None,
    if_unmodified_since: datetime | None = None, etag: str | None = None, match_condition:
    MatchConditions | None = None, **kwargs: Any) -> None'
  parameters:
  - name: job_schedule_id
    description: The ID of the Job Schedule to disable. Required.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: timeout
    description: 'The maximum time that the server can spend processing the request,
      in

      seconds. The default is 30 seconds. If the value is larger than 30, the default
      will be used

      instead.". Default value is None.'
    defaultValue: None
    types:
    - <xref:int>
  - name: ocpdate
    description: 'The time the request was issued. Client libraries typically set
      this to the

      current system clock time; set it explicitly if you are calling the REST API

      directly. Default value is None.'
    defaultValue: None
    types:
    - <xref:datetime.datetime>
  - name: if_modified_since
    description: 'A timestamp indicating the last modified time of the resource known

      to the

      client. The operation will be performed only if the resource on the service
      has

      been modified since the specified time. Default value is None.'
    defaultValue: None
    types:
    - <xref:datetime.datetime>
  - name: if_unmodified_since
    description: 'A timestamp indicating the last modified time of the resource

      known to the

      client. The operation will be performed only if the resource on the service
      has

      not been modified since the specified time. Default value is None.'
    defaultValue: None
    types:
    - <xref:datetime.datetime>
  - name: etag
    description: 'check if resource is changed. Set None to skip checking etag. Default
      value is

      None.'
    defaultValue: None
    types:
    - <xref:str>
  - name: match_condition
    description: The match condition to use upon the etag. Default value is None.
    defaultValue: None
    types:
    - <xref:azure.core.MatchConditions>
  return:
    description: None
    types:
    - <xref:None>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.batch.BatchClient.disable_node_scheduling
  name: disable_node_scheduling
  summary: 'Disables Task scheduling on the specified Compute Node.


    You can disable Task scheduling on a Compute Node only if its current

    scheduling state is enabled.'
  signature: 'disable_node_scheduling(pool_id: str, node_id: str, parameters: BatchNodeDisableSchedulingContent
    | None = None, *, timeout: int | None = None, ocpdate: datetime | None = None,
    **kwargs: Any) -> None'
  parameters:
  - name: pool_id
    description: The ID of the Pool that contains the Compute Node. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: node_id
    description: 'The ID of the Compute Node on which you want to disable Task scheduling.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: parameters
    description: 'The options to use for disabling scheduling on the Compute Node.
      Default

      value is None.'
    defaultValue: None
    types:
    - <xref:azure.batch.models.BatchNodeDisableSchedulingContent>
  keywordOnlyParameters:
  - name: timeout
    description: 'The maximum time that the server can spend processing the request,
      in

      seconds. The default is 30 seconds. If the value is larger than 30, the default
      will be used

      instead.". Default value is None.'
    defaultValue: None
    types:
    - <xref:int>
  - name: ocpdate
    description: 'The time the request was issued. Client libraries typically set
      this to the

      current system clock time; set it explicitly if you are calling the REST API

      directly. Default value is None.'
    defaultValue: None
    types:
    - <xref:datetime.datetime>
  return:
    description: None
    types:
    - <xref:None>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.batch.BatchClient.disable_pool_auto_scale
  name: disable_pool_auto_scale
  summary: 'Disables automatic scaling for a Pool.


    Disables automatic scaling for a Pool.'
  signature: 'disable_pool_auto_scale(pool_id: str, *, timeout: int | None = None,
    ocpdate: datetime | None = None, **kwargs: Any) -> None'
  parameters:
  - name: pool_id
    description: The ID of the Pool on which to disable automatic scaling. Required.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: timeout
    description: 'The maximum time that the server can spend processing the request,
      in

      seconds. The default is 30 seconds. If the value is larger than 30, the default
      will be used

      instead.". Default value is None.'
    defaultValue: None
    types:
    - <xref:int>
  - name: ocpdate
    description: 'The time the request was issued. Client libraries typically set
      this to the

      current system clock time; set it explicitly if you are calling the REST API

      directly. Default value is None.'
    defaultValue: None
    types:
    - <xref:datetime.datetime>
  return:
    description: None
    types:
    - <xref:None>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.batch.BatchClient.enable_job
  name: enable_job
  summary: 'Enables the specified Job, allowing new Tasks to run.


    When you call this API, the Batch service sets a disabled Job to the enabling

    state. After the this operation is completed, the Job moves to the active

    state, and scheduling of new Tasks under the Job resumes. The Batch service

    does not allow a Task to remain in the active state for more than 180 days.

    Therefore, if you enable a Job containing active Tasks which were added more

    than 180 days ago, those Tasks will not run.'
  signature: 'enable_job(job_id: str, *, timeout: int | None = None, ocpdate: datetime
    | None = None, if_modified_since: datetime | None = None, if_unmodified_since:
    datetime | None = None, etag: str | None = None, match_condition: MatchConditions
    | None = None, **kwargs: Any) -> None'
  parameters:
  - name: job_id
    description: The ID of the Job to enable. Required.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: timeout
    description: 'The maximum time that the server can spend processing the request,
      in

      seconds. The default is 30 seconds. If the value is larger than 30, the default
      will be used

      instead.". Default value is None.'
    defaultValue: None
    types:
    - <xref:int>
  - name: ocpdate
    description: 'The time the request was issued. Client libraries typically set
      this to the

      current system clock time; set it explicitly if you are calling the REST API

      directly. Default value is None.'
    defaultValue: None
    types:
    - <xref:datetime.datetime>
  - name: if_modified_since
    description: 'A timestamp indicating the last modified time of the resource known

      to the

      client. The operation will be performed only if the resource on the service
      has

      been modified since the specified time. Default value is None.'
    defaultValue: None
    types:
    - <xref:datetime.datetime>
  - name: if_unmodified_since
    description: 'A timestamp indicating the last modified time of the resource

      known to the

      client. The operation will be performed only if the resource on the service
      has

      not been modified since the specified time. Default value is None.'
    defaultValue: None
    types:
    - <xref:datetime.datetime>
  - name: etag
    description: 'check if resource is changed. Set None to skip checking etag. Default
      value is

      None.'
    defaultValue: None
    types:
    - <xref:str>
  - name: match_condition
    description: The match condition to use upon the etag. Default value is None.
    defaultValue: None
    types:
    - <xref:azure.core.MatchConditions>
  return:
    description: None
    types:
    - <xref:None>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.batch.BatchClient.enable_job_schedule
  name: enable_job_schedule
  summary: 'Enables a Job Schedule.


    Enables a Job Schedule.'
  signature: 'enable_job_schedule(job_schedule_id: str, *, timeout: int | None = None,
    ocpdate: datetime | None = None, if_modified_since: datetime | None = None, if_unmodified_since:
    datetime | None = None, etag: str | None = None, match_condition: MatchConditions
    | None = None, **kwargs: Any) -> None'
  parameters:
  - name: job_schedule_id
    description: The ID of the Job Schedule to enable. Required.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: timeout
    description: 'The maximum time that the server can spend processing the request,
      in

      seconds. The default is 30 seconds. If the value is larger than 30, the default
      will be used

      instead.". Default value is None.'
    defaultValue: None
    types:
    - <xref:int>
  - name: ocpdate
    description: 'The time the request was issued. Client libraries typically set
      this to the

      current system clock time; set it explicitly if you are calling the REST API

      directly. Default value is None.'
    defaultValue: None
    types:
    - <xref:datetime.datetime>
  - name: if_modified_since
    description: 'A timestamp indicating the last modified time of the resource known

      to the

      client. The operation will be performed only if the resource on the service
      has

      been modified since the specified time. Default value is None.'
    defaultValue: None
    types:
    - <xref:datetime.datetime>
  - name: if_unmodified_since
    description: 'A timestamp indicating the last modified time of the resource

      known to the

      client. The operation will be performed only if the resource on the service
      has

      not been modified since the specified time. Default value is None.'
    defaultValue: None
    types:
    - <xref:datetime.datetime>
  - name: etag
    description: 'check if resource is changed. Set None to skip checking etag. Default
      value is

      None.'
    defaultValue: None
    types:
    - <xref:str>
  - name: match_condition
    description: The match condition to use upon the etag. Default value is None.
    defaultValue: None
    types:
    - <xref:azure.core.MatchConditions>
  return:
    description: None
    types:
    - <xref:None>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.batch.BatchClient.enable_node_scheduling
  name: enable_node_scheduling
  summary: 'Enables Task scheduling on the specified Compute Node.


    You can enable Task scheduling on a Compute Node only if its current scheduling

    state is disabled.'
  signature: 'enable_node_scheduling(pool_id: str, node_id: str, *, timeout: int |
    None = None, ocpdate: datetime | None = None, **kwargs: Any) -> None'
  parameters:
  - name: pool_id
    description: The ID of the Pool that contains the Compute Node. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: node_id
    description: 'The ID of the Compute Node on which you want to enable Task scheduling.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: timeout
    description: 'The maximum time that the server can spend processing the request,
      in

      seconds. The default is 30 seconds. If the value is larger than 30, the default
      will be used

      instead.". Default value is None.'
    defaultValue: None
    types:
    - <xref:int>
  - name: ocpdate
    description: 'The time the request was issued. Client libraries typically set
      this to the

      current system clock time; set it explicitly if you are calling the REST API

      directly. Default value is None.'
    defaultValue: None
    types:
    - <xref:datetime.datetime>
  return:
    description: None
    types:
    - <xref:None>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.batch.BatchClient.enable_pool_auto_scale
  name: enable_pool_auto_scale
  summary: 'Enables automatic scaling for a Pool.


    You cannot enable automatic scaling on a Pool if a resize operation is in

    progress on the Pool. If automatic scaling of the Pool is currently disabled,

    you must specify a valid autoscale formula as part of the request. If automatic

    scaling of the Pool is already enabled, you may specify a new autoscale formula

    and/or a new evaluation interval. You cannot call this API for the same Pool

    more than once every 30 seconds.'
  signature: 'enable_pool_auto_scale(pool_id: str, content: BatchPoolEnableAutoScaleContent,
    *, timeout: int | None = None, ocpdate: datetime | None = None, if_modified_since:
    datetime | None = None, if_unmodified_since: datetime | None = None, etag: str
    | None = None, match_condition: MatchConditions | None = None, **kwargs: Any)
    -> None'
  parameters:
  - name: pool_id
    description: The ID of the Pool to get. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: content
    description: The options to use for enabling automatic scaling. Required.
    isRequired: true
    types:
    - <xref:azure.batch.models.BatchPoolEnableAutoScaleContent>
  keywordOnlyParameters:
  - name: timeout
    description: 'The maximum time that the server can spend processing the request,
      in

      seconds. The default is 30 seconds. If the value is larger than 30, the default
      will be used

      instead.". Default value is None.'
    defaultValue: None
    types:
    - <xref:int>
  - name: ocpdate
    description: 'The time the request was issued. Client libraries typically set
      this to the

      current system clock time; set it explicitly if you are calling the REST API

      directly. Default value is None.'
    defaultValue: None
    types:
    - <xref:datetime.datetime>
  - name: if_modified_since
    description: 'A timestamp indicating the last modified time of the resource known

      to the

      client. The operation will be performed only if the resource on the service
      has

      been modified since the specified time. Default value is None.'
    defaultValue: None
    types:
    - <xref:datetime.datetime>
  - name: if_unmodified_since
    description: 'A timestamp indicating the last modified time of the resource

      known to the

      client. The operation will be performed only if the resource on the service
      has

      not been modified since the specified time. Default value is None.'
    defaultValue: None
    types:
    - <xref:datetime.datetime>
  - name: etag
    description: 'check if resource is changed. Set None to skip checking etag. Default
      value is

      None.'
    defaultValue: None
    types:
    - <xref:str>
  - name: match_condition
    description: The match condition to use upon the etag. Default value is None.
    defaultValue: None
    types:
    - <xref:azure.core.MatchConditions>
  return:
    description: None
    types:
    - <xref:None>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.batch.BatchClient.evaluate_pool_auto_scale
  name: evaluate_pool_auto_scale
  summary: 'Gets the result of evaluating an automatic scaling formula on the Pool.


    This API is primarily for validating an autoscale formula, as it simply returns

    the result without applying the formula to the Pool. The Pool must have auto

    scaling enabled in order to evaluate a formula.'
  signature: 'evaluate_pool_auto_scale(pool_id: str, content: BatchPoolEvaluateAutoScaleContent,
    *, timeout: int | None = None, ocpdate: datetime | None = None, **kwargs: Any)
    -> AutoScaleRun'
  parameters:
  - name: pool_id
    description: 'The ID of the Pool on which to evaluate the automatic scaling formula.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: content
    description: The options to use for evaluating the automatic scaling formula.
      Required.
    isRequired: true
    types:
    - <xref:azure.batch.models.BatchPoolEvaluateAutoScaleContent>
  keywordOnlyParameters:
  - name: timeout
    description: 'The maximum time that the server can spend processing the request,
      in

      seconds. The default is 30 seconds. If the value is larger than 30, the default
      will be used

      instead.". Default value is None.'
    defaultValue: None
    types:
    - <xref:int>
  - name: ocpdate
    description: 'The time the request was issued. Client libraries typically set
      this to the

      current system clock time; set it explicitly if you are calling the REST API

      directly. Default value is None.'
    defaultValue: None
    types:
    - <xref:datetime.datetime>
  return:
    description: AutoScaleRun. The AutoScaleRun is compatible with MutableMapping
    types:
    - <xref:azure.batch.models.AutoScaleRun>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.batch.BatchClient.get_application
  name: get_application
  summary: 'Gets information about the specified Application.


    This operation returns only Applications and versions that are available for

    use on Compute Nodes; that is, that can be used in an Package reference. For

    administrator information about Applications and versions that are not yet

    available to Compute Nodes, use the Azure portal or the Azure Resource Manager

    API.'
  signature: 'get_application(application_id: str, *, timeout: int | None = None,
    ocpdate: datetime | None = None, **kwargs: Any) -> BatchApplication'
  parameters:
  - name: application_id
    description: The ID of the Application. Required.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: timeout
    description: 'The maximum time that the server can spend processing the request,
      in

      seconds. The default is 30 seconds. If the value is larger than 30, the default
      will be used

      instead.". Default value is None.'
    defaultValue: None
    types:
    - <xref:int>
  - name: ocpdate
    description: 'The time the request was issued. Client libraries typically set
      this to the

      current system clock time; set it explicitly if you are calling the REST API

      directly. Default value is None.'
    defaultValue: None
    types:
    - <xref:datetime.datetime>
  return:
    description: BatchApplication. The BatchApplication is compatible with MutableMapping
    types:
    - <xref:azure.batch.models.BatchApplication>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.batch.BatchClient.get_certificate
  name: get_certificate
  summary: Gets information about the specified Certificate.
  signature: 'get_certificate(thumbprint_algorithm: str, thumbprint: str, *, timeout:
    int | None = None, ocpdate: datetime | None = None, select: List[str] | None =
    None, **kwargs: Any) -> GetCertificateResponse'
  parameters:
  - name: thumbprint_algorithm
    description: 'The algorithm used to derive the thumbprint parameter. This must

      be sha1. Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: thumbprint
    description: The thumbprint of the Certificate to get. Required.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: timeout
    description: 'The maximum time that the server can spend processing the request,
      in

      seconds. The default is 30 seconds. If the value is larger than 30, the default
      will be used

      instead.". Default value is None.'
    defaultValue: None
    types:
    - <xref:int>
  - name: ocpdate
    description: 'The time the request was issued. Client libraries typically set
      this to the

      current system clock time; set it explicitly if you are calling the REST API

      directly. Default value is None.'
    defaultValue: None
    types:
    - <xref:datetime.datetime>
  - name: select
    description: An OData $select clause. Default value is None.
    defaultValue: None
    types:
    - <xref:list>[<xref:str>]
  return:
    description: GetCertificateResponse. The GetCertificateResponse is compatible
      with MutableMapping
    types:
    - <xref:azure.batch.models.GetCertificateResponse>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.batch.BatchClient.get_job
  name: get_job
  summary: 'Gets information about the specified Job.


    Gets information about the specified Job.'
  signature: 'get_job(job_id: str, *, timeout: int | None = None, ocpdate: datetime
    | None = None, if_modified_since: datetime | None = None, if_unmodified_since:
    datetime | None = None, select: List[str] | None = None, expand: List[str] | None
    = None, etag: str | None = None, match_condition: MatchConditions | None = None,
    **kwargs: Any) -> BatchJob'
  parameters:
  - name: job_id
    description: The ID of the Job. Required.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: timeout
    description: 'The maximum time that the server can spend processing the request,
      in

      seconds. The default is 30 seconds. If the value is larger than 30, the default
      will be used

      instead.". Default value is None.'
    defaultValue: None
    types:
    - <xref:int>
  - name: ocpdate
    description: 'The time the request was issued. Client libraries typically set
      this to the

      current system clock time; set it explicitly if you are calling the REST API

      directly. Default value is None.'
    defaultValue: None
    types:
    - <xref:datetime.datetime>
  - name: if_modified_since
    description: 'A timestamp indicating the last modified time of the resource known

      to the

      client. The operation will be performed only if the resource on the service
      has

      been modified since the specified time. Default value is None.'
    defaultValue: None
    types:
    - <xref:datetime.datetime>
  - name: if_unmodified_since
    description: 'A timestamp indicating the last modified time of the resource

      known to the

      client. The operation will be performed only if the resource on the service
      has

      not been modified since the specified time. Default value is None.'
    defaultValue: None
    types:
    - <xref:datetime.datetime>
  - name: select
    description: An OData $select clause. Default value is None.
    defaultValue: None
    types:
    - <xref:list>[<xref:str>]
  - name: expand
    description: An OData $expand clause. Default value is None.
    defaultValue: None
    types:
    - <xref:list>[<xref:str>]
  - name: etag
    description: 'check if resource is changed. Set None to skip checking etag. Default
      value is

      None.'
    defaultValue: None
    types:
    - <xref:str>
  - name: match_condition
    description: The match condition to use upon the etag. Default value is None.
    defaultValue: None
    types:
    - <xref:azure.core.MatchConditions>
  return:
    description: BatchJob. The BatchJob is compatible with MutableMapping
    types:
    - <xref:azure.batch.models.BatchJob>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.batch.BatchClient.get_job_schedule
  name: get_job_schedule
  summary: Gets information about the specified Job Schedule.
  signature: 'get_job_schedule(job_schedule_id: str, *, timeout: int | None = None,
    ocpdate: datetime | None = None, if_modified_since: datetime | None = None, if_unmodified_since:
    datetime | None = None, select: List[str] | None = None, expand: List[str] | None
    = None, etag: str | None = None, match_condition: MatchConditions | None = None,
    **kwargs: Any) -> BatchJobSchedule'
  parameters:
  - name: job_schedule_id
    description: The ID of the Job Schedule to get. Required.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: timeout
    description: 'The maximum time that the server can spend processing the request,
      in

      seconds. The default is 30 seconds. If the value is larger than 30, the default
      will be used

      instead.". Default value is None.'
    defaultValue: None
    types:
    - <xref:int>
  - name: ocpdate
    description: 'The time the request was issued. Client libraries typically set
      this to the

      current system clock time; set it explicitly if you are calling the REST API

      directly. Default value is None.'
    defaultValue: None
    types:
    - <xref:datetime.datetime>
  - name: if_modified_since
    description: 'A timestamp indicating the last modified time of the resource known

      to the

      client. The operation will be performed only if the resource on the service
      has

      been modified since the specified time. Default value is None.'
    defaultValue: None
    types:
    - <xref:datetime.datetime>
  - name: if_unmodified_since
    description: 'A timestamp indicating the last modified time of the resource

      known to the

      client. The operation will be performed only if the resource on the service
      has

      not been modified since the specified time. Default value is None.'
    defaultValue: None
    types:
    - <xref:datetime.datetime>
  - name: select
    description: An OData $select clause. Default value is None.
    defaultValue: None
    types:
    - <xref:list>[<xref:str>]
  - name: expand
    description: An OData $expand clause. Default value is None.
    defaultValue: None
    types:
    - <xref:list>[<xref:str>]
  - name: etag
    description: 'check if resource is changed. Set None to skip checking etag. Default
      value is

      None.'
    defaultValue: None
    types:
    - <xref:str>
  - name: match_condition
    description: The match condition to use upon the etag. Default value is None.
    defaultValue: None
    types:
    - <xref:azure.core.MatchConditions>
  return:
    description: BatchJobSchedule. The BatchJobSchedule is compatible with MutableMapping
    types:
    - <xref:azure.batch.models.BatchJobSchedule>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.batch.BatchClient.get_job_task_counts
  name: get_job_task_counts
  summary: 'Gets the Task counts for the specified Job.


    Task counts provide a count of the Tasks by active, running or completed Task

    state, and a count of Tasks which succeeded or failed. Tasks in the preparing

    state are counted as running. Note that the numbers returned may not always be

    up to date. If you need exact task counts, use a list query.'
  signature: 'get_job_task_counts(job_id: str, *, timeout: int | None = None, ocpdate:
    datetime | None = None, **kwargs: Any) -> BatchTaskCountsResult'
  parameters:
  - name: job_id
    description: The ID of the Job. Required.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: timeout
    description: 'The maximum time that the server can spend processing the request,
      in

      seconds. The default is 30 seconds. If the value is larger than 30, the default
      will be used

      instead.". Default value is None.'
    defaultValue: None
    types:
    - <xref:int>
  - name: ocpdate
    description: 'The time the request was issued. Client libraries typically set
      this to the

      current system clock time; set it explicitly if you are calling the REST API

      directly. Default value is None.'
    defaultValue: None
    types:
    - <xref:datetime.datetime>
  return:
    description: BatchTaskCountsResult. The BatchTaskCountsResult is compatible with
      MutableMapping
    types:
    - <xref:azure.batch.models.BatchTaskCountsResult>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.batch.BatchClient.get_node
  name: get_node
  summary: 'Gets information about the specified Compute Node.


    Gets information about the specified Compute Node.'
  signature: 'get_node(pool_id: str, node_id: str, *, timeout: int | None = None,
    ocpdate: datetime | None = None, select: List[str] | None = None, **kwargs: Any)
    -> BatchNode'
  parameters:
  - name: pool_id
    description: The ID of the Pool that contains the Compute Node. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: node_id
    description: The ID of the Compute Node that you want to get information about.
      Required.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: timeout
    description: 'The maximum time that the server can spend processing the request,
      in

      seconds. The default is 30 seconds. If the value is larger than 30, the default
      will be used

      instead.". Default value is None.'
    defaultValue: None
    types:
    - <xref:int>
  - name: ocpdate
    description: 'The time the request was issued. Client libraries typically set
      this to the

      current system clock time; set it explicitly if you are calling the REST API

      directly. Default value is None.'
    defaultValue: None
    types:
    - <xref:datetime.datetime>
  - name: select
    description: An OData $select clause. Default value is None.
    defaultValue: None
    types:
    - <xref:list>[<xref:str>]
  return:
    description: BatchNode. The BatchNode is compatible with MutableMapping
    types:
    - <xref:azure.batch.models.BatchNode>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.batch.BatchClient.get_node_extension
  name: get_node_extension
  summary: 'Gets information about the specified Compute Node Extension.


    Gets information about the specified Compute Node Extension.'
  signature: 'get_node_extension(pool_id: str, node_id: str, extension_name: str,
    *, timeout: int | None = None, ocpdate: datetime | None = None, select: List[str]
    | None = None, **kwargs: Any) -> BatchNodeVMExtension'
  parameters:
  - name: pool_id
    description: The ID of the Pool that contains the Compute Node. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: node_id
    description: The ID of the Compute Node that contains the extensions. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: extension_name
    description: 'The name of the Compute Node Extension that you want to get information

      about. Required.'
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: timeout
    description: 'The maximum time that the server can spend processing the request,
      in

      seconds. The default is 30 seconds. If the value is larger than 30, the default
      will be used

      instead.". Default value is None.'
    defaultValue: None
    types:
    - <xref:int>
  - name: ocpdate
    description: 'The time the request was issued. Client libraries typically set
      this to the

      current system clock time; set it explicitly if you are calling the REST API

      directly. Default value is None.'
    defaultValue: None
    types:
    - <xref:datetime.datetime>
  - name: select
    description: An OData $select clause. Default value is None.
    defaultValue: None
    types:
    - <xref:list>[<xref:str>]
  return:
    description: BatchNodeVMExtension. The BatchNodeVMExtension is compatible with
      MutableMapping
    types:
    - <xref:azure.batch.models.BatchNodeVMExtension>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.batch.BatchClient.get_node_file
  name: get_node_file
  summary: Returns the content of the specified Compute Node file.
  signature: 'get_node_file(pool_id: str, node_id: str, file_path: str, *, timeout:
    int | None = None, ocpdate: datetime | None = None, if_modified_since: datetime
    | None = None, if_unmodified_since: datetime | None = None, ocp_range: str | None
    = None, **kwargs: Any) -> Iterator[bytes]'
  parameters:
  - name: pool_id
    description: The ID of the Pool that contains the Compute Node. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: node_id
    description: The ID of the Compute Node from which you want to delete the file.
      Required.
    isRequired: true
    types:
    - <xref:str>
  - name: file_path
    description: The path to the file or directory that you want to delete. Required.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: timeout
    description: 'The maximum number of items to return in the response. A maximum
      of 1000

      applications can be returned. Default value is None.'
    defaultValue: None
    types:
    - <xref:int>
  - name: ocpdate
    description: 'The time the request was issued. Client libraries typically set
      this to the

      current system clock time; set it explicitly if you are calling the REST API

      directly. Default value is None.'
    defaultValue: None
    types:
    - <xref:datetime.datetime>
  - name: if_modified_since
    description: 'A timestamp indicating the last modified time of the resource known

      to the

      client. The operation will be performed only if the resource on the service
      has

      been modified since the specified time. Default value is None.'
    defaultValue: None
    types:
    - <xref:datetime.datetime>
  - name: if_unmodified_since
    description: 'A timestamp indicating the last modified time of the resource

      known to the

      client. The operation will be performed only if the resource on the service
      has

      not been modified since the specified time. Default value is None.'
    defaultValue: None
    types:
    - <xref:datetime.datetime>
  - name: ocp_range
    description: 'The byte range to be retrieved. The default is to retrieve the entire
      file.

      The

      format is bytes=startRange-endRange. Default value is None.'
    defaultValue: None
    types:
    - <xref:str>
  - name: stream
    description: 'Whether to stream the response of this operation. Defaults to False.
      You

      will have to context manage the returned stream.'
    types:
    - <xref:bool>
  return:
    description: bytes
    types:
    - <xref:bytes>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.batch.BatchClient.get_node_file_properties
  name: get_node_file_properties
  summary: Gets the properties of the specified Compute Node file.
  signature: 'get_node_file_properties(pool_id: str, node_id: str, file_path: str,
    *, timeout: int | None = None, ocpdate: datetime | None = None, if_modified_since:
    datetime | None = None, if_unmodified_since: datetime | None = None, **kwargs:
    Any) -> BatchFileProperties'
  parameters:
  - name: pool_id
    description: The ID of the Pool that contains the Compute Node. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: node_id
    description: The ID of the Compute Node from which you want to delete the file.
      Required.
    isRequired: true
    types:
    - <xref:str>
  - name: file_path
    description: The path to the file or directory that you want to delete. Required.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: timeout
    description: 'The maximum number of items to return in the response. A maximum
      of 1000

      applications can be returned. Default value is None.'
    defaultValue: None
    types:
    - <xref:int>
  - name: ocpdate
    description: 'The time the request was issued. Client libraries typically set
      this to the

      current system clock time; set it explicitly if you are calling the REST API

      directly. Default value is None.'
    defaultValue: None
    types:
    - <xref:datetime.datetime>
  - name: if_modified_since
    description: 'A timestamp indicating the last modified time of the resource known

      to the

      client. The operation will be performed only if the resource on the service
      has

      been modified since the specified time. Default value is None.'
    defaultValue: None
    types:
    - <xref:datetime.datetime>
  - name: if_unmodified_since
    description: 'A timestamp indicating the last modified time of the resource

      known to the

      client. The operation will be performed only if the resource on the service
      has

      not been modified since the specified time. Default value is None.'
    defaultValue: None
    types:
    - <xref:datetime.datetime>
  - name: stream
    description: 'Whether to stream the response of this operation. Defaults to False.
      You

      will have to context manage the returned stream.'
    types:
    - <xref:bool>
  return:
    description: BatchFileProperties
    types:
    - <xref:azure.batch.models.BatchFileProperties>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.batch.BatchClient.get_node_remote_login_settings
  name: get_node_remote_login_settings
  summary: 'Gets the settings required for remote login to a Compute Node.


    Before you can remotely login to a Compute Node using the remote login settings,

    you must create a user Account on the Compute Node.'
  signature: 'get_node_remote_login_settings(pool_id: str, node_id: str, *, timeout:
    int | None = None, ocpdate: datetime | None = None, **kwargs: Any) -> BatchNodeRemoteLoginSettings'
  parameters:
  - name: pool_id
    description: The ID of the Pool that contains the Compute Node. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: node_id
    description: 'The ID of the Compute Node for which to obtain the remote login
      settings.

      Required.'
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: timeout
    description: 'The maximum time that the server can spend processing the request,
      in

      seconds. The default is 30 seconds. If the value is larger than 30, the default
      will be used

      instead.". Default value is None.'
    defaultValue: None
    types:
    - <xref:int>
  - name: ocpdate
    description: 'The time the request was issued. Client libraries typically set
      this to the

      current system clock time; set it explicitly if you are calling the REST API

      directly. Default value is None.'
    defaultValue: None
    types:
    - <xref:datetime.datetime>
  return:
    description: 'BatchNodeRemoteLoginSettings. The BatchNodeRemoteLoginSettings is
      compatible with

      MutableMapping'
    types:
    - <xref:azure.batch.models.BatchNodeRemoteLoginSettings>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.batch.BatchClient.get_pool
  name: get_pool
  summary: Gets information about the specified Pool.
  signature: 'get_pool(pool_id: str, *, timeout: int | None = None, ocpdate: datetime
    | None = None, if_modified_since: datetime | None = None, if_unmodified_since:
    datetime | None = None, select: List[str] | None = None, expand: List[str] | None
    = None, etag: str | None = None, match_condition: MatchConditions | None = None,
    **kwargs: Any) -> BatchPool'
  parameters:
  - name: pool_id
    description: The ID of the Pool to get. Required.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: timeout
    description: 'The maximum time that the server can spend processing the request,
      in

      seconds. The default is 30 seconds. If the value is larger than 30, the default
      will be used

      instead.". Default value is None.'
    defaultValue: None
    types:
    - <xref:int>
  - name: ocpdate
    description: 'The time the request was issued. Client libraries typically set
      this to the

      current system clock time; set it explicitly if you are calling the REST API

      directly. Default value is None.'
    defaultValue: None
    types:
    - <xref:datetime.datetime>
  - name: if_modified_since
    description: 'A timestamp indicating the last modified time of the resource known

      to the

      client. The operation will be performed only if the resource on the service
      has

      been modified since the specified time. Default value is None.'
    defaultValue: None
    types:
    - <xref:datetime.datetime>
  - name: if_unmodified_since
    description: 'A timestamp indicating the last modified time of the resource

      known to the

      client. The operation will be performed only if the resource on the service
      has

      not been modified since the specified time. Default value is None.'
    defaultValue: None
    types:
    - <xref:datetime.datetime>
  - name: select
    description: An OData $select clause. Default value is None.
    defaultValue: None
    types:
    - <xref:list>[<xref:str>]
  - name: expand
    description: An OData $expand clause. Default value is None.
    defaultValue: None
    types:
    - <xref:list>[<xref:str>]
  - name: etag
    description: 'check if resource is changed. Set None to skip checking etag. Default
      value is

      None.'
    defaultValue: None
    types:
    - <xref:str>
  - name: match_condition
    description: The match condition to use upon the etag. Default value is None.
    defaultValue: None
    types:
    - <xref:azure.core.MatchConditions>
  return:
    description: BatchPool. The BatchPool is compatible with MutableMapping
    types:
    - <xref:azure.batch.models.BatchPool>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.batch.BatchClient.get_task
  name: get_task
  summary: 'Gets information about the specified Task.


    For multi-instance Tasks, information such as affinityId, executionInfo and

    nodeInfo refer to the primary Task. Use the list subtasks API to retrieve

    information about subtasks.'
  signature: 'get_task(job_id: str, task_id: str, *, timeout: int | None = None, ocpdate:
    datetime | None = None, if_modified_since: datetime | None = None, if_unmodified_since:
    datetime | None = None, select: List[str] | None = None, expand: List[str] | None
    = None, etag: str | None = None, match_condition: MatchConditions | None = None,
    **kwargs: Any) -> BatchTask'
  parameters:
  - name: job_id
    description: The ID of the Job that contains the Task. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: task_id
    description: The ID of the Task to get information about. Required.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: timeout
    description: 'The maximum time that the server can spend processing the request,
      in

      seconds. The default is 30 seconds. If the value is larger than 30, the default
      will be used

      instead.". Default value is None.'
    defaultValue: None
    types:
    - <xref:int>
  - name: ocpdate
    description: 'The time the request was issued. Client libraries typically set
      this to the

      current system clock time; set it explicitly if you are calling the REST API

      directly. Default value is None.'
    defaultValue: None
    types:
    - <xref:datetime.datetime>
  - name: if_modified_since
    description: 'A timestamp indicating the last modified time of the resource known

      to the

      client. The operation will be performed only if the resource on the service
      has

      been modified since the specified time. Default value is None.'
    defaultValue: None
    types:
    - <xref:datetime.datetime>
  - name: if_unmodified_since
    description: 'A timestamp indicating the last modified time of the resource

      known to the

      client. The operation will be performed only if the resource on the service
      has

      not been modified since the specified time. Default value is None.'
    defaultValue: None
    types:
    - <xref:datetime.datetime>
  - name: select
    description: An OData $select clause. Default value is None.
    defaultValue: None
    types:
    - <xref:list>[<xref:str>]
  - name: expand
    description: An OData $expand clause. Default value is None.
    defaultValue: None
    types:
    - <xref:list>[<xref:str>]
  - name: etag
    description: 'check if resource is changed. Set None to skip checking etag. Default
      value is

      None.'
    defaultValue: None
    types:
    - <xref:str>
  - name: match_condition
    description: The match condition to use upon the etag. Default value is None.
    defaultValue: None
    types:
    - <xref:azure.core.MatchConditions>
  return:
    description: BatchTask. The BatchTask is compatible with MutableMapping
    types:
    - <xref:azure.batch.models.BatchTask>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.batch.BatchClient.get_task_file
  name: get_task_file
  summary: Returns the content of the specified Task file.
  signature: 'get_task_file(job_id: str, task_id: str, file_path: str, *, timeout:
    int | None = None, ocpdate: datetime | None = None, if_modified_since: datetime
    | None = None, if_unmodified_since: datetime | None = None, ocp_range: str | None
    = None, **kwargs: Any) -> Iterator[bytes]'
  parameters:
  - name: job_id
    description: The ID of the Job that contains the Task. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: task_id
    description: The ID of the Task whose file you want to retrieve. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: file_path
    description: The path to the Task file that you want to get the content of. Required.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: timeout
    description: 'The maximum number of items to return in the response. A maximum
      of 1000

      applications can be returned. Default value is None.'
    defaultValue: None
    types:
    - <xref:int>
  - name: ocpdate
    description: 'The time the request was issued. Client libraries typically set
      this to the

      current system clock time; set it explicitly if you are calling the REST API

      directly. Default value is None.'
    defaultValue: None
    types:
    - <xref:datetime.datetime>
  - name: if_modified_since
    description: 'A timestamp indicating the last modified time of the resource known

      to the

      client. The operation will be performed only if the resource on the service
      has

      been modified since the specified time. Default value is None.'
    defaultValue: None
    types:
    - <xref:datetime.datetime>
  - name: if_unmodified_since
    description: 'A timestamp indicating the last modified time of the resource

      known to the

      client. The operation will be performed only if the resource on the service
      has

      not been modified since the specified time. Default value is None.'
    defaultValue: None
    types:
    - <xref:datetime.datetime>
  - name: ocp_range
    description: 'The byte range to be retrieved. The default is to retrieve the entire
      file.

      The

      format is bytes=startRange-endRange. Default value is None.'
    defaultValue: None
    types:
    - <xref:str>
  - name: stream
    description: 'Whether to stream the response of this operation. Defaults to False.
      You

      will have to context manage the returned stream.'
    types:
    - <xref:bool>
  return:
    description: bytes
    types:
    - <xref:bytes>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.batch.BatchClient.get_task_file_properties
  name: get_task_file_properties
  summary: Gets the properties of the specified Task file.
  signature: 'get_task_file_properties(job_id: str, task_id: str, file_path: str,
    *, timeout: int | None = None, ocpdate: datetime | None = None, if_modified_since:
    datetime | None = None, if_unmodified_since: datetime | None = None, **kwargs:
    Any) -> BatchFileProperties'
  parameters:
  - name: job_id
    description: The ID of the Job that contains the Task. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: task_id
    description: The ID of the Task whose file you want to retrieve. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: file_path
    description: The path to the Task file that you want to get the content of. Required.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: timeout
    description: 'The maximum number of items to return in the response. A maximum
      of 1000

      applications can be returned. Default value is None.'
    defaultValue: None
    types:
    - <xref:int>
  - name: ocpdate
    description: 'The time the request was issued. Client libraries typically set
      this to the

      current system clock time; set it explicitly if you are calling the REST API

      directly. Default value is None.'
    defaultValue: None
    types:
    - <xref:datetime.datetime>
  - name: if_modified_since
    description: 'A timestamp indicating the last modified time of the resource known

      to the

      client. The operation will be performed only if the resource on the service
      has

      been modified since the specified time. Default value is None.'
    defaultValue: None
    types:
    - <xref:datetime.datetime>
  - name: if_unmodified_since
    description: 'A timestamp indicating the last modified time of the resource

      known to the

      client. The operation will be performed only if the resource on the service
      has

      not been modified since the specified time. Default value is None.'
    defaultValue: None
    types:
    - <xref:datetime.datetime>
  - name: stream
    description: 'Whether to stream the response of this operation. Defaults to False.
      You

      will have to context manage the returned stream.'
    types:
    - <xref:bool>
  return:
    description: BatchFileProperties
    types:
    - <xref:azure.batch.models.BatchFileProperties>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.batch.BatchClient.job_schedule_exists
  name: job_schedule_exists
  summary: 'Checks the specified Job Schedule exists.


    Checks the specified Job Schedule exists.'
  signature: 'job_schedule_exists(job_schedule_id: str, *, timeout: int | None = None,
    ocpdate: datetime | None = None, if_modified_since: datetime | None = None, if_unmodified_since:
    datetime | None = None, etag: str | None = None, match_condition: MatchConditions
    | None = None, **kwargs: Any) -> bool'
  parameters:
  - name: job_schedule_id
    description: The ID of the Job Schedule which you want to check. Required.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: timeout
    description: 'The maximum time that the server can spend processing the request,
      in

      seconds. The default is 30 seconds. If the value is larger than 30, the default
      will be used

      instead.". Default value is None.'
    defaultValue: None
    types:
    - <xref:int>
  - name: ocpdate
    description: 'The time the request was issued. Client libraries typically set
      this to the

      current system clock time; set it explicitly if you are calling the REST API

      directly. Default value is None.'
    defaultValue: None
    types:
    - <xref:datetime.datetime>
  - name: if_modified_since
    description: 'A timestamp indicating the last modified time of the resource known

      to the

      client. The operation will be performed only if the resource on the service
      has

      been modified since the specified time. Default value is None.'
    defaultValue: None
    types:
    - <xref:datetime.datetime>
  - name: if_unmodified_since
    description: 'A timestamp indicating the last modified time of the resource

      known to the

      client. The operation will be performed only if the resource on the service
      has

      not been modified since the specified time. Default value is None.'
    defaultValue: None
    types:
    - <xref:datetime.datetime>
  - name: etag
    description: 'check if resource is changed. Set None to skip checking etag. Default
      value is

      None.'
    defaultValue: None
    types:
    - <xref:str>
  - name: match_condition
    description: The match condition to use upon the etag. Default value is None.
    defaultValue: None
    types:
    - <xref:azure.core.MatchConditions>
  return:
    description: bool
    types:
    - <xref:bool>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.batch.BatchClient.list_applications
  name: list_applications
  summary: 'Lists all of the applications available in the specified Account.


    This operation returns only Applications and versions that are available for

    use on Compute Nodes; that is, that can be used in an Package reference. For

    administrator information about applications and versions that are not yet

    available to Compute Nodes, use the Azure portal or the Azure Resource Manager

    API.'
  signature: 'list_applications(*, timeout: int | None = None, ocpdate: datetime |
    None = None, max_results: int | None = None, **kwargs: Any) -> Iterable[BatchApplication]'
  keywordOnlyParameters:
  - name: timeout
    description: 'The maximum time that the server can spend processing the request,
      in

      seconds. The default is 30 seconds. If the value is larger than 30, the default
      will be used

      instead.". Default value is None.'
    defaultValue: None
    types:
    - <xref:int>
  - name: ocpdate
    description: 'The time the request was issued. Client libraries typically set
      this to the

      current system clock time; set it explicitly if you are calling the REST API

      directly. Default value is None.'
    defaultValue: None
    types:
    - <xref:datetime.datetime>
  - name: max_results
    description: 'The maximum number of items to return in the response. A maximum
      of 1000

      applications can be returned. Default value is None.'
    defaultValue: None
    types:
    - <xref:int>
  return:
    description: An iterator like instance of BatchApplication
    types:
    - <xref:azure.core.paging.ItemPaged>[<xref:azure.batch.models.BatchApplication>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.batch.BatchClient.list_certificates
  name: list_certificates
  summary: "Lists all of the Certificates that have been added to the specified Account.\n\
    \nLists all of the Certificates that have been added to the specified Account.\n\
    \n>>`<<[https://docs.microsoft.com/en-us/rest/api/batchservice/odata-filters-in-batch#list-certificates](https://docs.microsoft.com/en-us/rest/api/batchservice/odata-filters-in-batch#list-certificates)\n\
    \   <[https://docs.microsoft.com/en-us/rest/api/batchservice/odata-filters-in-batch#list-certificates](https://docs.microsoft.com/en-us/rest/api/batchservice/odata-filters-in-batch#list-certificates)>`_.\n\
    \   Default value is None."
  signature: 'list_certificates(*, timeout: int | None = None, ocpdate: datetime |
    None = None, max_results: int | None = None, filter: str | None = None, select:
    List[str] | None = None, **kwargs: Any) -> Iterable[BatchCertificate]'
  keywordOnlyParameters:
  - name: select
    description: An OData $select clause. Default value is None.
    defaultValue: None
    types:
    - <xref:list>[<xref:str>]
  - name: timeout
    defaultValue: None
  - name: ocpdate
    defaultValue: None
  - name: max_results
    defaultValue: None
  - name: filter
    defaultValue: None
  return:
    description: An iterator like instance of BatchCertificate
    types:
    - <xref:azure.core.paging.ItemPaged>[<xref:azure.batch.models.BatchCertificate>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.batch.BatchClient.list_job_preparation_and_release_task_status
  name: list_job_preparation_and_release_task_status
  summary: "Lists the execution status of the Job Preparation and Job Release Task\
    \ for the\nspecified Job across the Compute Nodes where the Job has run.\n\nThis\
    \ API returns the Job Preparation and Job Release Task status on all Compute\n\
    Nodes that have run the Job Preparation or Job Release Task. This includes\nCompute\
    \ Nodes which have since been removed from the Pool. If this API is\ninvoked on\
    \ a Job which has no Job Preparation or Job Release Task, the Batch\nservice returns\
    \ HTTP status code 409 (Conflict) with an error code of\nJobPreparationTaskNotSpecified.\n\
    \n>>`<<[https://learn.microsoft.com/rest/api/batchservice/odata-filters-in-batch#list-job-preparation-and-release-status](https://learn.microsoft.com/rest/api/batchservice/odata-filters-in-batch#list-job-preparation-and-release-status)\n\
    \   <[https://learn.microsoft.com/rest/api/batchservice/odata-filters-in-batch#list-job-preparation-and-release-status](https://learn.microsoft.com/rest/api/batchservice/odata-filters-in-batch#list-job-preparation-and-release-status)>`_.\n\
    \   Default value is None."
  signature: 'list_job_preparation_and_release_task_status(job_id: str, *, timeout:
    int | None = None, ocpdate: datetime | None = None, max_results: int | None =
    None, filter: str | None = None, select: List[str] | None = None, **kwargs: Any)
    -> Iterable[BatchJobPreparationAndReleaseTaskStatus]'
  parameters:
  - name: job_id
    isRequired: true
  keywordOnlyParameters:
  - name: select
    description: An OData $select clause. Default value is None.
    defaultValue: None
    types:
    - <xref:list>[<xref:str>]
  - name: timeout
    defaultValue: None
  - name: ocpdate
    defaultValue: None
  - name: max_results
    defaultValue: None
  - name: filter
    defaultValue: None
  return:
    description: An iterator like instance of BatchJobPreparationAndReleaseTaskStatus
    types:
    - <xref:azure.core.paging.ItemPaged>[<xref:azure.batch.models.BatchJobPreparationAndReleaseTaskStatus>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.batch.BatchClient.list_job_schedules
  name: list_job_schedules
  summary: 'Lists all of the Job Schedules in the specified Account.


    Lists all of the Job Schedules in the specified Account.'
  signature: 'list_job_schedules(*, timeout: int | None = None, ocpdate: datetime
    | None = None, max_results: int | None = None, filter: str | None = None, select:
    List[str] | None = None, expand: List[str] | None = None, **kwargs: Any) -> Iterable[BatchJobSchedule]'
  keywordOnlyParameters:
  - name: timeout
    description: 'The maximum time that the server can spend processing the request,
      in

      seconds. The default is 30 seconds. If the value is larger than 30, the default
      will be used

      instead.". Default value is None.'
    defaultValue: None
    types:
    - <xref:int>
  - name: ocpdate
    description: 'The time the request was issued. Client libraries typically set
      this to the

      current system clock time; set it explicitly if you are calling the REST API

      directly. Default value is None.'
    defaultValue: None
    types:
    - <xref:datetime.datetime>
  - name: max_results
    description: 'The maximum number of items to return in the response. A maximum
      of 1000

      applications can be returned. Default value is None.'
    defaultValue: None
    types:
    - <xref:int>
  - name: filter
    description: 'An OData $filter clause. For more information on constructing this
      filter, see

      [https://learn.microsoft.com/rest/api/batchservice/odata-filters-in-batch#list-job-schedules](https://learn.microsoft.com/rest/api/batchservice/odata-filters-in-batch#list-job-schedules).

      Default value is None.'
    defaultValue: None
    types:
    - <xref:str>
  - name: select
    description: An OData $select clause. Default value is None.
    defaultValue: None
    types:
    - <xref:list>[<xref:str>]
  - name: expand
    description: An OData $expand clause. Default value is None.
    defaultValue: None
    types:
    - <xref:list>[<xref:str>]
  return:
    description: An iterator like instance of BatchJobSchedule
    types:
    - <xref:azure.core.paging.ItemPaged>[<xref:azure.batch.models.BatchJobSchedule>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.batch.BatchClient.list_jobs
  name: list_jobs
  summary: 'Lists all of the Jobs in the specified Account.


    Lists all of the Jobs in the specified Account.'
  signature: 'list_jobs(*, timeout: int | None = None, ocpdate: datetime | None =
    None, max_results: int | None = None, filter: str | None = None, select: List[str]
    | None = None, expand: List[str] | None = None, **kwargs: Any) -> Iterable[BatchJob]'
  keywordOnlyParameters:
  - name: timeout
    description: 'The maximum time that the server can spend processing the request,
      in

      seconds. The default is 30 seconds. If the value is larger than 30, the default
      will be used

      instead.". Default value is None.'
    defaultValue: None
    types:
    - <xref:int>
  - name: ocpdate
    description: 'The time the request was issued. Client libraries typically set
      this to the

      current system clock time; set it explicitly if you are calling the REST API

      directly. Default value is None.'
    defaultValue: None
    types:
    - <xref:datetime.datetime>
  - name: max_results
    description: 'The maximum number of items to return in the response. A maximum
      of 1000

      applications can be returned. Default value is None.'
    defaultValue: None
    types:
    - <xref:int>
  - name: filter
    description: 'An OData $filter clause. For more information on constructing this
      filter, see

      [https://learn.microsoft.com/rest/api/batchservice/odata-filters-in-batch#list-jobs](https://learn.microsoft.com/rest/api/batchservice/odata-filters-in-batch#list-jobs).
      Default

      value is None.'
    defaultValue: None
    types:
    - <xref:str>
  - name: select
    description: An OData $select clause. Default value is None.
    defaultValue: None
    types:
    - <xref:list>[<xref:str>]
  - name: expand
    description: An OData $expand clause. Default value is None.
    defaultValue: None
    types:
    - <xref:list>[<xref:str>]
  return:
    description: An iterator like instance of BatchJob
    types:
    - <xref:azure.core.paging.ItemPaged>[<xref:azure.batch.models.BatchJob>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.batch.BatchClient.list_jobs_from_schedule
  name: list_jobs_from_schedule
  summary: "Lists the Jobs that have been created under the specified Job Schedule.\n\
    \nLists the Jobs that have been created under the specified Job Schedule.\n\n\
    >>`<<[https://learn.microsoft.com/rest/api/batchservice/odata-filters-in-batch#list-jobs-in-a-job-schedule](https://learn.microsoft.com/rest/api/batchservice/odata-filters-in-batch#list-jobs-in-a-job-schedule)\n\
    \   <[https://learn.microsoft.com/rest/api/batchservice/odata-filters-in-batch#list-jobs-in-a-job-schedule](https://learn.microsoft.com/rest/api/batchservice/odata-filters-in-batch#list-jobs-in-a-job-schedule)>`_.\n\
    \   Default value is None."
  signature: 'list_jobs_from_schedule(job_schedule_id: str, *, timeout: int | None
    = None, ocpdate: datetime | None = None, max_results: int | None = None, filter:
    str | None = None, select: List[str] | None = None, expand: List[str] | None =
    None, **kwargs: Any) -> Iterable[BatchJob]'
  parameters:
  - name: job_schedule_id
    isRequired: true
  keywordOnlyParameters:
  - name: select
    description: An OData $select clause. Default value is None.
    defaultValue: None
    types:
    - <xref:list>[<xref:str>]
  - name: expand
    description: An OData $expand clause. Default value is None.
    defaultValue: None
    types:
    - <xref:list>[<xref:str>]
  - name: timeout
    defaultValue: None
  - name: ocpdate
    defaultValue: None
  - name: max_results
    defaultValue: None
  - name: filter
    defaultValue: None
  return:
    description: An iterator like instance of BatchJob
    types:
    - <xref:azure.core.paging.ItemPaged>[<xref:azure.batch.models.BatchJob>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.batch.BatchClient.list_node_extensions
  name: list_node_extensions
  summary: 'Lists the Compute Nodes Extensions in the specified Pool.


    Lists the Compute Nodes Extensions in the specified Pool.'
  signature: 'list_node_extensions(pool_id: str, node_id: str, *, timeout: int | None
    = None, ocpdate: datetime | None = None, max_results: int | None = None, select:
    List[str] | None = None, **kwargs: Any) -> Iterable[BatchNodeVMExtension]'
  parameters:
  - name: pool_id
    description: The ID of the Pool that contains Compute Node. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: node_id
    description: The ID of the Compute Node that you want to list extensions. Required.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: timeout
    description: 'The maximum time that the server can spend processing the request,
      in

      seconds. The default is 30 seconds. If the value is larger than 30, the default
      will be used

      instead.". Default value is None.'
    defaultValue: None
    types:
    - <xref:int>
  - name: ocpdate
    description: 'The time the request was issued. Client libraries typically set
      this to the

      current system clock time; set it explicitly if you are calling the REST API

      directly. Default value is None.'
    defaultValue: None
    types:
    - <xref:datetime.datetime>
  - name: max_results
    description: 'The maximum number of items to return in the response. A maximum
      of 1000

      applications can be returned. Default value is None.'
    defaultValue: None
    types:
    - <xref:int>
  - name: select
    description: An OData $select clause. Default value is None.
    defaultValue: None
    types:
    - <xref:list>[<xref:str>]
  return:
    description: An iterator like instance of BatchNodeVMExtension
    types:
    - <xref:azure.core.paging.ItemPaged>[<xref:azure.batch.models.BatchNodeVMExtension>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.batch.BatchClient.list_node_files
  name: list_node_files
  summary: "Lists all of the files in Task directories on the specified Compute Node.\n\
    \nLists all of the files in Task directories on the specified Compute Node.\n\n\
    >>`<<[https://learn.microsoft.com/rest/api/batchservice/odata-filters-in-batch#list-compute-node-files](https://learn.microsoft.com/rest/api/batchservice/odata-filters-in-batch#list-compute-node-files)\n\
    \   <[https://learn.microsoft.com/rest/api/batchservice/odata-filters-in-batch#list-compute-node-files](https://learn.microsoft.com/rest/api/batchservice/odata-filters-in-batch#list-compute-node-files)>`_.\n\
    \   Default value is None."
  signature: 'list_node_files(pool_id: str, node_id: str, *, timeout: int | None =
    None, ocpdate: datetime | None = None, max_results: int | None = None, filter:
    str | None = None, recursive: bool | None = None, **kwargs: Any) -> Iterable[BatchNodeFile]'
  parameters:
  - name: pool_id
    isRequired: true
  - name: node_id
    isRequired: true
  keywordOnlyParameters:
  - name: recursive
    description: Whether to list children of a directory. Default value is None.
    defaultValue: None
    types:
    - <xref:bool>
  - name: timeout
    defaultValue: None
  - name: ocpdate
    defaultValue: None
  - name: max_results
    defaultValue: None
  - name: filter
    defaultValue: None
  return:
    description: An iterator like instance of BatchNodeFile
    types:
    - <xref:azure.core.paging.ItemPaged>[<xref:azure.batch.models.BatchNodeFile>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.batch.BatchClient.list_nodes
  name: list_nodes
  summary: 'Lists the Compute Nodes in the specified Pool.


    Lists the Compute Nodes in the specified Pool.'
  signature: 'list_nodes(pool_id: str, *, timeout: int | None = None, ocpdate: datetime
    | None = None, max_results: int | None = None, filter: str | None = None, select:
    List[str] | None = None, **kwargs: Any) -> Iterable[BatchNode]'
  parameters:
  - name: pool_id
    description: The ID of the Pool from which you want to list Compute Nodes. Required.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: timeout
    description: 'The maximum time that the server can spend processing the request,
      in

      seconds. The default is 30 seconds. If the value is larger than 30, the default
      will be used

      instead.". Default value is None.'
    defaultValue: None
    types:
    - <xref:int>
  - name: ocpdate
    description: 'The time the request was issued. Client libraries typically set
      this to the

      current system clock time; set it explicitly if you are calling the REST API

      directly. Default value is None.'
    defaultValue: None
    types:
    - <xref:datetime.datetime>
  - name: max_results
    description: 'The maximum number of items to return in the response. A maximum
      of 1000

      applications can be returned. Default value is None.'
    defaultValue: None
    types:
    - <xref:int>
  - name: filter
    description: 'An OData $filter clause. For more information on constructing this
      filter, see

      [https://learn.microsoft.com/rest/api/batchservice/odata-filters-in-batch#list-nodes-in-a-pool](https://learn.microsoft.com/rest/api/batchservice/odata-filters-in-batch#list-nodes-in-a-pool).

      Default value is None.'
    defaultValue: None
    types:
    - <xref:str>
  - name: select
    description: An OData $select clause. Default value is None.
    defaultValue: None
    types:
    - <xref:list>[<xref:str>]
  return:
    description: An iterator like instance of BatchNode
    types:
    - <xref:azure.core.paging.ItemPaged>[<xref:azure.batch.models.BatchNode>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.batch.BatchClient.list_pool_node_counts
  name: list_pool_node_counts
  summary: 'Gets the number of Compute Nodes in each state, grouped by Pool. Note
    that the

    numbers returned may not always be up to date. If you need exact node counts,

    use a list query.'
  signature: 'list_pool_node_counts(*, timeout: int | None = None, ocpdate: datetime
    | None = None, max_results: int | None = None, filter: str | None = None, **kwargs:
    Any) -> Iterable[BatchPoolNodeCounts]'
  keywordOnlyParameters:
  - name: timeout
    description: 'The maximum time that the server can spend processing the request,
      in

      seconds. The default is 30 seconds. If the value is larger than 30, the default
      will be used

      instead.". Default value is None.'
    defaultValue: None
    types:
    - <xref:int>
  - name: ocpdate
    description: 'The time the request was issued. Client libraries typically set
      this to the

      current system clock time; set it explicitly if you are calling the REST API

      directly. Default value is None.'
    defaultValue: None
    types:
    - <xref:datetime.datetime>
  - name: max_results
    description: 'The maximum number of items to return in the response. A maximum
      of 1000

      applications can be returned. Default value is None.'
    defaultValue: None
    types:
    - <xref:int>
  - name: filter
    description: 'An OData $filter clause. For more information on constructing this
      filter, see

      [https://learn.microsoft.com/rest/api/batchservice/odata-filters-in-batch#list-support-images](https://learn.microsoft.com/rest/api/batchservice/odata-filters-in-batch#list-support-images).

      Default value is None.'
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An iterator like instance of BatchPoolNodeCounts
    types:
    - <xref:azure.core.paging.ItemPaged>[<xref:azure.batch.models.BatchPoolNodeCounts>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.batch.BatchClient.list_pool_usage_metrics
  name: list_pool_usage_metrics
  summary: "Lists the usage metrics, aggregated by Pool across individual time intervals,\n\
    for the specified Account.\n\nIf you do not specify a $filter clause including\
    \ a poolId, the response\nincludes all Pools that existed in the Account in the\
    \ time range of the\nreturned aggregation intervals. If you do not specify a $filter\
    \ clause\nincluding a startTime or endTime these filters default to the start\
    \ and end\ntimes of the last aggregation interval currently available; that is,\
    \ only the\nlast aggregation interval is returned.\n\n>>`<<[https://learn.microsoft.com/rest/api/batchservice/odata-filters-in-batch#list-account-usage-metrics](https://learn.microsoft.com/rest/api/batchservice/odata-filters-in-batch#list-account-usage-metrics)\n\
    \   <[https://learn.microsoft.com/rest/api/batchservice/odata-filters-in-batch#list-account-usage-metrics](https://learn.microsoft.com/rest/api/batchservice/odata-filters-in-batch#list-account-usage-metrics)>`_.\n\
    \   Default value is None."
  signature: 'list_pool_usage_metrics(*, timeout: int | None = None, ocpdate: datetime
    | None = None, max_results: int | None = None, starttime: datetime | None = None,
    endtime: datetime | None = None, filter: str | None = None, **kwargs: Any) ->
    Iterable[BatchPoolUsageMetrics]'
  keywordOnlyParameters:
  - name: timeout
    defaultValue: None
  - name: ocpdate
    defaultValue: None
  - name: max_results
    defaultValue: None
  - name: starttime
    defaultValue: None
  - name: endtime
    defaultValue: None
  - name: filter
    defaultValue: None
  return:
    description: An iterator like instance of BatchPoolUsageMetrics
    types:
    - <xref:azure.core.paging.ItemPaged>[<xref:azure.batch.models.BatchPoolUsageMetrics>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.batch.BatchClient.list_pools
  name: list_pools
  summary: 'Lists all of the Pools which be mounted.


    Lists all of the Pools which be mounted.'
  signature: 'list_pools(*, timeout: int | None = None, ocpdate: datetime | None =
    None, max_results: int | None = None, filter: str | None = None, select: List[str]
    | None = None, expand: List[str] | None = None, **kwargs: Any) -> Iterable[BatchPool]'
  keywordOnlyParameters:
  - name: timeout
    description: 'The maximum time that the server can spend processing the request,
      in

      seconds. The default is 30 seconds. If the value is larger than 30, the default
      will be used

      instead.". Default value is None.'
    defaultValue: None
    types:
    - <xref:int>
  - name: ocpdate
    description: 'The time the request was issued. Client libraries typically set
      this to the

      current system clock time; set it explicitly if you are calling the REST API

      directly. Default value is None.'
    defaultValue: None
    types:
    - <xref:datetime.datetime>
  - name: max_results
    description: 'The maximum number of items to return in the response. A maximum
      of 1000

      applications can be returned. Default value is None.'
    defaultValue: None
    types:
    - <xref:int>
  - name: filter
    description: 'An OData $filter clause. For more information on constructing this
      filter, see

      [https://learn.microsoft.com/rest/api/batchservice/odata-filters-in-batch#list-pools](https://learn.microsoft.com/rest/api/batchservice/odata-filters-in-batch#list-pools).

      Default value is None.'
    defaultValue: None
    types:
    - <xref:str>
  - name: select
    description: An OData $select clause. Default value is None.
    defaultValue: None
    types:
    - <xref:list>[<xref:str>]
  - name: expand
    description: An OData $expand clause. Default value is None.
    defaultValue: None
    types:
    - <xref:list>[<xref:str>]
  return:
    description: An iterator like instance of BatchPool
    types:
    - <xref:azure.core.paging.ItemPaged>[<xref:azure.batch.models.BatchPool>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.batch.BatchClient.list_sub_tasks
  name: list_sub_tasks
  summary: 'Lists all of the subtasks that are associated with the specified multi-instance

    Task.


    If the Task is not a multi-instance Task then this returns an empty collection.'
  signature: 'list_sub_tasks(job_id: str, task_id: str, *, timeout: int | None = None,
    ocpdate: datetime | None = None, select: List[str] | None = None, **kwargs: Any)
    -> Iterable[BatchSubtask]'
  parameters:
  - name: job_id
    description: The ID of the Job. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: task_id
    description: The ID of the Task. Required.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: timeout
    description: 'The maximum time that the server can spend processing the request,
      in

      seconds. The default is 30 seconds. If the value is larger than 30, the default
      will be used

      instead.". Default value is None.'
    defaultValue: None
    types:
    - <xref:int>
  - name: ocpdate
    description: 'The time the request was issued. Client libraries typically set
      this to the

      current system clock time; set it explicitly if you are calling the REST API

      directly. Default value is None.'
    defaultValue: None
    types:
    - <xref:datetime.datetime>
  - name: select
    description: An OData $select clause. Default value is None.
    defaultValue: None
    types:
    - <xref:list>[<xref:str>]
  return:
    description: An iterator like instance of BatchSubtask
    types:
    - <xref:azure.core.paging.ItemPaged>[<xref:azure.batch.models.BatchSubtask>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.batch.BatchClient.list_supported_images
  name: list_supported_images
  summary: 'Lists all Virtual Machine Images supported by the Azure Batch service.


    Lists all Virtual Machine Images supported by the Azure Batch service.'
  signature: 'list_supported_images(*, timeout: int | None = None, ocpdate: datetime
    | None = None, max_results: int | None = None, filter: str | None = None, **kwargs:
    Any) -> Iterable[BatchSupportedImage]'
  keywordOnlyParameters:
  - name: timeout
    description: 'The maximum time that the server can spend processing the request,
      in

      seconds. The default is 30 seconds. If the value is larger than 30, the default
      will be used

      instead.". Default value is None.'
    defaultValue: None
    types:
    - <xref:int>
  - name: ocpdate
    description: 'The time the request was issued. Client libraries typically set
      this to the

      current system clock time; set it explicitly if you are calling the REST API

      directly. Default value is None.'
    defaultValue: None
    types:
    - <xref:datetime.datetime>
  - name: max_results
    description: 'The maximum number of items to return in the response. A maximum
      of 1000

      applications can be returned. Default value is None.'
    defaultValue: None
    types:
    - <xref:int>
  - name: filter
    description: 'An OData $filter clause. For more information on constructing this
      filter, see

      [https://learn.microsoft.com/rest/api/batchservice/odata-filters-in-batch#list-support-images](https://learn.microsoft.com/rest/api/batchservice/odata-filters-in-batch#list-support-images).

      Default value is None.'
    defaultValue: None
    types:
    - <xref:str>
  return:
    description: An iterator like instance of BatchSupportedImage
    types:
    - <xref:azure.core.paging.ItemPaged>[<xref:azure.batch.models.BatchSupportedImage>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.batch.BatchClient.list_task_files
  name: list_task_files
  summary: 'Lists the files in a Task''s directory on its Compute Node.


    Lists the files in a Task''s directory on its Compute Node.'
  signature: 'list_task_files(job_id: str, task_id: str, *, timeout: int | None =
    None, ocpdate: datetime | None = None, max_results: int | None = None, filter:
    str | None = None, recursive: bool | None = None, **kwargs: Any) -> Iterable[BatchNodeFile]'
  parameters:
  - name: job_id
    description: The ID of the Job that contains the Task. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: task_id
    description: The ID of the Task whose files you want to list. Required.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: timeout
    description: 'The maximum time that the server can spend processing the request,
      in

      seconds. The default is 30 seconds. If the value is larger than 30, the default
      will be used

      instead.". Default value is None.'
    defaultValue: None
    types:
    - <xref:int>
  - name: ocpdate
    description: 'The time the request was issued. Client libraries typically set
      this to the

      current system clock time; set it explicitly if you are calling the REST API

      directly. Default value is None.'
    defaultValue: None
    types:
    - <xref:datetime.datetime>
  - name: max_results
    description: 'The maximum number of items to return in the response. A maximum
      of 1000

      applications can be returned. Default value is None.'
    defaultValue: None
    types:
    - <xref:int>
  - name: filter
    description: 'An OData $filter clause. For more information on constructing this
      filter, see

      [https://learn.microsoft.com/rest/api/batchservice/odata-filters-in-batch#list-task-files](https://learn.microsoft.com/rest/api/batchservice/odata-filters-in-batch#list-task-files).

      Default value is None.'
    defaultValue: None
    types:
    - <xref:str>
  - name: recursive
    description: 'Whether to list children of the Task directory. This parameter can
      be used

      in

      combination with the filter parameter to list specific type of files. Default
      value is None.'
    defaultValue: None
    types:
    - <xref:bool>
  return:
    description: An iterator like instance of BatchNodeFile
    types:
    - <xref:azure.core.paging.ItemPaged>[<xref:azure.batch.models.BatchNodeFile>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.batch.BatchClient.list_tasks
  name: list_tasks
  summary: 'Lists all of the Tasks that are associated with the specified Job.


    For multi-instance Tasks, information such as affinityId, executionInfo and

    nodeInfo refer to the primary Task. Use the list subtasks API to retrieve

    information about subtasks.'
  signature: 'list_tasks(job_id: str, *, timeout: int | None = None, ocpdate: datetime
    | None = None, max_results: int | None = None, filter: str | None = None, select:
    List[str] | None = None, expand: List[str] | None = None, **kwargs: Any) -> Iterable[BatchTask]'
  parameters:
  - name: job_id
    description: The ID of the Job. Required.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: timeout
    description: 'The maximum time that the server can spend processing the request,
      in

      seconds. The default is 30 seconds. If the value is larger than 30, the default
      will be used

      instead.". Default value is None.'
    defaultValue: None
    types:
    - <xref:int>
  - name: ocpdate
    description: 'The time the request was issued. Client libraries typically set
      this to the

      current system clock time; set it explicitly if you are calling the REST API

      directly. Default value is None.'
    defaultValue: None
    types:
    - <xref:datetime.datetime>
  - name: max_results
    description: 'The maximum number of items to return in the response. A maximum
      of 1000

      applications can be returned. Default value is None.'
    defaultValue: None
    types:
    - <xref:int>
  - name: filter
    description: 'An OData $filter clause. For more information on constructing this
      filter, see

      [https://learn.microsoft.com/rest/api/batchservice/odata-filters-in-batch#list-tasks](https://learn.microsoft.com/rest/api/batchservice/odata-filters-in-batch#list-tasks).

      Default value is None.'
    defaultValue: None
    types:
    - <xref:str>
  - name: select
    description: An OData $select clause. Default value is None.
    defaultValue: None
    types:
    - <xref:list>[<xref:str>]
  - name: expand
    description: An OData $expand clause. Default value is None.
    defaultValue: None
    types:
    - <xref:list>[<xref:str>]
  return:
    description: An iterator like instance of BatchTask
    types:
    - <xref:azure.core.paging.ItemPaged>[<xref:azure.batch.models.BatchTask>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.batch.BatchClient.pool_exists
  name: pool_exists
  summary: Gets basic properties of a Pool.
  signature: 'pool_exists(pool_id: str, *, timeout: int | None = None, ocpdate: datetime
    | None = None, if_modified_since: datetime | None = None, if_unmodified_since:
    datetime | None = None, etag: str | None = None, match_condition: MatchConditions
    | None = None, **kwargs: Any) -> bool'
  parameters:
  - name: pool_id
    description: The ID of the Pool to get. Required.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: timeout
    description: 'The maximum time that the server can spend processing the request,
      in

      seconds. The default is 30 seconds. If the value is larger than 30, the default
      will be used

      instead.". Default value is None.'
    defaultValue: None
    types:
    - <xref:int>
  - name: ocpdate
    description: 'The time the request was issued. Client libraries typically set
      this to the

      current system clock time; set it explicitly if you are calling the REST API

      directly. Default value is None.'
    defaultValue: None
    types:
    - <xref:datetime.datetime>
  - name: if_modified_since
    description: 'A timestamp indicating the last modified time of the resource known

      to the

      client. The operation will be performed only if the resource on the service
      has

      been modified since the specified time. Default value is None.'
    defaultValue: None
    types:
    - <xref:datetime.datetime>
  - name: if_unmodified_since
    description: 'A timestamp indicating the last modified time of the resource

      known to the

      client. The operation will be performed only if the resource on the service
      has

      not been modified since the specified time. Default value is None.'
    defaultValue: None
    types:
    - <xref:datetime.datetime>
  - name: etag
    description: 'check if resource is changed. Set None to skip checking etag. Default
      value is

      None.'
    defaultValue: None
    types:
    - <xref:str>
  - name: match_condition
    description: The match condition to use upon the etag. Default value is None.
    defaultValue: None
    types:
    - <xref:azure.core.MatchConditions>
  return:
    description: bool
    types:
    - <xref:bool>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.batch.BatchClient.reactivate_task
  name: reactivate_task
  summary: 'Reactivates a Task, allowing it to run again even if its retry count has
    been

    exhausted.


    Reactivation makes a Task eligible to be retried again up to its maximum retry

    count. The Task''s state is changed to active. As the Task is no longer in the

    completed state, any previous exit code or failure information is no longer

    available after reactivation. Each time a Task is reactivated, its retry count

    is reset to 0. Reactivation will fail for Tasks that are not completed or that

    previously completed successfully (with an exit code of 0). Additionally, it

    will fail if the Job has completed (or is terminating or deleting).'
  signature: 'reactivate_task(job_id: str, task_id: str, *, timeout: int | None =
    None, ocpdate: datetime | None = None, if_modified_since: datetime | None = None,
    if_unmodified_since: datetime | None = None, etag: str | None = None, match_condition:
    MatchConditions | None = None, **kwargs: Any) -> None'
  parameters:
  - name: job_id
    description: The ID of the Job containing the Task. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: task_id
    description: The ID of the Task to reactivate. Required.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: timeout
    description: 'The maximum time that the server can spend processing the request,
      in

      seconds. The default is 30 seconds. If the value is larger than 30, the default
      will be used

      instead.". Default value is None.'
    defaultValue: None
    types:
    - <xref:int>
  - name: ocpdate
    description: 'The time the request was issued. Client libraries typically set
      this to the

      current system clock time; set it explicitly if you are calling the REST API

      directly. Default value is None.'
    defaultValue: None
    types:
    - <xref:datetime.datetime>
  - name: if_modified_since
    description: 'A timestamp indicating the last modified time of the resource known

      to the

      client. The operation will be performed only if the resource on the service
      has

      been modified since the specified time. Default value is None.'
    defaultValue: None
    types:
    - <xref:datetime.datetime>
  - name: if_unmodified_since
    description: 'A timestamp indicating the last modified time of the resource

      known to the

      client. The operation will be performed only if the resource on the service
      has

      not been modified since the specified time. Default value is None.'
    defaultValue: None
    types:
    - <xref:datetime.datetime>
  - name: etag
    description: 'check if resource is changed. Set None to skip checking etag. Default
      value is

      None.'
    defaultValue: None
    types:
    - <xref:str>
  - name: match_condition
    description: The match condition to use upon the etag. Default value is None.
    defaultValue: None
    types:
    - <xref:azure.core.MatchConditions>
  return:
    description: None
    types:
    - <xref:None>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.batch.BatchClient.reboot_node
  name: reboot_node
  summary: 'Restarts the specified Compute Node.


    You can restart a Compute Node only if it is in an idle or running state.'
  signature: 'reboot_node(pool_id: str, node_id: str, parameters: BatchNodeRebootContent
    | None = None, *, timeout: int | None = None, ocpdate: datetime | None = None,
    **kwargs: Any) -> None'
  parameters:
  - name: pool_id
    description: The ID of the Pool that contains the Compute Node. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: node_id
    description: The ID of the Compute Node that you want to restart. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: parameters
    description: The options to use for rebooting the Compute Node. Default value
      is None.
    defaultValue: None
    types:
    - <xref:azure.batch.models.BatchNodeRebootContent>
  keywordOnlyParameters:
  - name: timeout
    description: 'The maximum time that the server can spend processing the request,
      in

      seconds. The default is 30 seconds. If the value is larger than 30, the default
      will be used

      instead.". Default value is None.'
    defaultValue: None
    types:
    - <xref:int>
  - name: ocpdate
    description: 'The time the request was issued. Client libraries typically set
      this to the

      current system clock time; set it explicitly if you are calling the REST API

      directly. Default value is None.'
    defaultValue: None
    types:
    - <xref:datetime.datetime>
  return:
    description: None
    types:
    - <xref:None>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.batch.BatchClient.reimage_node
  name: reimage_node
  summary: 'Reinstalls the operating system on the specified Compute Node.


    You can reinstall the operating system on a Compute Node only if it is in an

    idle or running state. This API can be invoked only on Pools created with the

    cloud service configuration property.'
  signature: 'reimage_node(pool_id: str, node_id: str, parameters: BatchNodeReimageContent
    | None = None, *, timeout: int | None = None, ocpdate: datetime | None = None,
    **kwargs: Any) -> None'
  parameters:
  - name: pool_id
    description: The ID of the Pool that contains the Compute Node. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: node_id
    description: The ID of the Compute Node that you want to restart. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: parameters
    description: The options to use for reimaging the Compute Node. Default value
      is None.
    defaultValue: None
    types:
    - <xref:azure.batch.models.BatchNodeReimageContent>
  keywordOnlyParameters:
  - name: timeout
    description: 'The maximum time that the server can spend processing the request,
      in

      seconds. The default is 30 seconds. If the value is larger than 30, the default
      will be used

      instead.". Default value is None.'
    defaultValue: None
    types:
    - <xref:int>
  - name: ocpdate
    description: 'The time the request was issued. Client libraries typically set
      this to the

      current system clock time; set it explicitly if you are calling the REST API

      directly. Default value is None.'
    defaultValue: None
    types:
    - <xref:datetime.datetime>
  return:
    description: None
    types:
    - <xref:None>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.batch.BatchClient.remove_nodes
  name: remove_nodes
  summary: 'Removes Compute Nodes from the specified Pool.


    This operation can only run when the allocation state of the Pool is steady.

    When this operation runs, the allocation state changes from steady to resizing.

    Each request may remove up to 100 nodes.'
  signature: 'remove_nodes(pool_id: str, content: BatchNodeRemoveContent, *, timeout:
    int | None = None, ocpdate: datetime | None = None, if_modified_since: datetime
    | None = None, if_unmodified_since: datetime | None = None, etag: str | None =
    None, match_condition: MatchConditions | None = None, **kwargs: Any) -> None'
  parameters:
  - name: pool_id
    description: The ID of the Pool to get. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: content
    description: The options to use for removing the node. Required.
    isRequired: true
    types:
    - <xref:azure.batch.models.BatchNodeRemoveContent>
  keywordOnlyParameters:
  - name: timeout
    description: 'The maximum time that the server can spend processing the request,
      in

      seconds. The default is 30 seconds. If the value is larger than 30, the default
      will be used

      instead.". Default value is None.'
    defaultValue: None
    types:
    - <xref:int>
  - name: ocpdate
    description: 'The time the request was issued. Client libraries typically set
      this to the

      current system clock time; set it explicitly if you are calling the REST API

      directly. Default value is None.'
    defaultValue: None
    types:
    - <xref:datetime.datetime>
  - name: if_modified_since
    description: 'A timestamp indicating the last modified time of the resource known

      to the

      client. The operation will be performed only if the resource on the service
      has

      been modified since the specified time. Default value is None.'
    defaultValue: None
    types:
    - <xref:datetime.datetime>
  - name: if_unmodified_since
    description: 'A timestamp indicating the last modified time of the resource

      known to the

      client. The operation will be performed only if the resource on the service
      has

      not been modified since the specified time. Default value is None.'
    defaultValue: None
    types:
    - <xref:datetime.datetime>
  - name: etag
    description: 'check if resource is changed. Set None to skip checking etag. Default
      value is

      None.'
    defaultValue: None
    types:
    - <xref:str>
  - name: match_condition
    description: The match condition to use upon the etag. Default value is None.
    defaultValue: None
    types:
    - <xref:azure.core.MatchConditions>
  return:
    description: None
    types:
    - <xref:None>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.batch.BatchClient.replace_job
  name: replace_job
  summary: 'Updates the properties of the specified Job.


    This fully replaces all the updatable properties of the Job. For example, if

    the Job has constraints associated with it and if constraints is not specified

    with this request, then the Batch service will remove the existing constraints.'
  signature: 'replace_job(job_id: str, job: BatchJob, *, timeout: int | None = None,
    ocpdate: datetime | None = None, if_modified_since: datetime | None = None, if_unmodified_since:
    datetime | None = None, etag: str | None = None, match_condition: MatchConditions
    | None = None, **kwargs: Any) -> None'
  parameters:
  - name: job_id
    description: The ID of the Job whose properties you want to update. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: job
    description: A job with updated properties. Required.
    isRequired: true
    types:
    - <xref:azure.batch.models.BatchJob>
  keywordOnlyParameters:
  - name: timeout
    description: 'The maximum time that the server can spend processing the request,
      in

      seconds. The default is 30 seconds. If the value is larger than 30, the default
      will be used

      instead.". Default value is None.'
    defaultValue: None
    types:
    - <xref:int>
  - name: ocpdate
    description: 'The time the request was issued. Client libraries typically set
      this to the

      current system clock time; set it explicitly if you are calling the REST API

      directly. Default value is None.'
    defaultValue: None
    types:
    - <xref:datetime.datetime>
  - name: if_modified_since
    description: 'A timestamp indicating the last modified time of the resource known

      to the

      client. The operation will be performed only if the resource on the service
      has

      been modified since the specified time. Default value is None.'
    defaultValue: None
    types:
    - <xref:datetime.datetime>
  - name: if_unmodified_since
    description: 'A timestamp indicating the last modified time of the resource

      known to the

      client. The operation will be performed only if the resource on the service
      has

      not been modified since the specified time. Default value is None.'
    defaultValue: None
    types:
    - <xref:datetime.datetime>
  - name: etag
    description: 'check if resource is changed. Set None to skip checking etag. Default
      value is

      None.'
    defaultValue: None
    types:
    - <xref:str>
  - name: match_condition
    description: The match condition to use upon the etag. Default value is None.
    defaultValue: None
    types:
    - <xref:azure.core.MatchConditions>
  return:
    description: None
    types:
    - <xref:None>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.batch.BatchClient.replace_job_schedule
  name: replace_job_schedule
  summary: 'Updates the properties of the specified Job Schedule.


    This fully replaces all the updatable properties of the Job Schedule. For

    example, if the schedule property is not specified with this request, then the

    Batch service will remove the existing schedule. Changes to a Job Schedule only

    impact Jobs created by the schedule after the update has taken place; currently

    running Jobs are unaffected.'
  signature: 'replace_job_schedule(job_schedule_id: str, job_schedule: BatchJobSchedule,
    *, timeout: int | None = None, ocpdate: datetime | None = None, if_modified_since:
    datetime | None = None, if_unmodified_since: datetime | None = None, etag: str
    | None = None, match_condition: MatchConditions | None = None, **kwargs: Any)
    -> None'
  parameters:
  - name: job_schedule_id
    description: The ID of the Job Schedule to update. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: job_schedule
    description: A Job Schedule with updated properties. Required.
    isRequired: true
    types:
    - <xref:azure.batch.models.BatchJobSchedule>
  keywordOnlyParameters:
  - name: timeout
    description: 'The maximum time that the server can spend processing the request,
      in

      seconds. The default is 30 seconds. If the value is larger than 30, the default
      will be used

      instead.". Default value is None.'
    defaultValue: None
    types:
    - <xref:int>
  - name: ocpdate
    description: 'The time the request was issued. Client libraries typically set
      this to the

      current system clock time; set it explicitly if you are calling the REST API

      directly. Default value is None.'
    defaultValue: None
    types:
    - <xref:datetime.datetime>
  - name: if_modified_since
    description: 'A timestamp indicating the last modified time of the resource known

      to the

      client. The operation will be performed only if the resource on the service
      has

      been modified since the specified time. Default value is None.'
    defaultValue: None
    types:
    - <xref:datetime.datetime>
  - name: if_unmodified_since
    description: 'A timestamp indicating the last modified time of the resource

      known to the

      client. The operation will be performed only if the resource on the service
      has

      not been modified since the specified time. Default value is None.'
    defaultValue: None
    types:
    - <xref:datetime.datetime>
  - name: etag
    description: 'check if resource is changed. Set None to skip checking etag. Default
      value is

      None.'
    defaultValue: None
    types:
    - <xref:str>
  - name: match_condition
    description: The match condition to use upon the etag. Default value is None.
    defaultValue: None
    types:
    - <xref:azure.core.MatchConditions>
  return:
    description: None
    types:
    - <xref:None>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.batch.BatchClient.replace_node_user
  name: replace_node_user
  summary: 'Updates the password and expiration time of a user Account on the specified
    Compute Node.


    This operation replaces of all the updatable properties of the Account. For

    example, if the expiryTime element is not specified, the current value is

    replaced with the default value, not left unmodified. You can update a user

    Account on a Compute Node only when it is in the idle or running state.'
  signature: 'replace_node_user(pool_id: str, node_id: str, user_name: str, content:
    BatchNodeUserUpdateContent, *, timeout: int | None = None, ocpdate: datetime |
    None = None, **kwargs: Any) -> None'
  parameters:
  - name: pool_id
    description: The ID of the Pool that contains the Compute Node. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: node_id
    description: The ID of the machine on which you want to update a user Account.
      Required.
    isRequired: true
    types:
    - <xref:str>
  - name: user_name
    description: The name of the user Account to update. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: content
    description: The options to use for updating the user. Required.
    isRequired: true
    types:
    - <xref:azure.batch.models.BatchNodeUserUpdateContent>
  keywordOnlyParameters:
  - name: timeout
    description: 'The maximum time that the server can spend processing the request,
      in

      seconds. The default is 30 seconds. If the value is larger than 30, the default
      will be used

      instead.". Default value is None.'
    defaultValue: None
    types:
    - <xref:int>
  - name: ocpdate
    description: 'The time the request was issued. Client libraries typically set
      this to the

      current system clock time; set it explicitly if you are calling the REST API

      directly. Default value is None.'
    defaultValue: None
    types:
    - <xref:datetime.datetime>
  return:
    description: None
    types:
    - <xref:None>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.batch.BatchClient.replace_pool_properties
  name: replace_pool_properties
  summary: 'Updates the properties of the specified Pool.


    This fully replaces all the updatable properties of the Pool. For example, if

    the Pool has a StartTask associated with it and if StartTask is not specified

    with this request, then the Batch service will remove the existing StartTask.'
  signature: 'replace_pool_properties(pool_id: str, pool: BatchPoolReplaceContent,
    *, timeout: int | None = None, ocpdate: datetime | None = None, **kwargs: Any)
    -> None'
  parameters:
  - name: pool_id
    description: The ID of the Pool to update. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: pool
    description: The options to use for replacing properties on the pool. Required.
    isRequired: true
    types:
    - <xref:azure.batch.models.BatchPoolReplaceContent>
  keywordOnlyParameters:
  - name: timeout
    description: 'The maximum time that the server can spend processing the request,
      in

      seconds. The default is 30 seconds. If the value is larger than 30, the default
      will be used

      instead.". Default value is None.'
    defaultValue: None
    types:
    - <xref:int>
  - name: ocpdate
    description: 'The time the request was issued. Client libraries typically set
      this to the

      current system clock time; set it explicitly if you are calling the REST API

      directly. Default value is None.'
    defaultValue: None
    types:
    - <xref:datetime.datetime>
  return:
    description: None
    types:
    - <xref:None>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.batch.BatchClient.replace_task
  name: replace_task
  summary: Updates the properties of the specified Task.
  signature: 'replace_task(job_id: str, task_id: str, task: BatchTask, *, timeout:
    int | None = None, ocpdate: datetime | None = None, if_modified_since: datetime
    | None = None, if_unmodified_since: datetime | None = None, etag: str | None =
    None, match_condition: MatchConditions | None = None, **kwargs: Any) -> None'
  parameters:
  - name: job_id
    description: The ID of the Job containing the Task. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: task_id
    description: The ID of the Task to update. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: task
    description: The Task to update. Required.
    isRequired: true
    types:
    - <xref:azure.batch.models.BatchTask>
  keywordOnlyParameters:
  - name: timeout
    description: 'The maximum time that the server can spend processing the request,
      in

      seconds. The default is 30 seconds. If the value is larger than 30, the default
      will be used

      instead.". Default value is None.'
    defaultValue: None
    types:
    - <xref:int>
  - name: ocpdate
    description: 'The time the request was issued. Client libraries typically set
      this to the

      current system clock time; set it explicitly if you are calling the REST API

      directly. Default value is None.'
    defaultValue: None
    types:
    - <xref:datetime.datetime>
  - name: if_modified_since
    description: 'A timestamp indicating the last modified time of the resource known

      to the

      client. The operation will be performed only if the resource on the service
      has

      been modified since the specified time. Default value is None.'
    defaultValue: None
    types:
    - <xref:datetime.datetime>
  - name: if_unmodified_since
    description: 'A timestamp indicating the last modified time of the resource

      known to the

      client. The operation will be performed only if the resource on the service
      has

      not been modified since the specified time. Default value is None.'
    defaultValue: None
    types:
    - <xref:datetime.datetime>
  - name: etag
    description: 'check if resource is changed. Set None to skip checking etag. Default
      value is

      None.'
    defaultValue: None
    types:
    - <xref:str>
  - name: match_condition
    description: The match condition to use upon the etag. Default value is None.
    defaultValue: None
    types:
    - <xref:azure.core.MatchConditions>
  return:
    description: None
    types:
    - <xref:None>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.batch.BatchClient.resize_pool
  name: resize_pool
  summary: 'Changes the number of Compute Nodes that are assigned to a Pool.


    You can only resize a Pool when its allocation state is steady. If the Pool is

    already resizing, the request fails with status code 409. When you resize a

    Pool, the Pool''s allocation state changes from steady to resizing. You cannot

    resize Pools which are configured for automatic scaling. If you try to do this,

    the Batch service returns an error 409. If you resize a Pool downwards, the

    Batch service chooses which Compute Nodes to remove. To remove specific Compute

    Nodes, use the Pool remove Compute Nodes API instead.'
  signature: 'resize_pool(pool_id: str, content: BatchPoolResizeContent, *, timeout:
    int | None = None, ocpdate: datetime | None = None, if_modified_since: datetime
    | None = None, if_unmodified_since: datetime | None = None, etag: str | None =
    None, match_condition: MatchConditions | None = None, **kwargs: Any) -> None'
  parameters:
  - name: pool_id
    description: The ID of the Pool to get. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: content
    description: The options to use for resizing the pool. Required.
    isRequired: true
    types:
    - <xref:azure.batch.models.BatchPoolResizeContent>
  keywordOnlyParameters:
  - name: timeout
    description: 'The maximum time that the server can spend processing the request,
      in

      seconds. The default is 30 seconds. If the value is larger than 30, the default
      will be used

      instead.". Default value is None.'
    defaultValue: None
    types:
    - <xref:int>
  - name: ocpdate
    description: 'The time the request was issued. Client libraries typically set
      this to the

      current system clock time; set it explicitly if you are calling the REST API

      directly. Default value is None.'
    defaultValue: None
    types:
    - <xref:datetime.datetime>
  - name: if_modified_since
    description: 'A timestamp indicating the last modified time of the resource known

      to the

      client. The operation will be performed only if the resource on the service
      has

      been modified since the specified time. Default value is None.'
    defaultValue: None
    types:
    - <xref:datetime.datetime>
  - name: if_unmodified_since
    description: 'A timestamp indicating the last modified time of the resource

      known to the

      client. The operation will be performed only if the resource on the service
      has

      not been modified since the specified time. Default value is None.'
    defaultValue: None
    types:
    - <xref:datetime.datetime>
  - name: etag
    description: 'check if resource is changed. Set None to skip checking etag. Default
      value is

      None.'
    defaultValue: None
    types:
    - <xref:str>
  - name: match_condition
    description: The match condition to use upon the etag. Default value is None.
    defaultValue: None
    types:
    - <xref:azure.core.MatchConditions>
  return:
    description: None
    types:
    - <xref:None>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.batch.BatchClient.send_request
  name: send_request
  summary: 'Runs the network request through the client''s chained policies.


    ```


    >>> from azure.core.rest import HttpRequest

    >>> request = HttpRequest("GET", "https://www.example.org/")

    <HttpRequest [GET], url: ''https://www.example.org/''>

    >>> response = client.send_request(request)

    <HttpResponse: 200 OK>

    ```


    For more information on this code flow, see [https://aka.ms/azsdk/dpcodegen/python/send_request](https://aka.ms/azsdk/dpcodegen/python/send_request)'
  signature: 'send_request(request: HttpRequest, *, stream: bool = False, **kwargs:
    Any) -> HttpResponse'
  parameters:
  - name: request
    description: The network request you want to make. Required.
    isRequired: true
    types:
    - <xref:azure.core.rest.HttpRequest>
  keywordOnlyParameters:
  - name: stream
    description: Whether the response payload will be streamed. Defaults to False.
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: The response of your network call. Does not do error handling on
      your response.
    types:
    - <xref:azure.core.rest.HttpResponse>
- uid: azure.batch.BatchClient.start_node
  name: start_node
  summary: 'Starts the specified Compute Node.


    You can start a Compute Node only if it has been deallocated.'
  signature: 'start_node(pool_id: str, node_id: str, *, timeout: int | None = None,
    ocpdate: datetime | None = None, **kwargs: Any) -> None'
  parameters:
  - name: pool_id
    description: The ID of the Pool that contains the Compute Node. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: node_id
    description: The ID of the Compute Node that you want to restart. Required.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: timeout
    description: 'The maximum time that the server can spend processing the request,
      in

      seconds. The default is 30 seconds. If the value is larger than 30, the default
      will be used

      instead.". Default value is None.'
    defaultValue: None
    types:
    - <xref:int>
  - name: ocpdate
    description: 'The time the request was issued. Client libraries typically set
      this to the

      current system clock time; set it explicitly if you are calling the REST API

      directly. Default value is None.'
    defaultValue: None
    types:
    - <xref:datetime.datetime>
  return:
    description: None
    types:
    - <xref:None>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.batch.BatchClient.stop_pool_resize
  name: stop_pool_resize
  summary: 'Stops an ongoing resize operation on the Pool.


    This does not restore the Pool to its previous state before the resize

    operation: it only stops any further changes being made, and the Pool maintains

    its current state. After stopping, the Pool stabilizes at the number of Compute

    Nodes it was at when the stop operation was done. During the stop operation,

    the Pool allocation state changes first to stopping and then to steady. A

    resize operation need not be an explicit resize Pool request; this API can also

    be used to halt the initial sizing of the Pool when it is created.'
  signature: 'stop_pool_resize(pool_id: str, *, timeout: int | None = None, ocpdate:
    datetime | None = None, if_modified_since: datetime | None = None, if_unmodified_since:
    datetime | None = None, etag: str | None = None, match_condition: MatchConditions
    | None = None, **kwargs: Any) -> None'
  parameters:
  - name: pool_id
    description: The ID of the Pool to get. Required.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: timeout
    description: 'The maximum time that the server can spend processing the request,
      in

      seconds. The default is 30 seconds. If the value is larger than 30, the default
      will be used

      instead.". Default value is None.'
    defaultValue: None
    types:
    - <xref:int>
  - name: ocpdate
    description: 'The time the request was issued. Client libraries typically set
      this to the

      current system clock time; set it explicitly if you are calling the REST API

      directly. Default value is None.'
    defaultValue: None
    types:
    - <xref:datetime.datetime>
  - name: if_modified_since
    description: 'A timestamp indicating the last modified time of the resource known

      to the

      client. The operation will be performed only if the resource on the service
      has

      been modified since the specified time. Default value is None.'
    defaultValue: None
    types:
    - <xref:datetime.datetime>
  - name: if_unmodified_since
    description: 'A timestamp indicating the last modified time of the resource

      known to the

      client. The operation will be performed only if the resource on the service
      has

      not been modified since the specified time. Default value is None.'
    defaultValue: None
    types:
    - <xref:datetime.datetime>
  - name: etag
    description: 'check if resource is changed. Set None to skip checking etag. Default
      value is

      None.'
    defaultValue: None
    types:
    - <xref:str>
  - name: match_condition
    description: The match condition to use upon the etag. Default value is None.
    defaultValue: None
    types:
    - <xref:azure.core.MatchConditions>
  return:
    description: None
    types:
    - <xref:None>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.batch.BatchClient.terminate_job
  name: terminate_job
  summary: 'Terminates the specified Job, marking it as completed.


    When a Terminate Job request is received, the Batch service sets the Job to the

    terminating state. The Batch service then terminates any running Tasks

    associated with the Job and runs any required Job release Tasks. Then the Job

    moves into the completed state. If there are any Tasks in the Job in the active

    state, they will remain in the active state. Once a Job is terminated, new

    Tasks cannot be added and any remaining active Tasks will not be scheduled.'
  signature: 'terminate_job(job_id: str, parameters: BatchJobTerminateContent | None
    = None, *, timeout: int | None = None, ocpdate: datetime | None = None, if_modified_since:
    datetime | None = None, if_unmodified_since: datetime | None = None, force: bool
    | None = None, etag: str | None = None, match_condition: MatchConditions | None
    = None, **kwargs: Any) -> None'
  parameters:
  - name: job_id
    description: The ID of the Job to terminate. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: parameters
    description: The options to use for terminating the Job. Default value is None.
    defaultValue: None
    types:
    - <xref:azure.batch.models.BatchJobTerminateContent>
  keywordOnlyParameters:
  - name: timeout
    description: 'The maximum time that the server can spend processing the request,
      in

      seconds. The default is 30 seconds. If the value is larger than 30, the default
      will be used

      instead.". Default value is None.'
    defaultValue: None
    types:
    - <xref:int>
  - name: ocpdate
    description: 'The time the request was issued. Client libraries typically set
      this to the

      current system clock time; set it explicitly if you are calling the REST API

      directly. Default value is None.'
    defaultValue: None
    types:
    - <xref:datetime.datetime>
  - name: if_modified_since
    description: 'A timestamp indicating the last modified time of the resource known

      to the

      client. The operation will be performed only if the resource on the service
      has

      been modified since the specified time. Default value is None.'
    defaultValue: None
    types:
    - <xref:datetime.datetime>
  - name: if_unmodified_since
    description: 'A timestamp indicating the last modified time of the resource

      known to the

      client. The operation will be performed only if the resource on the service
      has

      not been modified since the specified time. Default value is None.'
    defaultValue: None
    types:
    - <xref:datetime.datetime>
  - name: force
    description: 'If true, the server will terminate the Job even if the corresponding
      nodes have

      not fully processed the termination. The default value is false. Default value
      is None.'
    defaultValue: None
    types:
    - <xref:bool>
  - name: etag
    description: 'check if resource is changed. Set None to skip checking etag. Default
      value is

      None.'
    defaultValue: None
    types:
    - <xref:str>
  - name: match_condition
    description: The match condition to use upon the etag. Default value is None.
    defaultValue: None
    types:
    - <xref:azure.core.MatchConditions>
  return:
    description: None
    types:
    - <xref:None>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.batch.BatchClient.terminate_job_schedule
  name: terminate_job_schedule
  summary: 'Terminates a Job Schedule.


    Terminates a Job Schedule.'
  signature: 'terminate_job_schedule(job_schedule_id: str, *, timeout: int | None
    = None, ocpdate: datetime | None = None, if_modified_since: datetime | None =
    None, if_unmodified_since: datetime | None = None, force: bool | None = None,
    etag: str | None = None, match_condition: MatchConditions | None = None, **kwargs:
    Any) -> None'
  parameters:
  - name: job_schedule_id
    description: The ID of the Job Schedule to terminates. Required.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: timeout
    description: 'The maximum time that the server can spend processing the request,
      in

      seconds. The default is 30 seconds. If the value is larger than 30, the default
      will be used

      instead.". Default value is None.'
    defaultValue: None
    types:
    - <xref:int>
  - name: ocpdate
    description: 'The time the request was issued. Client libraries typically set
      this to the

      current system clock time; set it explicitly if you are calling the REST API

      directly. Default value is None.'
    defaultValue: None
    types:
    - <xref:datetime.datetime>
  - name: if_modified_since
    description: 'A timestamp indicating the last modified time of the resource known

      to the

      client. The operation will be performed only if the resource on the service
      has

      been modified since the specified time. Default value is None.'
    defaultValue: None
    types:
    - <xref:datetime.datetime>
  - name: if_unmodified_since
    description: 'A timestamp indicating the last modified time of the resource

      known to the

      client. The operation will be performed only if the resource on the service
      has

      not been modified since the specified time. Default value is None.'
    defaultValue: None
    types:
    - <xref:datetime.datetime>
  - name: force
    description: 'If true, the server will terminate the JobSchedule even if the corresponding

      nodes have not fully processed the termination. The default value is false.
      Default value is

      None.'
    defaultValue: None
    types:
    - <xref:bool>
  - name: etag
    description: 'check if resource is changed. Set None to skip checking etag. Default
      value is

      None.'
    defaultValue: None
    types:
    - <xref:str>
  - name: match_condition
    description: The match condition to use upon the etag. Default value is None.
    defaultValue: None
    types:
    - <xref:azure.core.MatchConditions>
  return:
    description: None
    types:
    - <xref:None>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.batch.BatchClient.terminate_task
  name: terminate_task
  summary: 'Terminates the specified Task.


    When the Task has been terminated, it moves to the completed state. For

    multi-instance Tasks, the terminate Task operation applies synchronously to the

    primary task; subtasks are then terminated asynchronously in the background.'
  signature: 'terminate_task(job_id: str, task_id: str, *, timeout: int | None = None,
    ocpdate: datetime | None = None, if_modified_since: datetime | None = None, if_unmodified_since:
    datetime | None = None, etag: str | None = None, match_condition: MatchConditions
    | None = None, **kwargs: Any) -> None'
  parameters:
  - name: job_id
    description: The ID of the Job containing the Task. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: task_id
    description: The ID of the Task to terminate. Required.
    isRequired: true
    types:
    - <xref:str>
  keywordOnlyParameters:
  - name: timeout
    description: 'The maximum time that the server can spend processing the request,
      in

      seconds. The default is 30 seconds. If the value is larger than 30, the default
      will be used

      instead.". Default value is None.'
    defaultValue: None
    types:
    - <xref:int>
  - name: ocpdate
    description: 'The time the request was issued. Client libraries typically set
      this to the

      current system clock time; set it explicitly if you are calling the REST API

      directly. Default value is None.'
    defaultValue: None
    types:
    - <xref:datetime.datetime>
  - name: if_modified_since
    description: 'A timestamp indicating the last modified time of the resource known

      to the

      client. The operation will be performed only if the resource on the service
      has

      been modified since the specified time. Default value is None.'
    defaultValue: None
    types:
    - <xref:datetime.datetime>
  - name: if_unmodified_since
    description: 'A timestamp indicating the last modified time of the resource

      known to the

      client. The operation will be performed only if the resource on the service
      has

      not been modified since the specified time. Default value is None.'
    defaultValue: None
    types:
    - <xref:datetime.datetime>
  - name: etag
    description: 'check if resource is changed. Set None to skip checking etag. Default
      value is

      None.'
    defaultValue: None
    types:
    - <xref:str>
  - name: match_condition
    description: The match condition to use upon the etag. Default value is None.
    defaultValue: None
    types:
    - <xref:azure.core.MatchConditions>
  return:
    description: None
    types:
    - <xref:None>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.batch.BatchClient.update_job
  name: update_job
  summary: 'Updates the properties of the specified Job.


    This replaces only the Job properties specified in the request. For example, if

    the Job has constraints, and a request does not specify the constraints

    element, then the Job keeps the existing constraints.'
  signature: 'update_job(job_id: str, job: BatchJobUpdateContent, *, timeout: int
    | None = None, ocpdate: datetime | None = None, if_modified_since: datetime |
    None = None, if_unmodified_since: datetime | None = None, etag: str | None = None,
    match_condition: MatchConditions | None = None, **kwargs: Any) -> None'
  parameters:
  - name: job_id
    description: The ID of the Job whose properties you want to update. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: job
    description: The options to use for updating the Job. Required.
    isRequired: true
    types:
    - <xref:azure.batch.models.BatchJobUpdateContent>
  keywordOnlyParameters:
  - name: timeout
    description: 'The maximum time that the server can spend processing the request,
      in

      seconds. The default is 30 seconds. If the value is larger than 30, the default
      will be used

      instead.". Default value is None.'
    defaultValue: None
    types:
    - <xref:int>
  - name: ocpdate
    description: 'The time the request was issued. Client libraries typically set
      this to the

      current system clock time; set it explicitly if you are calling the REST API

      directly. Default value is None.'
    defaultValue: None
    types:
    - <xref:datetime.datetime>
  - name: if_modified_since
    description: 'A timestamp indicating the last modified time of the resource known

      to the

      client. The operation will be performed only if the resource on the service
      has

      been modified since the specified time. Default value is None.'
    defaultValue: None
    types:
    - <xref:datetime.datetime>
  - name: if_unmodified_since
    description: 'A timestamp indicating the last modified time of the resource

      known to the

      client. The operation will be performed only if the resource on the service
      has

      not been modified since the specified time. Default value is None.'
    defaultValue: None
    types:
    - <xref:datetime.datetime>
  - name: etag
    description: 'check if resource is changed. Set None to skip checking etag. Default
      value is

      None.'
    defaultValue: None
    types:
    - <xref:str>
  - name: match_condition
    description: The match condition to use upon the etag. Default value is None.
    defaultValue: None
    types:
    - <xref:azure.core.MatchConditions>
  return:
    description: None
    types:
    - <xref:None>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.batch.BatchClient.update_job_schedule
  name: update_job_schedule
  summary: 'Updates the properties of the specified Job Schedule.


    This replaces only the Job Schedule properties specified in the request. For

    example, if the schedule property is not specified with this request, then the

    Batch service will keep the existing schedule. Changes to a Job Schedule only

    impact Jobs created by the schedule after the update has taken place; currently

    running Jobs are unaffected.'
  signature: 'update_job_schedule(job_schedule_id: str, job_schedule: BatchJobScheduleUpdateContent,
    *, timeout: int | None = None, ocpdate: datetime | None = None, if_modified_since:
    datetime | None = None, if_unmodified_since: datetime | None = None, etag: str
    | None = None, match_condition: MatchConditions | None = None, **kwargs: Any)
    -> None'
  parameters:
  - name: job_schedule_id
    description: The ID of the Job Schedule to update. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: job_schedule
    description: The options to use for updating the Job Schedule. Required.
    isRequired: true
    types:
    - <xref:azure.batch.models.BatchJobScheduleUpdateContent>
  keywordOnlyParameters:
  - name: timeout
    description: 'The maximum time that the server can spend processing the request,
      in

      seconds. The default is 30 seconds. If the value is larger than 30, the default
      will be used

      instead.". Default value is None.'
    defaultValue: None
    types:
    - <xref:int>
  - name: ocpdate
    description: 'The time the request was issued. Client libraries typically set
      this to the

      current system clock time; set it explicitly if you are calling the REST API

      directly. Default value is None.'
    defaultValue: None
    types:
    - <xref:datetime.datetime>
  - name: if_modified_since
    description: 'A timestamp indicating the last modified time of the resource known

      to the

      client. The operation will be performed only if the resource on the service
      has

      been modified since the specified time. Default value is None.'
    defaultValue: None
    types:
    - <xref:datetime.datetime>
  - name: if_unmodified_since
    description: 'A timestamp indicating the last modified time of the resource

      known to the

      client. The operation will be performed only if the resource on the service
      has

      not been modified since the specified time. Default value is None.'
    defaultValue: None
    types:
    - <xref:datetime.datetime>
  - name: etag
    description: 'check if resource is changed. Set None to skip checking etag. Default
      value is

      None.'
    defaultValue: None
    types:
    - <xref:str>
  - name: match_condition
    description: The match condition to use upon the etag. Default value is None.
    defaultValue: None
    types:
    - <xref:azure.core.MatchConditions>
  return:
    description: None
    types:
    - <xref:None>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.batch.BatchClient.update_pool
  name: update_pool
  summary: 'Updates the properties of the specified Pool.


    This only replaces the Pool properties specified in the request. For example,

    if the Pool has a StartTask associated with it, and a request does not specify

    a StartTask element, then the Pool keeps the existing StartTask.'
  signature: 'update_pool(pool_id: str, pool: BatchPoolUpdateContent, *, timeout:
    int | None = None, ocpdate: datetime | None = None, if_modified_since: datetime
    | None = None, if_unmodified_since: datetime | None = None, etag: str | None =
    None, match_condition: MatchConditions | None = None, **kwargs: Any) -> None'
  parameters:
  - name: pool_id
    description: The ID of the Pool to get. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: pool
    description: The pool properties to update. Required.
    isRequired: true
    types:
    - <xref:azure.batch.models.BatchPoolUpdateContent>
  keywordOnlyParameters:
  - name: timeout
    description: 'The maximum time that the server can spend processing the request,
      in

      seconds. The default is 30 seconds. If the value is larger than 30, the default
      will be used

      instead.". Default value is None.'
    defaultValue: None
    types:
    - <xref:int>
  - name: ocpdate
    description: 'The time the request was issued. Client libraries typically set
      this to the

      current system clock time; set it explicitly if you are calling the REST API

      directly. Default value is None.'
    defaultValue: None
    types:
    - <xref:datetime.datetime>
  - name: if_modified_since
    description: 'A timestamp indicating the last modified time of the resource known

      to the

      client. The operation will be performed only if the resource on the service
      has

      been modified since the specified time. Default value is None.'
    defaultValue: None
    types:
    - <xref:datetime.datetime>
  - name: if_unmodified_since
    description: 'A timestamp indicating the last modified time of the resource

      known to the

      client. The operation will be performed only if the resource on the service
      has

      not been modified since the specified time. Default value is None.'
    defaultValue: None
    types:
    - <xref:datetime.datetime>
  - name: etag
    description: 'check if resource is changed. Set None to skip checking etag. Default
      value is

      None.'
    defaultValue: None
    types:
    - <xref:str>
  - name: match_condition
    description: The match condition to use upon the etag. Default value is None.
    defaultValue: None
    types:
    - <xref:azure.core.MatchConditions>
  return:
    description: None
    types:
    - <xref:None>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.batch.BatchClient.upload_node_logs
  name: upload_node_logs
  summary: 'Upload Azure Batch service log files from the specified Compute Node to
    Azure

    Blob Storage.


    This is for gathering Azure Batch service log files in an automated fashion

    from Compute Nodes if you are experiencing an error and wish to escalate to

    Azure support. The Azure Batch service log files should be shared with Azure

    support to aid in debugging issues with the Batch service.'
  signature: 'upload_node_logs(pool_id: str, node_id: str, content: UploadBatchServiceLogsContent,
    *, timeout: int | None = None, ocpdate: datetime | None = None, **kwargs: Any)
    -> UploadBatchServiceLogsResult'
  parameters:
  - name: pool_id
    description: The ID of the Pool that contains the Compute Node. Required.
    isRequired: true
    types:
    - <xref:str>
  - name: node_id
    description: 'The ID of the Compute Node for which you want to get the Remote
      Desktop

      Protocol file. Required.'
    isRequired: true
    types:
    - <xref:str>
  - name: content
    description: The Azure Batch service log files upload options. Required.
    isRequired: true
    types:
    - <xref:azure.batch.models.UploadBatchServiceLogsContent>
  keywordOnlyParameters:
  - name: timeout
    description: 'The maximum time that the server can spend processing the request,
      in

      seconds. The default is 30 seconds. If the value is larger than 30, the default
      will be used

      instead.". Default value is None.'
    defaultValue: None
    types:
    - <xref:int>
  - name: ocpdate
    description: 'The time the request was issued. Client libraries typically set
      this to the

      current system clock time; set it explicitly if you are calling the REST API

      directly. Default value is None.'
    defaultValue: None
    types:
    - <xref:datetime.datetime>
  return:
    description: 'UploadBatchServiceLogsResult. The UploadBatchServiceLogsResult is
      compatible with

      MutableMapping'
    types:
    - <xref:azure.batch.models.UploadBatchServiceLogsResult>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
