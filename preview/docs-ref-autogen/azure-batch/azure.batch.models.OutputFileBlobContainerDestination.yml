### YamlMime:PythonClass
uid: azure.batch.models.OutputFileBlobContainerDestination
name: OutputFileBlobContainerDestination
fullName: azure.batch.models.OutputFileBlobContainerDestination
module: azure.batch.models
summary: Specifies a file upload destination within an Azure blob storage container.
constructor:
  syntax: 'OutputFileBlobContainerDestination(*args: Any, **kwargs: Any)'
variables:
- description: 'The destination blob or virtual directory within the Azure Storage
    container. If

    filePattern refers to a specific file (i.e. contains no wildcards), then path
    is the name of

    the blob to which to upload that file. If filePattern contains one or more wildcards
    (and

    therefore may match multiple files), then path is the name of the blob virtual
    directory (which

    is prepended to each blob name) to which to upload the file(s). If omitted, file(s)
    are

    uploaded to the root of the container with a blob name matching their file name.'
  name: path
  types:
  - <xref:str>
- description: 'The URL of the container within Azure Blob Storage to which to upload
    the

    file(s). If not using a managed identity, the URL must include a Shared Access
    Signature (SAS)

    granting write permissions to the container. Required.'
  name: container_url
  types:
  - <xref:str>
- description: 'The reference to the user assigned identity to use to access Azure

    Blob Storage specified by containerUrl. The identity must have write access to
    the Azure Blob

    Storage container.'
  name: identity_reference
  types:
  - <xref:azure.batch.models.BatchNodeIdentityReference>
- description: 'A list of name-value pairs for headers to be used in uploading output

    files. These headers will be specified when uploading files to Azure Storage.
    Official document

    on allowed headers when uploading blobs:

    [https://learn.microsoft.com/rest/api/storageservices/put-blob#request-headers-all-blob-types](https://learn.microsoft.com/rest/api/storageservices/put-blob#request-headers-all-blob-types).'
  name: upload_headers
  types:
  - <xref:list>[<xref:azure.batch.models.HttpHeader>]
methods:
- uid: azure.batch.models.OutputFileBlobContainerDestination.as_dict
  name: as_dict
  summary: Return a dict that can be turned into json using json.dump.
  signature: 'as_dict(*, exclude_readonly: bool = False) -> Dict[str, Any]'
  keywordOnlyParameters:
  - name: exclude_readonly
    description: Whether to remove the readonly properties.
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.batch.models.OutputFileBlobContainerDestination.clear
  name: clear
  summary: Remove all items from D.
  signature: clear() -> None
- uid: azure.batch.models.OutputFileBlobContainerDestination.copy
  name: copy
  signature: copy() -> Model
- uid: azure.batch.models.OutputFileBlobContainerDestination.get
  name: get
  summary: 'Get the value for key if key is in the dictionary, else default.

    :param str key: The key to look up.

    :param any default: The value to return if key is not in the dictionary. Defaults
    to None

    :returns: D[k] if k in D, else d.

    :rtype: any'
  signature: 'get(key: str, default: Any = None) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
    defaultValue: None
- uid: azure.batch.models.OutputFileBlobContainerDestination.items
  name: items
  signature: items() -> ItemsView[str, Any]
  return:
    description: set-like object providing a view on D's items
    types:
    - <xref:typing.ItemsView>
- uid: azure.batch.models.OutputFileBlobContainerDestination.keys
  name: keys
  signature: keys() -> KeysView[str]
  return:
    description: a set-like object providing a view on D's keys
    types:
    - <xref:typing.KeysView>
- uid: azure.batch.models.OutputFileBlobContainerDestination.pop
  name: pop
  summary: 'Removes specified key and return the corresponding value.

    :param str key: The key to pop.

    :param any default: The value to return if key is not in the dictionary

    :returns: The value corresponding to the key.

    :rtype: any

    :raises KeyError: If key is not found and default is not given.'
  signature: 'pop(key: str, default: ~typing.Any = <object object>) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
- uid: azure.batch.models.OutputFileBlobContainerDestination.popitem
  name: popitem
  summary: 'Removes and returns some (key, value) pair

    :returns: The (key, value) pair.

    :rtype: tuple

    :raises KeyError: if D is empty.'
  signature: popitem() -> Tuple[str, Any]
- uid: azure.batch.models.OutputFileBlobContainerDestination.setdefault
  name: setdefault
  summary: 'Same as calling D.get(k, d), and setting D[k]=d if k not found

    :param str key: The key to look up.

    :param any default: The value to set if key is not in the dictionary

    :returns: D[k] if k in D, else d.

    :rtype: any'
  signature: 'setdefault(key: str, default: ~typing.Any = <object object>) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
- uid: azure.batch.models.OutputFileBlobContainerDestination.update
  name: update
  summary: 'Updates D from mapping/iterable E and F.

    :param any args: Either a mapping object or an iterable of key-value pairs.'
  signature: 'update(*args: Any, **kwargs: Any) -> None'
- uid: azure.batch.models.OutputFileBlobContainerDestination.values
  name: values
  signature: values() -> ValuesView[Any]
  return:
    description: an object providing a view on D's values
    types:
    - <xref:typing.ValuesView>
attributes:
- uid: azure.batch.models.OutputFileBlobContainerDestination.container_url
  name: container_url
  summary: 'The URL of the container within Azure Blob Storage to which to upload
    the file(s). If not using

    a managed identity, the URL must include a Shared Access Signature (SAS) granting
    write

    permissions to the container. Required.'
  signature: 'container_url: str'
- uid: azure.batch.models.OutputFileBlobContainerDestination.identity_reference
  name: identity_reference
  summary: 'The reference to the user assigned identity to use to access Azure Blob
    Storage specified by

    containerUrl. The identity must have write access to the Azure Blob Storage container.'
  signature: 'identity_reference: _models.BatchNodeIdentityReference | None'
- uid: azure.batch.models.OutputFileBlobContainerDestination.path
  name: path
  summary: 'The destination blob or virtual directory within the Azure Storage container.
    If filePattern

    refers to a specific file (i.e. contains no wildcards), then path is the name
    of the blob to

    which to upload that file. If filePattern contains one or more wildcards (and
    therefore may

    match multiple files), then path is the name of the blob virtual directory (which
    is prepended

    to each blob name) to which to upload the file(s). If omitted, file(s) are uploaded
    to the root

    of the container with a blob name matching their file name.'
  signature: 'path: str | None'
- uid: azure.batch.models.OutputFileBlobContainerDestination.upload_headers
  name: upload_headers
  summary: 'A list of name-value pairs for headers to be used in uploading output
    files. These headers will

    be specified when uploading files to Azure Storage. Official document on allowed
    headers when

    uploading blobs:

    [https://learn.microsoft.com/rest/api/storageservices/put-blob#request-headers-all-blob-types](https://learn.microsoft.com/rest/api/storageservices/put-blob#request-headers-all-blob-types).'
  signature: 'upload_headers: List[_models.HttpHeader] | None'
