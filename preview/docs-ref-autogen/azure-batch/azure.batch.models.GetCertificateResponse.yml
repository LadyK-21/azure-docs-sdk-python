### YamlMime:PythonClass
uid: azure.batch.models.GetCertificateResponse
name: GetCertificateResponse
fullName: azure.batch.models.GetCertificateResponse
module: azure.batch.models
summary: GetCertificateResponse.
constructor:
  syntax: 'GetCertificateResponse(*args: Any, **kwargs: Any)'
variables:
- description: 'The X.509 thumbprint of the Certificate. This is a sequence of up
    to 40 hex

    digits (it may include spaces but these are removed). Required.'
  name: thumbprint
  types:
  - <xref:str>
- description: 'The algorithm used to derive the thumbprint. This must be sha1.

    Required.'
  name: thumbprint_algorithm
  types:
  - <xref:str>
- description: The URL of the Certificate.
  name: url
  types:
  - <xref:str>
- description: 'The state of the Certificate. Known values are: "active", "deleting",
    and

    "deletefailed".'
  name: state
  types:
  - <xref:str>
  - <xref:azure.batch.models.BatchCertificateState>
- description: The time at which the Certificate entered its current state.
  name: state_transition_time
  types:
  - <xref:datetime.datetime>
- description: 'The previous state of the Certificate. This property is not set if
    the

    Certificate is in its initial active state. Known values are: "active", "deleting",
    and

    "deletefailed".'
  name: previous_state
  types:
  - <xref:str>
  - <xref:azure.batch.models.BatchCertificateState>
- description: 'The time at which the Certificate entered its previous

    state. This property is not set if the Certificate is in its initial Active state.'
  name: previous_state_transition_time
  types:
  - <xref:datetime.datetime>
- description: The public part of the Certificate as a base-64 encoded .cer file.
  name: public_data
  types:
  - <xref:str>
- description: 'The error that occurred on the last attempt to delete this

    Certificate. This property is set only if the Certificate is in the DeleteFailed
    state.'
  name: delete_certificate_error
  types:
  - <xref:azure.batch.models.DeleteBatchCertificateError>
methods:
- uid: azure.batch.models.GetCertificateResponse.as_dict
  name: as_dict
  summary: Return a dict that can be turned into json using json.dump.
  signature: 'as_dict(*, exclude_readonly: bool = False) -> Dict[str, Any]'
  keywordOnlyParameters:
  - name: exclude_readonly
    description: Whether to remove the readonly properties.
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.batch.models.GetCertificateResponse.clear
  name: clear
  summary: Remove all items from D.
  signature: clear() -> None
- uid: azure.batch.models.GetCertificateResponse.copy
  name: copy
  signature: copy() -> Model
- uid: azure.batch.models.GetCertificateResponse.get
  name: get
  summary: 'Get the value for key if key is in the dictionary, else default.

    :param str key: The key to look up.

    :param any default: The value to return if key is not in the dictionary. Defaults
    to None

    :returns: D[k] if k in D, else d.

    :rtype: any'
  signature: 'get(key: str, default: Any = None) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
    defaultValue: None
- uid: azure.batch.models.GetCertificateResponse.items
  name: items
  signature: items() -> ItemsView[str, Any]
  return:
    description: set-like object providing a view on D's items
    types:
    - <xref:typing.ItemsView>
- uid: azure.batch.models.GetCertificateResponse.keys
  name: keys
  signature: keys() -> KeysView[str]
  return:
    description: a set-like object providing a view on D's keys
    types:
    - <xref:typing.KeysView>
- uid: azure.batch.models.GetCertificateResponse.pop
  name: pop
  summary: 'Removes specified key and return the corresponding value.

    :param str key: The key to pop.

    :param any default: The value to return if key is not in the dictionary

    :returns: The value corresponding to the key.

    :rtype: any

    :raises KeyError: If key is not found and default is not given.'
  signature: 'pop(key: str, default: ~typing.Any = <object object>) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
- uid: azure.batch.models.GetCertificateResponse.popitem
  name: popitem
  summary: 'Removes and returns some (key, value) pair

    :returns: The (key, value) pair.

    :rtype: tuple

    :raises KeyError: if D is empty.'
  signature: popitem() -> Tuple[str, Any]
- uid: azure.batch.models.GetCertificateResponse.setdefault
  name: setdefault
  summary: 'Same as calling D.get(k, d), and setting D[k]=d if k not found

    :param str key: The key to look up.

    :param any default: The value to set if key is not in the dictionary

    :returns: D[k] if k in D, else d.

    :rtype: any'
  signature: 'setdefault(key: str, default: ~typing.Any = <object object>) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
- uid: azure.batch.models.GetCertificateResponse.update
  name: update
  summary: 'Updates D from mapping/iterable E and F.

    :param any args: Either a mapping object or an iterable of key-value pairs.'
  signature: 'update(*args: Any, **kwargs: Any) -> None'
- uid: azure.batch.models.GetCertificateResponse.values
  name: values
  signature: values() -> ValuesView[Any]
  return:
    description: an object providing a view on D's values
    types:
    - <xref:typing.ValuesView>
attributes:
- uid: azure.batch.models.GetCertificateResponse.delete_certificate_error
  name: delete_certificate_error
  summary: 'The error that occurred on the last attempt to delete this Certificate.
    This property is set

    only if the Certificate is in the DeleteFailed state.'
  signature: 'delete_certificate_error: _models.DeleteBatchCertificateError | None'
- uid: azure.batch.models.GetCertificateResponse.previous_state
  name: previous_state
  summary: 'The previous state of the Certificate. This property is not set if the
    Certificate is in its

    initial active state. Known values are: "active", "deleting", and "deletefailed".'
  signature: 'previous_state: str | _models.BatchCertificateState | None'
- uid: azure.batch.models.GetCertificateResponse.previous_state_transition_time
  name: previous_state_transition_time
  summary: 'The time at which the Certificate entered its previous state. This property
    is not set if the

    Certificate is in its initial Active state.'
  signature: 'previous_state_transition_time: datetime | None'
- uid: azure.batch.models.GetCertificateResponse.public_data
  name: public_data
  summary: The public part of the Certificate as a base-64 encoded .cer file.
  signature: 'public_data: str | None'
- uid: azure.batch.models.GetCertificateResponse.state
  name: state
  summary: '"active", "deleting", and "deletefailed".'
  signature: 'state: str | _models.BatchCertificateState | None'
- uid: azure.batch.models.GetCertificateResponse.state_transition_time
  name: state_transition_time
  summary: The time at which the Certificate entered its current state.
  signature: 'state_transition_time: datetime | None'
- uid: azure.batch.models.GetCertificateResponse.thumbprint
  name: thumbprint
  summary: 'The X.509 thumbprint of the Certificate. This is a sequence of up to 40
    hex digits (it may

    include spaces but these are removed). Required.'
  signature: 'thumbprint: str'
- uid: azure.batch.models.GetCertificateResponse.thumbprint_algorithm
  name: thumbprint_algorithm
  summary: The algorithm used to derive the thumbprint. This must be sha1. Required.
  signature: 'thumbprint_algorithm: str'
- uid: azure.batch.models.GetCertificateResponse.url
  name: url
  summary: The URL of the Certificate.
  signature: 'url: str | None'
