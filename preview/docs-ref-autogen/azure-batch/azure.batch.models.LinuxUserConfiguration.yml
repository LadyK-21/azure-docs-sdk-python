### YamlMime:PythonClass
uid: azure.batch.models.LinuxUserConfiguration
name: LinuxUserConfiguration
fullName: azure.batch.models.LinuxUserConfiguration
module: azure.batch.models
summary: Properties used to create a user Account on a Linux Compute Node.
constructor:
  syntax: 'LinuxUserConfiguration(*args: Any, **kwargs: Any)'
variables:
- description: 'The user ID of the user Account. The uid and gid properties must be
    specified

    together or not at all. If not specified the underlying operating system picks
    the uid.'
  name: uid
  types:
  - <xref:int>
- description: 'The group ID for the user Account. The uid and gid properties must
    be specified

    together or not at all. If not specified the underlying operating system picks
    the gid.'
  name: gid
  types:
  - <xref:int>
- description: 'The SSH private key for the user Account. The private key must not
    be

    password protected. The private key is used to automatically configure asymmetric-key
    based

    authentication for SSH between Compute Nodes in a Linux Pool when the Pool''s

    enableInterNodeCommunication property is true (it is ignored if enableInterNodeCommunication
    is

    false). It does this by placing the key pair into the user''s .ssh directory.
    If not specified,

    password-less SSH is not configured between Compute Nodes (no modification of
    the user''s .ssh

    directory is done).'
  name: ssh_private_key
  types:
  - <xref:str>
methods:
- uid: azure.batch.models.LinuxUserConfiguration.as_dict
  name: as_dict
  summary: Return a dict that can be turned into json using json.dump.
  signature: 'as_dict(*, exclude_readonly: bool = False) -> Dict[str, Any]'
  keywordOnlyParameters:
  - name: exclude_readonly
    description: Whether to remove the readonly properties.
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.batch.models.LinuxUserConfiguration.clear
  name: clear
  summary: Remove all items from D.
  signature: clear() -> None
- uid: azure.batch.models.LinuxUserConfiguration.copy
  name: copy
  signature: copy() -> Model
- uid: azure.batch.models.LinuxUserConfiguration.get
  name: get
  summary: 'Get the value for key if key is in the dictionary, else default.

    :param str key: The key to look up.

    :param any default: The value to return if key is not in the dictionary. Defaults
    to None

    :returns: D[k] if k in D, else d.

    :rtype: any'
  signature: 'get(key: str, default: Any = None) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
    defaultValue: None
- uid: azure.batch.models.LinuxUserConfiguration.items
  name: items
  signature: items() -> ItemsView[str, Any]
  return:
    description: set-like object providing a view on D's items
    types:
    - <xref:typing.ItemsView>
- uid: azure.batch.models.LinuxUserConfiguration.keys
  name: keys
  signature: keys() -> KeysView[str]
  return:
    description: a set-like object providing a view on D's keys
    types:
    - <xref:typing.KeysView>
- uid: azure.batch.models.LinuxUserConfiguration.pop
  name: pop
  summary: 'Removes specified key and return the corresponding value.

    :param str key: The key to pop.

    :param any default: The value to return if key is not in the dictionary

    :returns: The value corresponding to the key.

    :rtype: any

    :raises KeyError: If key is not found and default is not given.'
  signature: 'pop(key: str, default: ~typing.Any = <object object>) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
- uid: azure.batch.models.LinuxUserConfiguration.popitem
  name: popitem
  summary: 'Removes and returns some (key, value) pair

    :returns: The (key, value) pair.

    :rtype: tuple

    :raises KeyError: if D is empty.'
  signature: popitem() -> Tuple[str, Any]
- uid: azure.batch.models.LinuxUserConfiguration.setdefault
  name: setdefault
  summary: 'Same as calling D.get(k, d), and setting D[k]=d if k not found

    :param str key: The key to look up.

    :param any default: The value to set if key is not in the dictionary

    :returns: D[k] if k in D, else d.

    :rtype: any'
  signature: 'setdefault(key: str, default: ~typing.Any = <object object>) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
- uid: azure.batch.models.LinuxUserConfiguration.update
  name: update
  summary: 'Updates D from mapping/iterable E and F.

    :param any args: Either a mapping object or an iterable of key-value pairs.'
  signature: 'update(*args: Any, **kwargs: Any) -> None'
- uid: azure.batch.models.LinuxUserConfiguration.values
  name: values
  signature: values() -> ValuesView[Any]
  return:
    description: an object providing a view on D's values
    types:
    - <xref:typing.ValuesView>
attributes:
- uid: azure.batch.models.LinuxUserConfiguration.gid
  name: gid
  summary: 'The group ID for the user Account. The uid and gid properties must be
    specified together or not

    at all. If not specified the underlying operating system picks the gid.'
  signature: 'gid: int | None'
- uid: azure.batch.models.LinuxUserConfiguration.ssh_private_key
  name: ssh_private_key
  summary: 'The SSH private key for the user Account. The private key must not be
    password protected. The

    private key is used to automatically configure asymmetric-key based authentication
    for SSH

    between Compute Nodes in a Linux Pool when the Pool''s enableInterNodeCommunication
    property is

    true (it is ignored if enableInterNodeCommunication is false). It does this by
    placing the key

    pair into the user''s .ssh directory. If not specified, password-less SSH is not
    configured

    between Compute Nodes (no modification of the user''s .ssh directory is done).'
  signature: 'ssh_private_key: str | None'
- uid: azure.batch.models.LinuxUserConfiguration.uid
  name: uid
  summary: 'The user ID of the user Account. The uid and gid properties must be specified
    together or not

    at all. If not specified the underlying operating system picks the uid.'
  signature: 'uid: int | None'
