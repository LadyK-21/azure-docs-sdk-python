### YamlMime:PythonClass
uid: azure.batch.models.BatchJobPreparationAndReleaseTaskStatus
name: BatchJobPreparationAndReleaseTaskStatus
fullName: azure.batch.models.BatchJobPreparationAndReleaseTaskStatus
module: azure.batch.models
summary: The status of the Job Preparation and Job Release Tasks on a Compute Node.
constructor:
  syntax: 'BatchJobPreparationAndReleaseTaskStatus(*args: Any, **kwargs: Any)'
variables:
- description: The ID of the Pool containing the Compute Node to which this entry
    refers.
  name: pool_id
  types:
  - <xref:str>
- description: The ID of the Compute Node to which this entry refers.
  name: node_id
  types:
  - <xref:str>
- description: The URL of the Compute Node to which this entry refers.
  name: node_url
  types:
  - <xref:str>
- description: 'Information about the execution status of the Job

    Preparation Task on this Compute Node.'
  name: job_preparation_task_execution_info
  types:
  - <xref:azure.batch.models.BatchJobPreparationTaskExecutionInfo>
- description: 'Information about the execution status of the Job

    Release Task on this Compute Node. This property is set only if the Job Release
    Task has run on

    the Compute Node.'
  name: job_release_task_execution_info
  types:
  - <xref:azure.batch.models.BatchJobReleaseTaskExecutionInfo>
methods:
- uid: azure.batch.models.BatchJobPreparationAndReleaseTaskStatus.as_dict
  name: as_dict
  summary: Return a dict that can be turned into json using json.dump.
  signature: 'as_dict(*, exclude_readonly: bool = False) -> Dict[str, Any]'
  keywordOnlyParameters:
  - name: exclude_readonly
    description: Whether to remove the readonly properties.
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.batch.models.BatchJobPreparationAndReleaseTaskStatus.clear
  name: clear
  summary: Remove all items from D.
  signature: clear() -> None
- uid: azure.batch.models.BatchJobPreparationAndReleaseTaskStatus.copy
  name: copy
  signature: copy() -> Model
- uid: azure.batch.models.BatchJobPreparationAndReleaseTaskStatus.get
  name: get
  summary: 'Get the value for key if key is in the dictionary, else default.

    :param str key: The key to look up.

    :param any default: The value to return if key is not in the dictionary. Defaults
    to None

    :returns: D[k] if k in D, else d.

    :rtype: any'
  signature: 'get(key: str, default: Any = None) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
    defaultValue: None
- uid: azure.batch.models.BatchJobPreparationAndReleaseTaskStatus.items
  name: items
  signature: items() -> ItemsView[str, Any]
  return:
    description: set-like object providing a view on D's items
    types:
    - <xref:typing.ItemsView>
- uid: azure.batch.models.BatchJobPreparationAndReleaseTaskStatus.keys
  name: keys
  signature: keys() -> KeysView[str]
  return:
    description: a set-like object providing a view on D's keys
    types:
    - <xref:typing.KeysView>
- uid: azure.batch.models.BatchJobPreparationAndReleaseTaskStatus.pop
  name: pop
  summary: 'Removes specified key and return the corresponding value.

    :param str key: The key to pop.

    :param any default: The value to return if key is not in the dictionary

    :returns: The value corresponding to the key.

    :rtype: any

    :raises KeyError: If key is not found and default is not given.'
  signature: 'pop(key: str, default: ~typing.Any = <object object>) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
- uid: azure.batch.models.BatchJobPreparationAndReleaseTaskStatus.popitem
  name: popitem
  summary: 'Removes and returns some (key, value) pair

    :returns: The (key, value) pair.

    :rtype: tuple

    :raises KeyError: if D is empty.'
  signature: popitem() -> Tuple[str, Any]
- uid: azure.batch.models.BatchJobPreparationAndReleaseTaskStatus.setdefault
  name: setdefault
  summary: 'Same as calling D.get(k, d), and setting D[k]=d if k not found

    :param str key: The key to look up.

    :param any default: The value to set if key is not in the dictionary

    :returns: D[k] if k in D, else d.

    :rtype: any'
  signature: 'setdefault(key: str, default: ~typing.Any = <object object>) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
- uid: azure.batch.models.BatchJobPreparationAndReleaseTaskStatus.update
  name: update
  summary: 'Updates D from mapping/iterable E and F.

    :param any args: Either a mapping object or an iterable of key-value pairs.'
  signature: 'update(*args: Any, **kwargs: Any) -> None'
- uid: azure.batch.models.BatchJobPreparationAndReleaseTaskStatus.values
  name: values
  signature: values() -> ValuesView[Any]
  return:
    description: an object providing a view on D's values
    types:
    - <xref:typing.ValuesView>
attributes:
- uid: azure.batch.models.BatchJobPreparationAndReleaseTaskStatus.job_preparation_task_execution_info
  name: job_preparation_task_execution_info
  summary: Information about the execution status of the Job Preparation Task on this
    Compute Node.
  signature: 'job_preparation_task_execution_info: _models.BatchJobPreparationTaskExecutionInfo
    | None'
- uid: azure.batch.models.BatchJobPreparationAndReleaseTaskStatus.job_release_task_execution_info
  name: job_release_task_execution_info
  summary: 'Information about the execution status of the Job Release Task on this
    Compute Node. This

    property is set only if the Job Release Task has run on the Compute Node.'
  signature: 'job_release_task_execution_info: _models.BatchJobReleaseTaskExecutionInfo
    | None'
- uid: azure.batch.models.BatchJobPreparationAndReleaseTaskStatus.node_id
  name: node_id
  summary: The ID of the Compute Node to which this entry refers.
  signature: 'node_id: str | None'
- uid: azure.batch.models.BatchJobPreparationAndReleaseTaskStatus.node_url
  name: node_url
  summary: The URL of the Compute Node to which this entry refers.
  signature: 'node_url: str | None'
- uid: azure.batch.models.BatchJobPreparationAndReleaseTaskStatus.pool_id
  name: pool_id
  summary: The ID of the Pool containing the Compute Node to which this entry refers.
  signature: 'pool_id: str | None'
