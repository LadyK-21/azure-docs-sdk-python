### YamlMime:PythonClass
uid: azure.batch.models.BatchJobNetworkConfiguration
name: BatchJobNetworkConfiguration
fullName: azure.batch.models.BatchJobNetworkConfiguration
module: azure.batch.models
summary: The network configuration for the Job.
constructor:
  syntax: 'BatchJobNetworkConfiguration(*args: Any, **kwargs: Any)'
variables:
- description: 'The ARM resource identifier of the virtual network subnet which Compute
    Nodes

    running Tasks from the Job will join for the duration of the Task. The virtual
    network must be

    in the same region and subscription as the Azure Batch Account. The specified
    subnet should

    have enough free IP addresses to accommodate the number of Compute Nodes which
    will run Tasks

    from the Job. This can be up to the number of Compute Nodes in the Pool. The

    ''MicrosoftAzureBatch'' service principal must have the ''Classic Virtual Machine
    Contributor''

    Role-Based Access Control (RBAC) role for the specified VNet so that Azure Batch
    service can

    schedule Tasks on the Nodes. This can be verified by checking if the specified
    VNet has any

    associated Network Security Groups (NSG). If communication to the Nodes in the
    specified subnet

    is denied by an NSG, then the Batch service will set the state of the Compute
    Nodes to

    unusable. This is of the form

    /subscriptions/{subscription}/resourceGroups/{group}/providers/{provider}/virtualNetworks/{network}/subnets/{subnet}.

    If the specified VNet has any associated Network Security Groups (NSG), then a
    few reserved

    system ports must be enabled for inbound communication from the Azure Batch service.
    For Pools

    created with a Virtual Machine configuration, enable ports 29876 and 29877, as
    well as port 22

    for Linux and port 3389 for Windows. Port 443 is also required to be open for
    outbound

    connections for communications to Azure Storage. For more details see:

    [https://learn.microsoft.com/azure/batch/batch-api-basics#virtual-network-vnet-and-firewall-configuration](https://learn.microsoft.com/azure/batch/batch-api-basics#virtual-network-vnet-and-firewall-configuration).

    Required.'
  name: subnet_id
  types:
  - <xref:str>
- description: 'Whether to withdraw Compute Nodes from the virtual network to

    DNC when the job is terminated or deleted.  If true, nodes will remain joined
    to the virtual

    network to DNC. If false, nodes will automatically withdraw when the job ends.
    Defaults to

    false. Required.'
  name: skip_withdraw_from_v_net
  types:
  - <xref:bool>
methods:
- uid: azure.batch.models.BatchJobNetworkConfiguration.as_dict
  name: as_dict
  summary: Return a dict that can be turned into json using json.dump.
  signature: 'as_dict(*, exclude_readonly: bool = False) -> Dict[str, Any]'
  keywordOnlyParameters:
  - name: exclude_readonly
    description: Whether to remove the readonly properties.
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.batch.models.BatchJobNetworkConfiguration.clear
  name: clear
  summary: Remove all items from D.
  signature: clear() -> None
- uid: azure.batch.models.BatchJobNetworkConfiguration.copy
  name: copy
  signature: copy() -> Model
- uid: azure.batch.models.BatchJobNetworkConfiguration.get
  name: get
  summary: 'Get the value for key if key is in the dictionary, else default.

    :param str key: The key to look up.

    :param any default: The value to return if key is not in the dictionary. Defaults
    to None

    :returns: D[k] if k in D, else d.

    :rtype: any'
  signature: 'get(key: str, default: Any = None) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
    defaultValue: None
- uid: azure.batch.models.BatchJobNetworkConfiguration.items
  name: items
  signature: items() -> ItemsView[str, Any]
  return:
    description: set-like object providing a view on D's items
    types:
    - <xref:typing.ItemsView>
- uid: azure.batch.models.BatchJobNetworkConfiguration.keys
  name: keys
  signature: keys() -> KeysView[str]
  return:
    description: a set-like object providing a view on D's keys
    types:
    - <xref:typing.KeysView>
- uid: azure.batch.models.BatchJobNetworkConfiguration.pop
  name: pop
  summary: 'Removes specified key and return the corresponding value.

    :param str key: The key to pop.

    :param any default: The value to return if key is not in the dictionary

    :returns: The value corresponding to the key.

    :rtype: any

    :raises KeyError: If key is not found and default is not given.'
  signature: 'pop(key: str, default: ~typing.Any = <object object>) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
- uid: azure.batch.models.BatchJobNetworkConfiguration.popitem
  name: popitem
  summary: 'Removes and returns some (key, value) pair

    :returns: The (key, value) pair.

    :rtype: tuple

    :raises KeyError: if D is empty.'
  signature: popitem() -> Tuple[str, Any]
- uid: azure.batch.models.BatchJobNetworkConfiguration.setdefault
  name: setdefault
  summary: 'Same as calling D.get(k, d), and setting D[k]=d if k not found

    :param str key: The key to look up.

    :param any default: The value to set if key is not in the dictionary

    :returns: D[k] if k in D, else d.

    :rtype: any'
  signature: 'setdefault(key: str, default: ~typing.Any = <object object>) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
- uid: azure.batch.models.BatchJobNetworkConfiguration.update
  name: update
  summary: 'Updates D from mapping/iterable E and F.

    :param any args: Either a mapping object or an iterable of key-value pairs.'
  signature: 'update(*args: Any, **kwargs: Any) -> None'
- uid: azure.batch.models.BatchJobNetworkConfiguration.values
  name: values
  signature: values() -> ValuesView[Any]
  return:
    description: an object providing a view on D's values
    types:
    - <xref:typing.ValuesView>
attributes:
- uid: azure.batch.models.BatchJobNetworkConfiguration.skip_withdraw_from_v_net
  name: skip_withdraw_from_v_net
  summary: 'Whether to withdraw Compute Nodes from the virtual network to DNC when
    the job is terminated or

    deleted.  If true, nodes will remain joined to the virtual network to DNC. If
    false, nodes will

    automatically withdraw when the job ends. Defaults to false. Required.'
  signature: 'skip_withdraw_from_v_net: bool'
- uid: azure.batch.models.BatchJobNetworkConfiguration.subnet_id
  name: subnet_id
  summary: 'The ARM resource identifier of the virtual network subnet which Compute
    Nodes running Tasks

    from the Job will join for the duration of the Task. The virtual network must
    be in the same

    region and subscription as the Azure Batch Account. The specified subnet should
    have enough

    free IP addresses to accommodate the number of Compute Nodes which will run Tasks
    from the Job.

    This can be up to the number of Compute Nodes in the Pool. The ''MicrosoftAzureBatch''
    service

    principal must have the ''Classic Virtual Machine Contributor'' Role-Based Access
    Control (RBAC)

    role for the specified VNet so that Azure Batch service can schedule Tasks on
    the Nodes. This

    can be verified by checking if the specified VNet has any associated Network Security
    Groups

    (NSG). If communication to the Nodes in the specified subnet is denied by an NSG,
    then the

    Batch service will set the state of the Compute Nodes to unusable. This is of
    the form

    /subscriptions/{subscription}/resourceGroups/{group}/providers/{provider}/virtualNetworks/{network}/subnets/{subnet}.

    If the specified VNet has any associated Network Security Groups (NSG), then a
    few reserved

    system ports must be enabled for inbound communication from the Azure Batch service.
    For Pools

    created with a Virtual Machine configuration, enable ports 29876 and 29877, as
    well as port 22

    for Linux and port 3389 for Windows. Port 443 is also required to be open for
    outbound

    connections for communications to Azure Storage. For more details see:

    [https://learn.microsoft.com/azure/batch/batch-api-basics#virtual-network-vnet-and-firewall-configuration](https://learn.microsoft.com/azure/batch/batch-api-basics#virtual-network-vnet-and-firewall-configuration).

    Required.'
  signature: 'subnet_id: str'
