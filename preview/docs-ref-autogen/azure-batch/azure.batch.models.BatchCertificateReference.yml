### YamlMime:PythonClass
uid: azure.batch.models.BatchCertificateReference
name: BatchCertificateReference
fullName: azure.batch.models.BatchCertificateReference
module: azure.batch.models
summary: 'A reference to a Certificate to be installed on Compute Nodes in a Pool.
  Warning: This object

  is deprecated and will be removed after February, 2024. Please use the [Azure KeyVault

  Extension](https://learn.microsoft.com/azure/batch/batch-certificate-migration-guide)

  instead.'
constructor:
  syntax: 'BatchCertificateReference(*args: Any, **kwargs: Any)'
variables:
- description: The thumbprint of the Certificate. Required.
  name: thumbprint
  types:
  - <xref:str>
- description: 'The algorithm with which the thumbprint is associated. This must be

    sha1. Required.'
  name: thumbprint_algorithm
  types:
  - <xref:str>
- description: 'The location of the Certificate store on the Compute Node into which
    to

    install the Certificate. The default value is currentuser. This property is applicable
    only for

    Pools configured with Windows Compute Nodes (that is, created with cloudServiceConfiguration,

    or with virtualMachineConfiguration using a Windows Image reference). For Linux
    Compute Nodes,

    the Certificates are stored in a directory inside the Task working directory and
    an environment

    variable AZ_BATCH_CERTIFICATES_DIR is supplied to the Task to query for this location.
    For

    Certificates with visibility of ''remoteUser'', a ''certs'' directory is created
    in the user''s home

    directory (e.g., /home/{user-name}/certs) and Certificates are placed in that
    directory. Known

    values are: "currentuser" and "localmachine".'
  name: store_location
  types:
  - <xref:str>
  - <xref:azure.batch.models.BatchCertificateStoreLocation>
- description: 'The name of the Certificate store on the Compute Node into which to
    install

    the Certificate. This property is applicable only for Pools configured with Windows
    Compute

    Nodes (that is, created with cloudServiceConfiguration, or with virtualMachineConfiguration

    using a Windows Image reference). Common store names include: My, Root, CA, Trust,
    Disallowed,

    TrustedPeople, TrustedPublisher, AuthRoot, AddressBook, but any custom store name
    can also be

    used. The default value is My.'
  name: store_name
  types:
  - <xref:str>
- description: 'Which user Accounts on the Compute Node should have access to the
    private

    data of the Certificate. You can specify more than one visibility in this collection.
    The

    default is all Accounts.'
  name: visibility
  types:
  - <xref:list>[<xref:str>
  - <xref:azure.batch.models.BatchCertificateVisibility>]
methods:
- uid: azure.batch.models.BatchCertificateReference.as_dict
  name: as_dict
  summary: Return a dict that can be turned into json using json.dump.
  signature: 'as_dict(*, exclude_readonly: bool = False) -> Dict[str, Any]'
  keywordOnlyParameters:
  - name: exclude_readonly
    description: Whether to remove the readonly properties.
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.batch.models.BatchCertificateReference.clear
  name: clear
  summary: Remove all items from D.
  signature: clear() -> None
- uid: azure.batch.models.BatchCertificateReference.copy
  name: copy
  signature: copy() -> Model
- uid: azure.batch.models.BatchCertificateReference.get
  name: get
  summary: 'Get the value for key if key is in the dictionary, else default.

    :param str key: The key to look up.

    :param any default: The value to return if key is not in the dictionary. Defaults
    to None

    :returns: D[k] if k in D, else d.

    :rtype: any'
  signature: 'get(key: str, default: Any = None) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
    defaultValue: None
- uid: azure.batch.models.BatchCertificateReference.items
  name: items
  signature: items() -> ItemsView[str, Any]
  return:
    description: set-like object providing a view on D's items
    types:
    - <xref:typing.ItemsView>
- uid: azure.batch.models.BatchCertificateReference.keys
  name: keys
  signature: keys() -> KeysView[str]
  return:
    description: a set-like object providing a view on D's keys
    types:
    - <xref:typing.KeysView>
- uid: azure.batch.models.BatchCertificateReference.pop
  name: pop
  summary: 'Removes specified key and return the corresponding value.

    :param str key: The key to pop.

    :param any default: The value to return if key is not in the dictionary

    :returns: The value corresponding to the key.

    :rtype: any

    :raises KeyError: If key is not found and default is not given.'
  signature: 'pop(key: str, default: ~typing.Any = <object object>) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
- uid: azure.batch.models.BatchCertificateReference.popitem
  name: popitem
  summary: 'Removes and returns some (key, value) pair

    :returns: The (key, value) pair.

    :rtype: tuple

    :raises KeyError: if D is empty.'
  signature: popitem() -> Tuple[str, Any]
- uid: azure.batch.models.BatchCertificateReference.setdefault
  name: setdefault
  summary: 'Same as calling D.get(k, d), and setting D[k]=d if k not found

    :param str key: The key to look up.

    :param any default: The value to set if key is not in the dictionary

    :returns: D[k] if k in D, else d.

    :rtype: any'
  signature: 'setdefault(key: str, default: ~typing.Any = <object object>) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
- uid: azure.batch.models.BatchCertificateReference.update
  name: update
  summary: 'Updates D from mapping/iterable E and F.

    :param any args: Either a mapping object or an iterable of key-value pairs.'
  signature: 'update(*args: Any, **kwargs: Any) -> None'
- uid: azure.batch.models.BatchCertificateReference.values
  name: values
  signature: values() -> ValuesView[Any]
  return:
    description: an object providing a view on D's values
    types:
    - <xref:typing.ValuesView>
attributes:
- uid: azure.batch.models.BatchCertificateReference.store_location
  name: store_location
  summary: 'The location of the Certificate store on the Compute Node into which to
    install the

    Certificate. The default value is currentuser. This property is applicable only
    for Pools

    configured with Windows Compute Nodes (that is, created with cloudServiceConfiguration,
    or with

    virtualMachineConfiguration using a Windows Image reference). For Linux Compute
    Nodes, the

    Certificates are stored in a directory inside the Task working directory and an
    environment

    variable AZ_BATCH_CERTIFICATES_DIR is supplied to the Task to query for this location.
    For

    Certificates with visibility of ''remoteUser'', a ''certs'' directory is created
    in the user''s home

    directory (e.g., /home/{user-name}/certs) and Certificates are placed in that
    directory. Known

    values are: "currentuser" and "localmachine".'
  signature: 'store_location: str | _models.BatchCertificateStoreLocation | None'
- uid: azure.batch.models.BatchCertificateReference.store_name
  name: store_name
  summary: 'The name of the Certificate store on the Compute Node into which to install
    the Certificate.

    This property is applicable only for Pools configured with Windows Compute Nodes
    (that is,

    created with cloudServiceConfiguration, or with virtualMachineConfiguration using
    a Windows

    Image reference). Common store names include: My, Root, CA, Trust, Disallowed,
    TrustedPeople,

    TrustedPublisher, AuthRoot, AddressBook, but any custom store name can also be
    used. The

    default value is My.'
  signature: 'store_name: str | None'
- uid: azure.batch.models.BatchCertificateReference.thumbprint
  name: thumbprint
  summary: The thumbprint of the Certificate. Required.
  signature: 'thumbprint: str'
- uid: azure.batch.models.BatchCertificateReference.thumbprint_algorithm
  name: thumbprint_algorithm
  summary: The algorithm with which the thumbprint is associated. This must be sha1.
    Required.
  signature: 'thumbprint_algorithm: str'
- uid: azure.batch.models.BatchCertificateReference.visibility
  name: visibility
  summary: 'Which user Accounts on the Compute Node should have access to the private
    data of the

    Certificate. You can specify more than one visibility in this collection. The
    default is all

    Accounts.'
  signature: 'visibility: List[str | _models.BatchCertificateVisibility] | None'
