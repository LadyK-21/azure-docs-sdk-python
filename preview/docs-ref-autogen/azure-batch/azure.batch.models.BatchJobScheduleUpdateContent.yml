### YamlMime:PythonClass
uid: azure.batch.models.BatchJobScheduleUpdateContent
name: BatchJobScheduleUpdateContent
fullName: azure.batch.models.BatchJobScheduleUpdateContent
module: azure.batch.models
summary: Parameters for updating an Azure Batch Job Schedule.
constructor:
  syntax: 'BatchJobScheduleUpdateContent(*args: Any, **kwargs: Any)'
variables:
- description: 'The schedule according to which Jobs will be created. All times are
    fixed

    respective to UTC and are not impacted by daylight saving time. If you do not
    specify this

    element, the existing schedule is left unchanged.'
  name: schedule
  types:
  - <xref:azure.batch.models.BatchJobScheduleConfiguration>
- description: 'The details of the Jobs to be created on this schedule. Updates affect

    only Jobs that are started after the update has taken place. Any currently active
    Job continues

    with the older specification.'
  name: job_specification
  types:
  - <xref:azure.batch.models.BatchJobSpecification>
- description: 'A list of name-value pairs associated with the Job Schedule as metadata.
    If you

    do not specify this element, existing metadata is left unchanged.'
  name: metadata
  types:
  - <xref:list>[<xref:azure.batch.models.MetadataItem>]
methods:
- uid: azure.batch.models.BatchJobScheduleUpdateContent.as_dict
  name: as_dict
  summary: Return a dict that can be turned into json using json.dump.
  signature: 'as_dict(*, exclude_readonly: bool = False) -> Dict[str, Any]'
  keywordOnlyParameters:
  - name: exclude_readonly
    description: Whether to remove the readonly properties.
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.batch.models.BatchJobScheduleUpdateContent.clear
  name: clear
  summary: Remove all items from D.
  signature: clear() -> None
- uid: azure.batch.models.BatchJobScheduleUpdateContent.copy
  name: copy
  signature: copy() -> Model
- uid: azure.batch.models.BatchJobScheduleUpdateContent.get
  name: get
  summary: 'Get the value for key if key is in the dictionary, else default.

    :param str key: The key to look up.

    :param any default: The value to return if key is not in the dictionary. Defaults
    to None

    :returns: D[k] if k in D, else d.

    :rtype: any'
  signature: 'get(key: str, default: Any = None) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
    defaultValue: None
- uid: azure.batch.models.BatchJobScheduleUpdateContent.items
  name: items
  signature: items() -> ItemsView[str, Any]
  return:
    description: set-like object providing a view on D's items
    types:
    - <xref:typing.ItemsView>
- uid: azure.batch.models.BatchJobScheduleUpdateContent.keys
  name: keys
  signature: keys() -> KeysView[str]
  return:
    description: a set-like object providing a view on D's keys
    types:
    - <xref:typing.KeysView>
- uid: azure.batch.models.BatchJobScheduleUpdateContent.pop
  name: pop
  summary: 'Removes specified key and return the corresponding value.

    :param str key: The key to pop.

    :param any default: The value to return if key is not in the dictionary

    :returns: The value corresponding to the key.

    :rtype: any

    :raises KeyError: If key is not found and default is not given.'
  signature: 'pop(key: str, default: ~typing.Any = <object object>) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
- uid: azure.batch.models.BatchJobScheduleUpdateContent.popitem
  name: popitem
  summary: 'Removes and returns some (key, value) pair

    :returns: The (key, value) pair.

    :rtype: tuple

    :raises KeyError: if D is empty.'
  signature: popitem() -> Tuple[str, Any]
- uid: azure.batch.models.BatchJobScheduleUpdateContent.setdefault
  name: setdefault
  summary: 'Same as calling D.get(k, d), and setting D[k]=d if k not found

    :param str key: The key to look up.

    :param any default: The value to set if key is not in the dictionary

    :returns: D[k] if k in D, else d.

    :rtype: any'
  signature: 'setdefault(key: str, default: ~typing.Any = <object object>) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
- uid: azure.batch.models.BatchJobScheduleUpdateContent.update
  name: update
  summary: 'Updates D from mapping/iterable E and F.

    :param any args: Either a mapping object or an iterable of key-value pairs.'
  signature: 'update(*args: Any, **kwargs: Any) -> None'
- uid: azure.batch.models.BatchJobScheduleUpdateContent.values
  name: values
  signature: values() -> ValuesView[Any]
  return:
    description: an object providing a view on D's values
    types:
    - <xref:typing.ValuesView>
attributes:
- uid: azure.batch.models.BatchJobScheduleUpdateContent.job_specification
  name: job_specification
  summary: 'The details of the Jobs to be created on this schedule. Updates affect
    only Jobs that are

    started after the update has taken place. Any currently active Job continues with
    the older

    specification.'
  signature: 'job_specification: _models.BatchJobSpecification | None'
- uid: azure.batch.models.BatchJobScheduleUpdateContent.metadata
  name: metadata
  summary: 'A list of name-value pairs associated with the Job Schedule as metadata.
    If you do not specify

    this element, existing metadata is left unchanged.'
  signature: 'metadata: List[_models.MetadataItem] | None'
- uid: azure.batch.models.BatchJobScheduleUpdateContent.schedule
  name: schedule
  summary: 'The schedule according to which Jobs will be created. All times are fixed
    respective to UTC and

    are not impacted by daylight saving time. If you do not specify this element,
    the existing

    schedule is left unchanged.'
  signature: 'schedule: _models.BatchJobScheduleConfiguration | None'
