### YamlMime:PythonClass
uid: azure.batch.models.CreateTasksError
name: CreateTasksError
fullName: azure.batch.models.CreateTasksError
module: azure.batch.models
summary: Aggregate Exception containing details for any failures from a task add operation.
constructor:
  syntax: CreateTasksError(pending_tasks=[], failure_tasks=[], errors=[])
  parameters:
  - name: message
    description: Error message describing exit reason
    isRequired: true
    types:
    - <xref:str>
  - name: pending_tasks
    description: List of tasks remaining to be submitted.
    defaultValue: '[]'
    types:
    - '[<xref:TaskAddParameter>]'
  - name: failure_tasks
    description: List of tasks which failed to add
    defaultValue: '[]'
    types:
    - '[<xref:TaskAddResult>]'
  - name: errors
    description: List of unknown errors forcing early termination
    defaultValue: '[]'
    types:
    - '[<xref:Exception>]'
methods:
- uid: azure.batch.models.CreateTasksError.add_note
  name: add_note
  summary: "Exception.add_note(note) \u2013\nadd a note to the exception"
  signature: add_note()
- uid: azure.batch.models.CreateTasksError.raise_with_traceback
  name: raise_with_traceback
  summary: 'Raise the exception with the existing traceback.


    *Deprecated since version 1.22.0:* This method is deprecated as we don''t support
    Python 2 anymore. Use raise/from instead.'
  signature: raise_with_traceback() -> None
- uid: azure.batch.models.CreateTasksError.with_traceback
  name: with_traceback
  summary: "Exception.with_traceback(tb) \u2013\nset self.__traceback__ to tb and\
    \ return self."
  signature: with_traceback()
attributes:
- uid: azure.batch.models.CreateTasksError.args
  name: args
