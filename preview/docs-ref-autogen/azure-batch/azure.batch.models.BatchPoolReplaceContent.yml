### YamlMime:PythonClass
uid: azure.batch.models.BatchPoolReplaceContent
name: BatchPoolReplaceContent
fullName: azure.batch.models.BatchPoolReplaceContent
module: azure.batch.models
summary: Parameters for replacing properties on an Azure Batch Pool.
constructor:
  syntax: 'BatchPoolReplaceContent(*args: Any, **kwargs: Any)'
variables:
- description: 'A Task to run on each Compute Node as it joins the Pool. The Task
    runs when

    the Compute Node is added to the Pool or when the Compute Node is restarted. If
    this element is

    present, it overwrites any existing StartTask. If omitted, any existing StartTask
    is removed

    from the Pool.'
  name: start_task
  types:
  - <xref:azure.batch.models.BatchStartTask>
- description: 'This list replaces any existing Certificate references configured

    on the Pool.

    If you specify an empty collection, any existing Certificate references are removed
    from the

    Pool.

    For Windows Nodes, the Batch service installs the Certificates to the specified
    Certificate

    store and location.

    For Linux Compute Nodes, the Certificates are stored in a directory inside the
    Task working

    directory and an environment variable AZ_BATCH_CERTIFICATES_DIR is supplied to
    the Task to

    query for this location.

    For Certificates with visibility of ''remoteUser'', a ''certs'' directory is created
    in the user''s

    home directory (e.g., /home/{user-name}/certs) and Certificates are placed in
    that directory.

    Warning: This property is deprecated and will be removed after February, 2024.
    Please use the

    [Azure KeyVault Extension](https://learn.microsoft.com/azure/batch/batch-certificate-migration-guide)
    instead.

    Required.'
  name: certificate_references
  types:
  - <xref:list>[<xref:azure.batch.models.BatchCertificateReference>]
- description: 'The list of Application Packages to be installed on each

    Compute Node in the Pool. The list replaces any existing Application Package references
    on the

    Pool. Changes to Application Package references affect all new Compute Nodes joining
    the Pool,

    but do not affect Compute Nodes that are already in the Pool until they are rebooted
    or

    reimaged. There is a maximum of 10 Application Package references on any given
    Pool. If

    omitted, or if you specify an empty collection, any existing Application Packages
    references

    are removed from the Pool. A maximum of 10 references may be specified on a given
    Pool.

    Required.'
  name: application_package_references
  types:
  - <xref:list>[<xref:azure.batch.models.BatchApplicationPackageReference>]
- description: 'A list of name-value pairs associated with the Pool as metadata. This
    list

    replaces any existing metadata configured on the Pool. If omitted, or if you specify
    an empty

    collection, any existing metadata is removed from the Pool. Required.'
  name: metadata
  types:
  - <xref:list>[<xref:azure.batch.models.MetadataItem>]
- description: 'The desired node communication mode for the pool. This

    setting replaces any existing targetNodeCommunication setting on the Pool. If
    omitted, the

    existing setting is default. Known values are: "default", "classic", and "simplified".'
  name: target_node_communication_mode
  types:
  - <xref:str>
  - <xref:azure.batch.models.BatchNodeCommunicationMode>
methods:
- uid: azure.batch.models.BatchPoolReplaceContent.as_dict
  name: as_dict
  summary: Return a dict that can be turned into json using json.dump.
  signature: 'as_dict(*, exclude_readonly: bool = False) -> Dict[str, Any]'
  keywordOnlyParameters:
  - name: exclude_readonly
    description: Whether to remove the readonly properties.
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.batch.models.BatchPoolReplaceContent.clear
  name: clear
  summary: Remove all items from D.
  signature: clear() -> None
- uid: azure.batch.models.BatchPoolReplaceContent.copy
  name: copy
  signature: copy() -> Model
- uid: azure.batch.models.BatchPoolReplaceContent.get
  name: get
  summary: 'Get the value for key if key is in the dictionary, else default.

    :param str key: The key to look up.

    :param any default: The value to return if key is not in the dictionary. Defaults
    to None

    :returns: D[k] if k in D, else d.

    :rtype: any'
  signature: 'get(key: str, default: Any = None) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
    defaultValue: None
- uid: azure.batch.models.BatchPoolReplaceContent.items
  name: items
  signature: items() -> ItemsView[str, Any]
  return:
    description: set-like object providing a view on D's items
    types:
    - <xref:typing.ItemsView>
- uid: azure.batch.models.BatchPoolReplaceContent.keys
  name: keys
  signature: keys() -> KeysView[str]
  return:
    description: a set-like object providing a view on D's keys
    types:
    - <xref:typing.KeysView>
- uid: azure.batch.models.BatchPoolReplaceContent.pop
  name: pop
  summary: 'Removes specified key and return the corresponding value.

    :param str key: The key to pop.

    :param any default: The value to return if key is not in the dictionary

    :returns: The value corresponding to the key.

    :rtype: any

    :raises KeyError: If key is not found and default is not given.'
  signature: 'pop(key: str, default: ~typing.Any = <object object>) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
- uid: azure.batch.models.BatchPoolReplaceContent.popitem
  name: popitem
  summary: 'Removes and returns some (key, value) pair

    :returns: The (key, value) pair.

    :rtype: tuple

    :raises KeyError: if D is empty.'
  signature: popitem() -> Tuple[str, Any]
- uid: azure.batch.models.BatchPoolReplaceContent.setdefault
  name: setdefault
  summary: 'Same as calling D.get(k, d), and setting D[k]=d if k not found

    :param str key: The key to look up.

    :param any default: The value to set if key is not in the dictionary

    :returns: D[k] if k in D, else d.

    :rtype: any'
  signature: 'setdefault(key: str, default: ~typing.Any = <object object>) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
- uid: azure.batch.models.BatchPoolReplaceContent.update
  name: update
  summary: 'Updates D from mapping/iterable E and F.

    :param any args: Either a mapping object or an iterable of key-value pairs.'
  signature: 'update(*args: Any, **kwargs: Any) -> None'
- uid: azure.batch.models.BatchPoolReplaceContent.values
  name: values
  signature: values() -> ValuesView[Any]
  return:
    description: an object providing a view on D's values
    types:
    - <xref:typing.ValuesView>
attributes:
- uid: azure.batch.models.BatchPoolReplaceContent.application_package_references
  name: application_package_references
  summary: 'The list of Application Packages to be installed on each Compute Node
    in the Pool. The list

    replaces any existing Application Package references on the Pool. Changes to Application

    Package references affect all new Compute Nodes joining the Pool, but do not affect
    Compute

    Nodes that are already in the Pool until they are rebooted or reimaged. There
    is a maximum of

    10 Application Package references on any given Pool. If omitted, or if you specify
    an empty

    collection, any existing Application Packages references are removed from the
    Pool. A maximum

    of 10 references may be specified on a given Pool. Required.'
  signature: 'application_package_references: List[_models.BatchApplicationPackageReference]'
- uid: azure.batch.models.BatchPoolReplaceContent.certificate_references
  name: certificate_references
  summary: 'This list replaces any existing Certificate references configured on the
    Pool.

    If you specify an empty collection, any existing Certificate references are removed
    from the

    Pool.

    For Windows Nodes, the Batch service installs the Certificates to the specified
    Certificate

    store and location.

    For Linux Compute Nodes, the Certificates are stored in a directory inside the
    Task working

    directory and an environment variable AZ_BATCH_CERTIFICATES_DIR is supplied to
    the Task to

    query for this location.

    For Certificates with visibility of ''remoteUser'', a ''certs'' directory is created
    in the user''s

    home directory (e.g., /home/{user-name}/certs) and Certificates are placed in
    that directory.

    Warning: This property is deprecated and will be removed after February, 2024.
    Please use the

    [Azure KeyVault Extension](https://learn.microsoft.com/azure/batch/batch-certificate-migration-guide)
    instead.

    Required.'
  signature: 'certificate_references: List[_models.BatchCertificateReference]'
- uid: azure.batch.models.BatchPoolReplaceContent.metadata
  name: metadata
  summary: 'A list of name-value pairs associated with the Pool as metadata. This
    list replaces any

    existing metadata configured on the Pool. If omitted, or if you specify an empty
    collection,

    any existing metadata is removed from the Pool. Required.'
  signature: 'metadata: List[_models.MetadataItem]'
- uid: azure.batch.models.BatchPoolReplaceContent.start_task
  name: start_task
  summary: 'A Task to run on each Compute Node as it joins the Pool. The Task runs
    when the Compute Node is

    added to the Pool or when the Compute Node is restarted. If this element is present,
    it

    overwrites any existing StartTask. If omitted, any existing StartTask is removed
    from the Pool.'
  signature: 'start_task: _models.BatchStartTask | None'
- uid: azure.batch.models.BatchPoolReplaceContent.target_node_communication_mode
  name: target_node_communication_mode
  summary: 'The desired node communication mode for the pool. This setting replaces
    any existing

    targetNodeCommunication setting on the Pool. If omitted, the existing setting
    is default. Known

    values are: "default", "classic", and "simplified".'
  signature: 'target_node_communication_mode: str | _models.BatchNodeCommunicationMode
    | None'
