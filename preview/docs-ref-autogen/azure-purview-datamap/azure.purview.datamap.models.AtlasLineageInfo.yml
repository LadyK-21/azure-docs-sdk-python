### YamlMime:PythonClass
uid: azure.purview.datamap.models.AtlasLineageInfo
name: AtlasLineageInfo
fullName: azure.purview.datamap.models.AtlasLineageInfo
module: azure.purview.datamap.models
summary: The lineage information.
constructor:
  syntax: 'AtlasLineageInfo(*args: Any, **kwargs: Any)'
variables:
- description: The GUID of the base entity.
  name: base_entity_guid
  types:
  - <xref:str>
- description: The GUID entity map.
  name: guid_entity_map
  types:
  - <xref:dict>[<xref:str>, <xref:azure.purview.datamap.models.AtlasEntityHeader>]
- description: The entity count in specific direction.
  name: width_counts
  types:
  - <xref:dict>[<xref:str>, <xref:dict>[<xref:str>, <xref:any>]]
- description: The depth of lineage.
  name: lineage_depth
  types:
  - <xref:int>
- description: The width of lineage.
  name: lineage_width
  types:
  - <xref:int>
- description: The number of children node.
  name: children_count
  types:
  - <xref:int>
- description: 'The enum of lineage direction. Known values are: "INPUT", "OUTPUT",

    and "BOTH".'
  name: lineage_direction
  types:
  - <xref:str>
  - <xref:azure.purview.datamap.models.LineageDirection>
- description: An array of parentRelations relations.
  name: parent_relations
  types:
  - <xref:list>[<xref:azure.purview.datamap.models.ParentRelation>]
- description: An array of lineage relations.
  name: relations
  types:
  - <xref:list>[<xref:azure.purview.datamap.models.LineageRelation>]
methods:
- uid: azure.purview.datamap.models.AtlasLineageInfo.as_dict
  name: as_dict
  summary: Return a dict that can be turned into json using json.dump.
  signature: 'as_dict(*, exclude_readonly: bool = False) -> Dict[str, Any]'
  keywordOnlyParameters:
  - name: exclude_readonly
    description: Whether to remove the readonly properties.
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.purview.datamap.models.AtlasLineageInfo.clear
  name: clear
  summary: Remove all items from D.
  signature: clear() -> None
- uid: azure.purview.datamap.models.AtlasLineageInfo.copy
  name: copy
  signature: copy() -> Model
- uid: azure.purview.datamap.models.AtlasLineageInfo.get
  name: get
  summary: 'Get the value for key if key is in the dictionary, else default.

    :param str key: The key to look up.

    :param any default: The value to return if key is not in the dictionary. Defaults
    to None

    :returns: D[k] if k in D, else d.

    :rtype: any'
  signature: 'get(key: str, default: Any = None) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
    defaultValue: None
- uid: azure.purview.datamap.models.AtlasLineageInfo.items
  name: items
  signature: items() -> ItemsView[str, Any]
  return:
    description: set-like object providing a view on D's items
    types:
    - <xref:typing.ItemsView>
- uid: azure.purview.datamap.models.AtlasLineageInfo.keys
  name: keys
  signature: keys() -> KeysView[str]
  return:
    description: a set-like object providing a view on D's keys
    types:
    - <xref:typing.KeysView>
- uid: azure.purview.datamap.models.AtlasLineageInfo.pop
  name: pop
  summary: 'Removes specified key and return the corresponding value.

    :param str key: The key to pop.

    :param any default: The value to return if key is not in the dictionary

    :returns: The value corresponding to the key.

    :rtype: any

    :raises KeyError: If key is not found and default is not given.'
  signature: 'pop(key: str, default: ~typing.Any = <object object>) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
- uid: azure.purview.datamap.models.AtlasLineageInfo.popitem
  name: popitem
  summary: 'Removes and returns some (key, value) pair

    :returns: The (key, value) pair.

    :rtype: tuple

    :raises KeyError: if D is empty.'
  signature: popitem() -> Tuple[str, Any]
- uid: azure.purview.datamap.models.AtlasLineageInfo.setdefault
  name: setdefault
  summary: 'Same as calling D.get(k, d), and setting D[k]=d if k not found

    :param str key: The key to look up.

    :param any default: The value to set if key is not in the dictionary

    :returns: D[k] if k in D, else d.

    :rtype: any'
  signature: 'setdefault(key: str, default: ~typing.Any = <object object>) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
- uid: azure.purview.datamap.models.AtlasLineageInfo.update
  name: update
  summary: 'Updates D from mapping/iterable E and F.

    :param any args: Either a mapping object or an iterable of key-value pairs.'
  signature: 'update(*args: Any, **kwargs: Any) -> None'
- uid: azure.purview.datamap.models.AtlasLineageInfo.values
  name: values
  signature: values() -> ValuesView[Any]
  return:
    description: an object providing a view on D's values
    types:
    - <xref:typing.ValuesView>
attributes:
- uid: azure.purview.datamap.models.AtlasLineageInfo.base_entity_guid
  name: base_entity_guid
  summary: The GUID of the base entity.
  signature: 'base_entity_guid: str | None'
- uid: azure.purview.datamap.models.AtlasLineageInfo.children_count
  name: children_count
  summary: The number of children node.
  signature: 'children_count: int | None'
- uid: azure.purview.datamap.models.AtlasLineageInfo.guid_entity_map
  name: guid_entity_map
  summary: The GUID entity map.
  signature: 'guid_entity_map: Dict[str, _models.AtlasEntityHeader] | None'
- uid: azure.purview.datamap.models.AtlasLineageInfo.lineage_depth
  name: lineage_depth
  summary: The depth of lineage.
  signature: 'lineage_depth: int | None'
- uid: azure.purview.datamap.models.AtlasLineageInfo.lineage_direction
  name: lineage_direction
  summary: '"INPUT", "OUTPUT", and "BOTH".'
  signature: 'lineage_direction: str | _models.LineageDirection | None'
- uid: azure.purview.datamap.models.AtlasLineageInfo.lineage_width
  name: lineage_width
  summary: The width of lineage.
  signature: 'lineage_width: int | None'
- uid: azure.purview.datamap.models.AtlasLineageInfo.parent_relations
  name: parent_relations
  summary: An array of parentRelations relations.
  signature: 'parent_relations: List[_models.ParentRelation] | None'
- uid: azure.purview.datamap.models.AtlasLineageInfo.relations
  name: relations
  summary: An array of lineage relations.
  signature: 'relations: List[_models.LineageRelation] | None'
- uid: azure.purview.datamap.models.AtlasLineageInfo.width_counts
  name: width_counts
  summary: The entity count in specific direction.
  signature: 'width_counts: Dict[str, Dict[str, Any]] | None'
