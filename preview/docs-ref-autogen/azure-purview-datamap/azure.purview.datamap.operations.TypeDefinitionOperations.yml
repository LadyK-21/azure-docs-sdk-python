### YamlMime:PythonClass
uid: azure.purview.datamap.operations.TypeDefinitionOperations
name: TypeDefinitionOperations
fullName: azure.purview.datamap.operations.TypeDefinitionOperations
module: azure.purview.datamap.operations
summary: "> [!WARNING]\n> DO NOT instantiate this class directly.\n>\n> \n>\n> Instead,\
  \ you should access the following operations through\n>\n> <xref:azure.purview.datamap.DataMapClient>'s\n\
  >\n> <xref:type_definition> attribute.\n>"
constructor:
  syntax: TypeDefinitionOperations(*args, **kwargs)
methods:
- uid: azure.purview.datamap.operations.TypeDefinitionOperations.batch_create
  name: batch_create
  summary: Create all atlas type definitions in bulk. Please avoid recreating existing
    types.
  signature: 'batch_create(body: _models.AtlasTypesDef, *, content_type: str = ''application/json'',
    **kwargs: Any) -> _models.AtlasTypesDef'
  parameters:
  - name: body
    description: 'Body parameter. Is one of the following types: AtlasTypesDef, JSON,
      IO[bytes]

      Required.'
    isRequired: true
    types:
    - <xref:azure.purview.datamap.models.AtlasTypesDef>
    - <xref:JSON>
    - <xref:typing.IO>[<xref:bytes>]
  return:
    description: AtlasTypesDef. The AtlasTypesDef is compatible with MutableMapping
    types:
    - <xref:azure.purview.datamap.models.AtlasTypesDef>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.purview.datamap.operations.TypeDefinitionOperations.batch_delete
  name: batch_delete
  summary: Delete API for all types in bulk.
  signature: 'batch_delete(body: _models.AtlasTypesDef, *, content_type: str = ''application/json'',
    **kwargs: Any) -> None'
  parameters:
  - name: body
    description: 'Body parameter. Is one of the following types: AtlasTypesDef, JSON,
      IO[bytes]

      Required.'
    isRequired: true
    types:
    - <xref:azure.purview.datamap.models.AtlasTypesDef>
    - <xref:JSON>
    - <xref:typing.IO>[<xref:bytes>]
  return:
    description: None
    types:
    - <xref:None>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.purview.datamap.operations.TypeDefinitionOperations.batch_update
  name: batch_update
  summary: 'Update all types in bulk, changes detected in the type definitions would
    be

    persisted.'
  signature: 'batch_update(body: _models.AtlasTypesDef, *, content_type: str = ''application/json'',
    **kwargs: Any) -> _models.AtlasTypesDef'
  parameters:
  - name: body
    description: 'Body parameter. Is one of the following types: AtlasTypesDef, JSON,
      IO[bytes]

      Required.'
    isRequired: true
    types:
    - <xref:azure.purview.datamap.models.AtlasTypesDef>
    - <xref:JSON>
    - <xref:typing.IO>[<xref:bytes>]
  return:
    description: AtlasTypesDef. The AtlasTypesDef is compatible with MutableMapping
    types:
    - <xref:azure.purview.datamap.models.AtlasTypesDef>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.purview.datamap.operations.TypeDefinitionOperations.delete
  name: delete
  summary: Delete API for type identified by its name.
  signature: 'delete(name: str, **kwargs: Any) -> None'
  parameters:
  - name: name
    description: The name of the type. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: None
    types:
    - <xref:None>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.purview.datamap.operations.TypeDefinitionOperations.get
  name: get
  summary: List all type definitions in bulk.
  signature: 'get(*, include_term_template: bool | None = None, type: str | TypeCategory
    | None = None, **kwargs: Any) -> AtlasTypesDef'
  keywordOnlyParameters:
  - name: include_term_template
    description: 'Whether include termtemplatedef when return all typedefs.

      This is always true

      when search filter type=term_template. Default value is None.'
    defaultValue: None
    types:
    - <xref:bool>
  - name: type
    description: 'Typedef name as search filter when get typedefs. Known values are:
      "PRIMITIVE",

      "OBJECT_ID_TYPE", "ENUM", "STRUCT", "CLASSIFICATION", "ENTITY", "ARRAY", "MAP",
      "RELATIONSHIP",

      and "TERM_TEMPLATE". Default value is None.'
    defaultValue: None
    types:
    - <xref:str>
    - <xref:azure.purview.datamap.models.TypeCategory>
  return:
    description: AtlasTypesDef. The AtlasTypesDef is compatible with MutableMapping
    types:
    - <xref:azure.purview.datamap.models.AtlasTypesDef>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.purview.datamap.operations.TypeDefinitionOperations.get_business_metadata_by_id
  name: get_business_metadata_by_id
  summary: Get the businessMetadata definition for the given guid.
  signature: 'get_business_metadata_by_id(guid: str, **kwargs: Any) -> AtlasBusinessMetadataDef'
  parameters:
  - name: guid
    description: businessMetadata guid. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: 'AtlasBusinessMetadataDef. The AtlasBusinessMetadataDef is compatible
      with

      MutableMapping'
    types:
    - <xref:azure.purview.datamap.models.AtlasBusinessMetadataDef>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.purview.datamap.operations.TypeDefinitionOperations.get_business_metadata_by_name
  name: get_business_metadata_by_name
  summary: Get the businessMetadata definition by it's name (unique).
  signature: 'get_business_metadata_by_name(name: str, **kwargs: Any) -> AtlasBusinessMetadataDef'
  parameters:
  - name: name
    description: businessMetadata name. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: 'AtlasBusinessMetadataDef. The AtlasBusinessMetadataDef is compatible
      with

      MutableMapping'
    types:
    - <xref:azure.purview.datamap.models.AtlasBusinessMetadataDef>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.purview.datamap.operations.TypeDefinitionOperations.get_by_id
  name: get_by_id
  summary: Get the type definition for the given GUID.
  signature: 'get_by_id(guid: str, **kwargs: Any) -> AtlasTypeDef'
  parameters:
  - name: guid
    description: The globally unique identifier of the type. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: AtlasTypeDef. The AtlasTypeDef is compatible with MutableMapping
    types:
    - <xref:azure.purview.datamap.models.AtlasTypeDef>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.purview.datamap.operations.TypeDefinitionOperations.get_by_name
  name: get_by_name
  summary: Get the type definition by its name (unique).
  signature: 'get_by_name(name: str, **kwargs: Any) -> AtlasTypeDef'
  parameters:
  - name: name
    description: The name of the type. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: AtlasTypeDef. The AtlasTypeDef is compatible with MutableMapping
    types:
    - <xref:azure.purview.datamap.models.AtlasTypeDef>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.purview.datamap.operations.TypeDefinitionOperations.get_classification_by_id
  name: get_classification_by_id
  summary: Get the classification definition for the given GUID.
  signature: 'get_classification_by_id(guid: str, **kwargs: Any) -> AtlasClassificationDef'
  parameters:
  - name: guid
    description: The globally unique identifier of the classification. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: AtlasClassificationDef. The AtlasClassificationDef is compatible
      with MutableMapping
    types:
    - <xref:azure.purview.datamap.models.AtlasClassificationDef>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.purview.datamap.operations.TypeDefinitionOperations.get_classification_by_name
  name: get_classification_by_name
  summary: Get the classification definition by its name (unique).
  signature: 'get_classification_by_name(name: str, **kwargs: Any) -> AtlasClassificationDef'
  parameters:
  - name: name
    description: The name of the classification. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: AtlasClassificationDef. The AtlasClassificationDef is compatible
      with MutableMapping
    types:
    - <xref:azure.purview.datamap.models.AtlasClassificationDef>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.purview.datamap.operations.TypeDefinitionOperations.get_entity_by_id
  name: get_entity_by_id
  summary: Get the Entity definition for the given GUID.
  signature: 'get_entity_by_id(guid: str, **kwargs: Any) -> AtlasEntityDef'
  parameters:
  - name: guid
    description: The globally unique identifier of the entity. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: AtlasEntityDef. The AtlasEntityDef is compatible with MutableMapping
    types:
    - <xref:azure.purview.datamap.models.AtlasEntityDef>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.purview.datamap.operations.TypeDefinitionOperations.get_entity_by_name
  name: get_entity_by_name
  summary: Get the entity definition by its name (unique).
  signature: 'get_entity_by_name(name: str, **kwargs: Any) -> AtlasEntityDef'
  parameters:
  - name: name
    description: The name of the entity. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: AtlasEntityDef. The AtlasEntityDef is compatible with MutableMapping
    types:
    - <xref:azure.purview.datamap.models.AtlasEntityDef>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.purview.datamap.operations.TypeDefinitionOperations.get_enum_by_id
  name: get_enum_by_id
  summary: Get the enum definition for the given GUID.
  signature: 'get_enum_by_id(guid: str, **kwargs: Any) -> AtlasEnumDef'
  parameters:
  - name: guid
    description: The globally unique identifier of the enum. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: AtlasEnumDef. The AtlasEnumDef is compatible with MutableMapping
    types:
    - <xref:azure.purview.datamap.models.AtlasEnumDef>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.purview.datamap.operations.TypeDefinitionOperations.get_enum_by_name
  name: get_enum_by_name
  summary: Get the enum definition by its name (unique).
  signature: 'get_enum_by_name(name: str, **kwargs: Any) -> AtlasEnumDef'
  parameters:
  - name: name
    description: The name of the enum. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: AtlasEnumDef. The AtlasEnumDef is compatible with MutableMapping
    types:
    - <xref:azure.purview.datamap.models.AtlasEnumDef>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.purview.datamap.operations.TypeDefinitionOperations.get_headers
  name: get_headers
  summary: List all type definitions returned as a list of minimal information header.
  signature: 'get_headers(*, include_term_template: bool | None = None, type: str
    | TypeCategory | None = None, **kwargs: Any) -> List[AtlasTypeDefHeader]'
  keywordOnlyParameters:
  - name: include_term_template
    description: 'Whether include termtemplatedef when return all typedefs.

      This is always true

      when search filter type=term_template. Default value is None.'
    defaultValue: None
    types:
    - <xref:bool>
  - name: type
    description: 'Typedef name as search filter when get typedefs. Known values are:
      "PRIMITIVE",

      "OBJECT_ID_TYPE", "ENUM", "STRUCT", "CLASSIFICATION", "ENTITY", "ARRAY", "MAP",
      "RELATIONSHIP",

      and "TERM_TEMPLATE". Default value is None.'
    defaultValue: None
    types:
    - <xref:str>
    - <xref:azure.purview.datamap.models.TypeCategory>
  return:
    description: list of AtlasTypeDefHeader
    types:
    - <xref:list>[<xref:azure.purview.datamap.models.AtlasTypeDefHeader>]
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.purview.datamap.operations.TypeDefinitionOperations.get_relationship_by_id
  name: get_relationship_by_id
  summary: Get the relationship definition for the given GUID.
  signature: 'get_relationship_by_id(guid: str, **kwargs: Any) -> AtlasRelationshipDef'
  parameters:
  - name: guid
    description: The globally unique identifier of the relationship. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: AtlasRelationshipDef. The AtlasRelationshipDef is compatible with
      MutableMapping
    types:
    - <xref:azure.purview.datamap.models.AtlasRelationshipDef>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.purview.datamap.operations.TypeDefinitionOperations.get_relationship_by_name
  name: get_relationship_by_name
  summary: Get the relationship definition by its name (unique).
  signature: 'get_relationship_by_name(name: str, **kwargs: Any) -> AtlasRelationshipDef'
  parameters:
  - name: name
    description: The name of the relationship. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: AtlasRelationshipDef. The AtlasRelationshipDef is compatible with
      MutableMapping
    types:
    - <xref:azure.purview.datamap.models.AtlasRelationshipDef>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.purview.datamap.operations.TypeDefinitionOperations.get_struct_by_id
  name: get_struct_by_id
  summary: Get the struct definition for the given GUID.
  signature: 'get_struct_by_id(guid: str, **kwargs: Any) -> AtlasStructDef'
  parameters:
  - name: guid
    description: The globally unique identifier of the struct. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: AtlasStructDef. The AtlasStructDef is compatible with MutableMapping
    types:
    - <xref:azure.purview.datamap.models.AtlasStructDef>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.purview.datamap.operations.TypeDefinitionOperations.get_struct_by_name
  name: get_struct_by_name
  summary: Get the struct definition by its name (unique).
  signature: 'get_struct_by_name(name: str, **kwargs: Any) -> AtlasStructDef'
  parameters:
  - name: name
    description: The name of the struct. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: AtlasStructDef. The AtlasStructDef is compatible with MutableMapping
    types:
    - <xref:azure.purview.datamap.models.AtlasStructDef>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.purview.datamap.operations.TypeDefinitionOperations.get_term_template_by_id
  name: get_term_template_by_id
  summary: Get the term template definition for the given GUID.
  signature: 'get_term_template_by_id(guid: str, **kwargs: Any) -> TermTemplateDef'
  parameters:
  - name: guid
    description: The globally unique identifier of the term template. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: TermTemplateDef. The TermTemplateDef is compatible with MutableMapping
    types:
    - <xref:azure.purview.datamap.models.TermTemplateDef>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
- uid: azure.purview.datamap.operations.TypeDefinitionOperations.get_term_template_by_name
  name: get_term_template_by_name
  summary: Get the term template definition by its name (unique).
  signature: 'get_term_template_by_name(name: str, **kwargs: Any) -> TermTemplateDef'
  parameters:
  - name: name
    description: The unique name of the term template. Required.
    isRequired: true
    types:
    - <xref:str>
  return:
    description: TermTemplateDef. The TermTemplateDef is compatible with MutableMapping
    types:
    - <xref:azure.purview.datamap.models.TermTemplateDef>
  exceptions:
  - type: azure.core.exceptions.HttpResponseError
