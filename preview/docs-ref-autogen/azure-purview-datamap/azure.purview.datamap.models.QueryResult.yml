### YamlMime:PythonClass
uid: azure.purview.datamap.models.QueryResult
name: QueryResult
fullName: azure.purview.datamap.models.QueryResult
module: azure.purview.datamap.models
summary: The result of the search result.
constructor:
  syntax: 'QueryResult(*args: Any, **kwargs: Any)'
variables:
- description: 'The total number of search results (not the number of documents in
    a single

    page).'
  name: search_count
  types:
  - <xref:int>
- description: '''True'' if the <xref:mailto:''@search.count>'' is an approximate
    value and vise

    versa.'
  name: search_count_approximate
  types:
  - <xref:bool>
- description: 'The token used to get next batch of data. Absent if there''s no more

    data.'
  name: continuation_token
  types:
  - <xref:str>
- description: 'A facet list that consists of index fields assetType ,classification,

    contactId, and label. When the facet is specified in the request, the value of

    the facet is returned as an element of @search.facets.'
  name: search_facets
  types:
  - <xref:azure.purview.datamap.models.SearchFacetResultValue>
- description: Search result value.
  name: value
  types:
  - <xref:list>[<xref:azure.purview.datamap.models.SearchResultValue>]
methods:
- uid: azure.purview.datamap.models.QueryResult.as_dict
  name: as_dict
  summary: Return a dict that can be turned into json using json.dump.
  signature: 'as_dict(*, exclude_readonly: bool = False) -> Dict[str, Any]'
  keywordOnlyParameters:
  - name: exclude_readonly
    description: Whether to remove the readonly properties.
    defaultValue: 'False'
    types:
    - <xref:bool>
  return:
    description: A dict JSON compatible object
    types:
    - <xref:dict>
- uid: azure.purview.datamap.models.QueryResult.clear
  name: clear
  summary: Remove all items from D.
  signature: clear() -> None
- uid: azure.purview.datamap.models.QueryResult.copy
  name: copy
  signature: copy() -> Model
- uid: azure.purview.datamap.models.QueryResult.get
  name: get
  summary: 'Get the value for key if key is in the dictionary, else default.

    :param str key: The key to look up.

    :param any default: The value to return if key is not in the dictionary. Defaults
    to None

    :returns: D[k] if k in D, else d.

    :rtype: any'
  signature: 'get(key: str, default: Any = None) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
    defaultValue: None
- uid: azure.purview.datamap.models.QueryResult.items
  name: items
  signature: items() -> ItemsView[str, Any]
  return:
    description: set-like object providing a view on D's items
    types:
    - <xref:typing.ItemsView>
- uid: azure.purview.datamap.models.QueryResult.keys
  name: keys
  signature: keys() -> KeysView[str]
  return:
    description: a set-like object providing a view on D's keys
    types:
    - <xref:typing.KeysView>
- uid: azure.purview.datamap.models.QueryResult.pop
  name: pop
  summary: 'Removes specified key and return the corresponding value.

    :param str key: The key to pop.

    :param any default: The value to return if key is not in the dictionary

    :returns: The value corresponding to the key.

    :rtype: any

    :raises KeyError: If key is not found and default is not given.'
  signature: 'pop(key: str, default: ~typing.Any = <object object>) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
- uid: azure.purview.datamap.models.QueryResult.popitem
  name: popitem
  summary: 'Removes and returns some (key, value) pair

    :returns: The (key, value) pair.

    :rtype: tuple

    :raises KeyError: if D is empty.'
  signature: popitem() -> Tuple[str, Any]
- uid: azure.purview.datamap.models.QueryResult.setdefault
  name: setdefault
  summary: 'Same as calling D.get(k, d), and setting D[k]=d if k not found

    :param str key: The key to look up.

    :param any default: The value to set if key is not in the dictionary

    :returns: D[k] if k in D, else d.

    :rtype: any'
  signature: 'setdefault(key: str, default: ~typing.Any = <object object>) -> Any'
  parameters:
  - name: key
    isRequired: true
  - name: default
- uid: azure.purview.datamap.models.QueryResult.update
  name: update
  summary: 'Updates D from mapping/iterable E and F.

    :param any args: Either a mapping object or an iterable of key-value pairs.'
  signature: 'update(*args: Any, **kwargs: Any) -> None'
- uid: azure.purview.datamap.models.QueryResult.values
  name: values
  signature: values() -> ValuesView[Any]
  return:
    description: an object providing a view on D's values
    types:
    - <xref:typing.ValuesView>
attributes:
- uid: azure.purview.datamap.models.QueryResult.continuation_token
  name: continuation_token
  summary: The token used to get next batch of data. Absent if there's no more data.
  signature: 'continuation_token: str | None'
- uid: azure.purview.datamap.models.QueryResult.search_count
  name: search_count
  summary: 'The total number of search results (not the number of documents in a single

    page).'
  signature: 'search_count: int | None'
- uid: azure.purview.datamap.models.QueryResult.search_count_approximate
  name: search_count_approximate
  summary: '''True'' if the <xref:mailto:''@search.count>'' is an approximate value
    and vise versa.'
  signature: 'search_count_approximate: bool | None'
- uid: azure.purview.datamap.models.QueryResult.search_facets
  name: search_facets
  summary: 'A facet list that consists of index fields assetType ,classification,

    contactId, and label. When the facet is specified in the request, the value of

    the facet is returned as an element of @search.facets.'
  signature: 'search_facets: _models.SearchFacetResultValue | None'
- uid: azure.purview.datamap.models.QueryResult.value
  name: value
  summary: Search result value.
  signature: 'value: List[_models.SearchResultValue] | None'
