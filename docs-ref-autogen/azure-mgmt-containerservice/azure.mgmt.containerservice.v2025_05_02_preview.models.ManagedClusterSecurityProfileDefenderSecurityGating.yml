### YamlMime:PythonClass
uid: azure.mgmt.containerservice.v2025_05_02_preview.models.ManagedClusterSecurityProfileDefenderSecurityGating
name: ManagedClusterSecurityProfileDefenderSecurityGating
fullName: azure.mgmt.containerservice.v2025_05_02_preview.models.ManagedClusterSecurityProfileDefenderSecurityGating
module: azure.mgmt.containerservice.v2025_05_02_preview.models
summary: 'Microsoft Defender settings for security gating, validates container images
  eligibility for

  deployment based on Defender for Containers security findings. Using Admission Controller,
  it

  either audits or prevents the deployment of images that do not meet security standards.'
constructor:
  syntax: 'ManagedClusterSecurityProfileDefenderSecurityGating(*, enabled: bool |
    None = None, identities: List[_models.ManagedClusterSecurityProfileDefenderSecurityGatingIdentitiesItem]
    | None = None, allow_secret_access: bool | None = None, **kwargs: Any)'
  keywordOnlyParameters:
  - name: enabled
    description: 'Whether to enable Defender security gating. When enabled, the gating
      feature

      will scan container images and audit or block the deployment of images that
      do not meet

      security standards according to the configured security rules.'
    defaultValue: None
    types:
    - <xref:bool>
  - name: identities
    description: 'List of identities that the admission controller will make use of
      in order

      to pull security artifacts from the registry. These are the same identities
      used by the cluster

      to pull container images. Each identity provided should have federated identity
      credential

      attached to it.'
    defaultValue: None
    types:
    - <xref:list>[<xref:azure.mgmt.containerservice.v2025_05_02_preview.models.ManagedClusterSecurityProfileDefenderSecurityGatingIdentitiesItem>]
  - name: allow_secret_access
    description: 'In use only while registry access granted by secret rather than

      managed identity. Set whether to grant the Defender gating agent access to the
      cluster''s

      secrets for pulling images from registries. If secret access is denied and the
      registry

      requires pull secrets, the add-on will not perform any image validation. Default
      value is

      false.'
    defaultValue: None
    types:
    - <xref:bool>
variables:
- description: 'Whether to enable Defender security gating. When enabled, the gating
    feature

    will scan container images and audit or block the deployment of images that do
    not meet

    security standards according to the configured security rules.'
  name: enabled
  types:
  - <xref:bool>
- description: 'List of identities that the admission controller will make use of
    in order to

    pull security artifacts from the registry. These are the same identities used
    by the cluster to

    pull container images. Each identity provided should have federated identity credential

    attached to it.'
  name: identities
  types:
  - <xref:list>[<xref:azure.mgmt.containerservice.v2025_05_02_preview.models.ManagedClusterSecurityProfileDefenderSecurityGatingIdentitiesItem>]
- description: 'In use only while registry access granted by secret rather than

    managed identity. Set whether to grant the Defender gating agent access to the
    cluster''s

    secrets for pulling images from registries. If secret access is denied and the
    registry

    requires pull secrets, the add-on will not perform any image validation. Default
    value is

    false.'
  name: allow_secret_access
  types:
  - <xref:bool>
