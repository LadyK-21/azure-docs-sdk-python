### YamlMime:PythonClass
uid: azure.cognitiveservices.speech.diagnostics.logging.EventLogger
name: EventLogger
fullName: azure.cognitiveservices.speech.diagnostics.logging.EventLogger
module: azure.cognitiveservices.speech.diagnostics.logging
summary: 'A static class to control event-based SDK logging.

  Turning on logging while running your Speech SDK scenario provides

  detailed information from the SDK''s core native components. If you

  report an issue to Microsoft, you may be asked to provide logs to help

  Microsoft diagnose the issue. Your application should not take dependency

  on particular log strings, as they may change from one SDK release to another

  without notice.

  Use EventLogger when you want to get access to new log strings as soon

  as they are available, and you need to further process them. For example,

  integrating Speech SDK logs with your existing logging collection system.

  Added in version 1.43.0


  Event logging is a process wide construct. That means that if (for example)

  you have multiple speech recognizer objects running in parallel, you can only register

  one callback function to receive interleaved logs from all recognizers. You cannot
  register

  a separate callback for each recognizer.'
constructor:
  syntax: EventLogger()
methods:
- uid: azure.cognitiveservices.speech.diagnostics.logging.EventLogger.set_callback
  name: set_callback
  summary: Sets event message logging handler.
  signature: 'static set_callback(handler: Callable[[str], None] = None)'
  parameters:
  - name: callback
    description: Event message handler. None to remove the handler from the logger.
    isRequired: true
  - name: handler
    defaultValue: None
- uid: azure.cognitiveservices.speech.diagnostics.logging.EventLogger.set_filters
  name: set_filters
  summary: 'Sets filters for logging event messages.

    Once filters are set, event logger will only be updated with log strings

    containing at least one of the strings specified by the filters. The match is
    case sensitive.'
  signature: 'static set_filters(filters: List[str] = [])'
  parameters:
  - name: filters
    description: Filters to use, or an empty list to remove previously set filters.
    defaultValue: '[]'
- uid: azure.cognitiveservices.speech.diagnostics.logging.EventLogger.set_level
  name: set_level
  summary: Sets the level of the messages to be captured by the logger.
  signature: 'static set_level(level: LogLevel = LogLevel.Info)'
  parameters:
  - name: level
    description: Maximum level of detail to be captured by the logger.
    defaultValue: LogLevel.Info
