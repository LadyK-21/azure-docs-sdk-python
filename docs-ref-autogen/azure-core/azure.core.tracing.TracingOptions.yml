### YamlMime:PythonClass
uid: azure.core.tracing.TracingOptions
name: TracingOptions
fullName: azure.core.tracing.TracingOptions
module: azure.core.tracing
summary: Options to configure tracing behavior for operations.
constructor:
  syntax: TracingOptions()
methods:
- uid: azure.core.tracing.TracingOptions.clear
  name: clear
  signature: clear() -> None.  Remove all items from D.
- uid: azure.core.tracing.TracingOptions.copy
  name: copy
  signature: copy() -> a shallow copy of D
- uid: azure.core.tracing.TracingOptions.fromkeys
  name: fromkeys
  summary: Create a new dictionary with keys from iterable and values set to value.
  signature: fromkeys(value=None, /)
  positionalOnlyParameters:
  - name: iterable
    isRequired: true
  - name: value
    defaultValue: None
- uid: azure.core.tracing.TracingOptions.get
  name: get
  summary: Return the value for key if key is in the dictionary, else default.
  signature: get(key, default=None, /)
  positionalOnlyParameters:
  - name: key
    isRequired: true
  - name: default
    defaultValue: None
- uid: azure.core.tracing.TracingOptions.items
  name: items
  signature: items() -> a set-like object providing a view on D's items
- uid: azure.core.tracing.TracingOptions.keys
  name: keys
  signature: keys() -> a set-like object providing a view on D's keys
- uid: azure.core.tracing.TracingOptions.pop
  name: pop
  summary: 'If the key is not found, return the default if given; otherwise,

    raise a KeyError.'
  signature: pop(k, [d]) -> v, remove specified key and return the corresponding value.
- uid: azure.core.tracing.TracingOptions.popitem
  name: popitem
  summary: 'Remove and return a (key, value) pair as a 2-tuple.


    Pairs are returned in LIFO (last-in, first-out) order.

    Raises KeyError if the dict is empty.'
  signature: popitem()
- uid: azure.core.tracing.TracingOptions.setdefault
  name: setdefault
  summary: 'Insert key with a value of default if key is not in the dictionary.


    Return the value for key if key is in the dictionary, else default.'
  signature: setdefault(key, default=None, /)
  positionalOnlyParameters:
  - name: key
    isRequired: true
  - name: default
    defaultValue: None
- uid: azure.core.tracing.TracingOptions.update
  name: update
  summary: 'If E is present and has a .keys() method, then does:  for k in E: D[k]
    = E[k]

    If E is present and lacks a .keys() method, then does:  for k, v in E: D[k] =
    v

    In either case, this is followed by: for k in F:  D[k] = F[k]'
  signature: update([E], **F) -> None.  Update D from dict/iterable E and F.
- uid: azure.core.tracing.TracingOptions.values
  name: values
  signature: values() -> an object providing a view on D's values
attributes:
- uid: azure.core.tracing.TracingOptions.attributes
  name: attributes
  summary: Attributes to include in the spans emitted for the operation.
  signature: 'attributes: Mapping[str, str | bool | int | float | Sequence[str] |
    Sequence[bool] | Sequence[int] | Sequence[float]]'
- uid: azure.core.tracing.TracingOptions.enabled
  name: enabled
  summary: 'Whether tracing is enabled for the operation. By default, if the global
    setting is enabled, tracing is

    enabled for all operations. This option can be used to override the global setting
    for a specific operation.'
  signature: 'enabled: bool'
